import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest23 {

    public static boolean debug = false;

    @Test
    public void test11501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11501");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean32 = type30.equals((java.lang.Object) 180);
        java.lang.String str33 = type30.toString();
        java.lang.String str34 = type30.getDescriptor();
        int int35 = type30.getSort();
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter0.newValue(type30);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        int int38 = type37.getSort();
        java.lang.String str39 = type37.getDescriptor();
        java.lang.String str40 = type37.getDescriptor();
        java.lang.String str41 = type37.getClassName();
        java.lang.String str42 = type37.getClassName();
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.newValue(type37);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass45 = basicInterpreter44.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        java.lang.String str48 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        java.lang.String str52 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type54 = type53.getElementType();
        java.lang.String str55 = type54.getDescriptor();
        java.lang.String str56 = type54.getInternalName();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.newValue(type54);
        java.lang.String str58 = type54.getDescriptor();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "C" + "'", str39, "C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "char" + "'", str41, "char");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "char" + "'", str42, "char");
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str46, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str48, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str50, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str52, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Lg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str55, "Lg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "g/mockito/asm/tree/analysis/BasicInterpreter" + "'", str56, "g/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str58, "Lg/mockito/asm/tree/analysis/BasicInterpreter;");
    }

    @Test
    public void test11502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11502");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray3 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str4 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray3);
        java.lang.Class<?> wildcardClass5 = type0.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        int int8 = type6.getOpcode(141);
        java.lang.String str9 = type6.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean12 = type10.equals((java.lang.Object) 180);
        java.lang.String str13 = type10.toString();
        java.lang.String str14 = type10.toString();
        int int16 = type10.getOpcode(172);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type19 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str21 = type20.toString();
        int int22 = type20.getSort();
        java.lang.String str23 = type20.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        int int30 = type28.getSort();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type28, type31, type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter24.newValue(type26);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean39 = type37.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean45 = type43.equals((java.lang.Object) 180);
        java.lang.String str46 = type43.toString();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type26, type36, type37, type41, type43, type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type53, type56, type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.toString();
        int int65 = type63.getSort();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type63, type66, type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray68);
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray68);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray68);
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray68);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray68);
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray68);
        int int76 = type6.getDimensions();
        org.mockito.asm.Type type77 = type6.getElementType();
        int int79 = type6.getOpcode(1029);
        java.lang.String str80 = type6.getInternalName();
        int int82 = type6.getOpcode(21);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(I)V" + "'", str4, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 145 + "'", int8 == 145);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.mockito.asm.Type" + "'", str9, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "C" + "'", str13, "C");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "C" + "'", str14, "C");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 172 + "'", int16 == 172);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "V" + "'", str21, "V");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "V" + "'", str23, "V");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VVI)J" + "'", str34, "(VVI)J");
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "C" + "'", str46, "C");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(JDCJCI)V" + "'", str49, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(VVI)J" + "'", str69, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VVI)J" + "'", str70, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)V" + "'", str71, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)I" + "'", str72, "(VVI)I");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)LLorg/mockito/asm/Type;;" + "'", str73, "(VVI)LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)C" + "'", str74, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str75, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1033 + "'", int79 == 1033);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org/mockito/asm/Type" + "'", str80, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 25 + "'", int82 == 25);
    }

    @Test
    public void test11503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11503");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        boolean boolean22 = type1.equals((java.lang.Object) basicInterpreter10);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter24.ternaryOperation(abstractInsnNode25, value30, value36, value42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter24.newValue(type45);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type51 = null;
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter50.newValue(type51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter24.copyOperation(abstractInsnNode49, value52);
        org.mockito.asm.tree.analysis.Value value54 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str57 = type56.toString();
        int int58 = type56.getSort();
        java.lang.String str59 = type56.getDescriptor();
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean63 = type61.equals((java.lang.Object) 180);
        java.lang.String str64 = type61.toString();
        java.lang.String str65 = type61.getDescriptor();
        int int66 = type61.getSort();
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier55.newValue(type61);
        java.lang.Throwable throwable70 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable70);
        java.lang.Throwable[] throwableArray72 = analyzerException71.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException71.addSuppressed((java.lang.Throwable) analyzerException75);
        java.lang.Throwable throwable79 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException80);
        analyzerException75.addSuppressed((java.lang.Throwable) analyzerException81);
        java.lang.Class<?> wildcardClass83 = analyzerException75.getClass();
        java.lang.String str84 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass83);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier55.newValue(type85);
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter10.ternaryOperation(abstractInsnNode23, value52, value54, value86);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: F");
        int int90 = type89.getDimensions();
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter10.newValue(type89);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode92 = null;
        org.mockito.asm.tree.analysis.Value value93 = null;
        org.mockito.asm.tree.analysis.Value value94 = basicInterpreter10.copyOperation(abstractInsnNode92, value93);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value96 = basicInterpreter10.newOperation(abstractInsnNode95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(value48);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "V" + "'", str57, "V");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "V" + "'", str59, "V");
        org.junit.Assert.assertNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "C" + "'", str64, "C");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "C" + "'", str65, "C");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str84, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNull(value94);
    }

    @Test
    public void test11504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11504");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType("LC;");
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier0.newValue(type10);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type14 = type13.getElementType();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.newValue(type13);
        int int17 = type13.getOpcode(109);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 113 + "'", int17 == 113);
    }

    @Test
    public void test11505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11505");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.Value value4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter0.copyOperation(abstractInsnNode3, value4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getReturnType("(I)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter0.newValue(type7);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str12 = type11.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str27 = type26.toString();
        int int28 = type26.getSort();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type26, type29, type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray31);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray31);
        int int35 = type11.getSize();
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter10.newValue(type11);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.copyOperation(abstractInsnNode9, value36);
        org.mockito.asm.Type type38 = null;
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.copyOperation(abstractInsnNode40, value43);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type52, type55, type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter48.newValue(type50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        int int63 = value62.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter48, value62);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass66 = type65.getClass();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        int int68 = type67.getSort();
        int int69 = type67.getSize();
        int int70 = type67.getDimensions();
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter48.newValue(type67);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter0.copyOperation(abstractInsnNode46, value71);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode74 = null;
        java.util.List list75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.naryOperation(abstractInsnNode74, list75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "char" + "'", str12, "char");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(VVI)J" + "'", str32, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(VVI)J" + "'", str33, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VVI)C" + "'", str34, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)J" + "'", str58, "(VVI)J");
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
    }

    @Test
    public void test11506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11506");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        int int29 = type24.getOpcode(132);
        int int30 = type24.getSize();
        java.lang.String str31 = type24.getClassName();
        java.lang.String str32 = type24.getClassName();
        int int33 = type24.getSize();
        java.lang.String str34 = type24.getDescriptor();
        java.lang.String str35 = type24.getClassName();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 133 + "'", int29 == 133);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "long" + "'", str31, "long");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "long" + "'", str32, "long");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "J" + "'", str34, "J");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "long" + "'", str35, "long");
    }

    @Test
    public void test11507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11507");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter9.ternaryOperation(abstractInsnNode10, value15, value21, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter9.merge(value34, value47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter9.newValue(type49);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        int int56 = type55.getSort();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter9.newValue(type55);
        java.lang.String str58 = type55.getClassName();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str61 = type60.getClassName();
        org.mockito.asm.Type[] typeArray63 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray63);
        java.lang.String str66 = type55.toString();
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier0.newValue(type55);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getObjectType("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V;");
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier0.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass72 = type71.getClass();
        java.lang.String str73 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass72);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass72);
        org.mockito.asm.Type type76 = type75.getElementType();
        java.lang.String str77 = type76.getInternalName();
        org.mockito.asm.Type[] typeArray79 = org.mockito.asm.Type.getArgumentTypes("(I)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;");
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray79);
        java.lang.String str81 = type76.getDescriptor();
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier0.newValue(type76);
        int int83 = type76.getSort();
        int int84 = type76.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(I)V" + "'", str53, "(I)V");
        org.junit.Assert.assertNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "char" + "'", str58, "char");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "void" + "'", str61, "void");
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(I)V" + "'", str64, "(I)V");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(I)C" + "'", str65, "(I)C");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "C" + "'", str66, "C");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str73, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "g/mockito/asm/Type" + "'", str77, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(I)Lg/mockito/asm/Type;" + "'", str80, "(I)Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Lg/mockito/asm/Type;" + "'", str81, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test11508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11508");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        boolean boolean22 = type1.equals((java.lang.Object) basicInterpreter10);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str26 = type25.toString();
        int int27 = type25.getSort();
        java.lang.String str28 = type25.getDescriptor();
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier24.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int37 = type35.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier33.newValue(type35);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter40 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter40.ternaryOperation(abstractInsnNode41, value46, value52, value58);
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier24.merge(value38, value58);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass63 = type62.getClass();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        int int65 = type64.getSort();
        java.lang.String str66 = type64.toString();
        java.lang.String str67 = type64.toString();
        java.lang.String str68 = type64.getClassName();
        java.lang.String str69 = type64.toString();
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier24.newValue(type64);
        int int71 = value70.getSize();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter10.copyOperation(abstractInsnNode23, value70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str75 = type74.toString();
        int int76 = type74.getSort();
        boolean boolean78 = type74.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier73.newValue(type74);
        int int80 = type74.getSort();
        int int82 = type74.getOpcode(191);
        java.lang.String str83 = type74.getDescriptor();
        int int85 = type74.getOpcode(101);
        java.lang.String str86 = type74.toString();
        int int88 = type74.getOpcode(178);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter10.newValue(type74);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getObjectType("(JDCJCI)C");
        int int92 = type91.getSize();
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter10.newValue(type91);
        int int94 = value93.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "V" + "'", str26, "V");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 87 + "'", int37 == 87);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNull(value60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str66, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str67, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.mockito.asm.Type" + "'", str68, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str69, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 196 + "'", int82 == 196);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "V" + "'", str83, "V");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 106 + "'", int85 == 106);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "V" + "'", str86, "V");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 183 + "'", int88 == 183);
        org.junit.Assert.assertNull(value89);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test11509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11509");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type33, type36, type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter29.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter29, value43);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass47 = type46.getClass();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        int int49 = type48.getSort();
        int int50 = type48.getSize();
        int int51 = type48.getDimensions();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter29.newValue(type48);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("mockito.asm.Type");
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter29.newValue(type54);
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter0.copyOperation(abstractInsnNode27, value55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        org.mockito.asm.tree.analysis.Value value58 = null;
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter0.copyOperation(abstractInsnNode57, value58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean62 = type60.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass63 = type60.getClass();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        int int66 = type64.getOpcode(0);
        org.mockito.asm.Type type67 = type64.getElementType();
        int int69 = type64.getOpcode(149);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type64);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value72 = basicInterpreter0.newOperation(abstractInsnNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)J" + "'", str39, "(VVI)J");
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 153 + "'", int69 == 153);
        org.junit.Assert.assertNotNull(value70);
    }

    @Test
    public void test11510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11510");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.ternaryOperation(abstractInsnNode3, value8, value14, value20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter2.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = type26.getSize();
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter2.newValue(type26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode31 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value48);
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter30.ternaryOperation(abstractInsnNode31, value36, value42, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value55);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter57 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.toString();
        int int63 = type61.getSort();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type61, type64, type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter57.newValue(type59);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter30.merge(value55, value68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str71 = type70.toString();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter30.newValue(type70);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter30.newValue(type77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean81 = type79.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass82 = type79.getClass();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        int int85 = type83.getOpcode(0);
        java.lang.String str86 = type83.getInternalName();
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter30.newValue(type83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: char: expected L(I)V;, but found J", (java.lang.Object) value29, value87);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("(JDCJCI)Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException88);
        java.lang.Throwable[] throwableArray90 = analyzerException89.getSuppressed();
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNull(value50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VVI)J" + "'", str67, "(VVI)J");
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "V" + "'", str71, "V");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(I)V" + "'", str74, "(I)V");
        org.junit.Assert.assertNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 4 + "'", int85 == 4);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org/mockito/asm/Type" + "'", str86, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test11511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11511");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type4, type7, type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type2);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value31);
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter13.ternaryOperation(abstractInsnNode14, value19, value25, value31);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str35 = type34.toString();
        int int36 = type34.getSort();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter13.newValue(type34);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter39 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type40 = null;
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter39.newValue(type40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter13.copyOperation(abstractInsnNode38, value41);
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.copyOperation(abstractInsnNode12, value42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str45 = type44.toString();
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter0.newValue(type44);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type49 = null;
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter48.newValue(type49);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode51 = null;
        org.mockito.asm.tree.analysis.Value value52 = null;
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter48.copyOperation(abstractInsnNode51, value52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("(I)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter48.newValue(type55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str60 = type59.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str65 = type64.toString();
        int int66 = type64.getSort();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type64, type67, type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str75 = type74.toString();
        int int76 = type74.getSort();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type74, type77, type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray79);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray79);
        int int83 = type59.getSize();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter58.newValue(type59);
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter48.copyOperation(abstractInsnNode57, value84);
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter0.copyOperation(abstractInsnNode47, value85);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.newOperation(abstractInsnNode87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(VVI)J" + "'", str10, "(VVI)J");
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "V" + "'", str35, "V");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "S" + "'", str45, "S");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "char" + "'", str60, "char");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "V" + "'", str65, "V");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VVI)J" + "'", str70, "(VVI)J");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VVI)J" + "'", str80, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)J" + "'", str81, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)C" + "'", str82, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value86);
    }

    @Test
    public void test11512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11512");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("I)LVVI)Lorg.mockito.asm.Type");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable7 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable7);
        java.lang.Throwable[] throwableArray9 = analyzerException8.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException8);
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException8);
        java.lang.Throwable[] throwableArray12 = analyzerException8.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)V", (java.lang.Throwable) analyzerException8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable18 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable18);
        java.lang.Throwable[] throwableArray20 = analyzerException19.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException19);
        analyzerException15.addSuppressed((java.lang.Throwable) analyzerException19);
        java.lang.Throwable[] throwableArray23 = analyzerException15.getSuppressed();
        analyzerException8.addSuppressed((java.lang.Throwable) analyzerException15);
        java.lang.Class<?> wildcardClass25 = analyzerException8.getClass();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter27.ternaryOperation(abstractInsnNode28, value33, value39, value45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value52);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter54 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str59 = type58.toString();
        int int60 = type58.getSort();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type58, type61, type62 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray63);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter54.newValue(type56);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter27.merge(value52, value65);
        java.lang.Class<?> wildcardClass67 = value65.getClass();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass67);
        int int70 = type68.getOpcode(0);
        int int71 = type68.getSize();
        int int72 = type68.getDimensions();
        org.mockito.asm.Type[] typeArray74 = org.mockito.asm.Type.getArgumentTypes("(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray74);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray74);
        int int78 = type26.getOpcode(188);
        int int79 = type26.getSize();
        boolean boolean80 = type1.equals((java.lang.Object) int79);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "V" + "'", str59, "V");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VVI)J" + "'", str64, "(VVI)J");
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 4 + "'", int70 == 4);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str75, "(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str76, "(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 192 + "'", int78 == 192);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test11513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11513");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter36.ternaryOperation(abstractInsnNode37, value42, value48, value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value61);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter63 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str68 = type67.toString();
        int int69 = type67.getSort();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type67, type70, type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter63.newValue(type65);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter36.merge(value61, value74);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.copyOperation(abstractInsnNode35, value74);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean80 = type78.equals((java.lang.Object) 88);
        int int81 = type78.getSize();
        java.lang.String str82 = type78.getDescriptor();
        int int84 = type78.getOpcode(119);
        int int85 = type78.getSort();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter0.newValue(type78);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.newOperation(abstractInsnNode87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNull(value56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "V" + "'", str68, "V");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)J" + "'", str73, "(VVI)J");
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L(I)V;" + "'", str82, "L(I)V;");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 123 + "'", int84 == 123);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertNotNull(value86);
    }

    @Test
    public void test11514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11514");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean2 = type0.equals((java.lang.Object) 180);
        java.lang.String str3 = type0.toString();
        java.lang.String str4 = type0.toString();
        int int6 = type0.getOpcode(172);
        int int7 = type0.getSize();
        int int9 = type0.getOpcode(260);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str12 = type11.toString();
        int int13 = type11.getSort();
        java.lang.String str14 = type11.getDescriptor();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type25 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type21, type24, type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter17.newValue(type19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter17, value31);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass35 = type34.getClass();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        int int37 = type36.getSort();
        int int38 = type36.getSize();
        int int39 = type36.getDimensions();
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter17.newValue(type36);
        java.lang.String str41 = type36.toString();
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier10.newValue(type36);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter43.ternaryOperation(abstractInsnNode44, value49, value55, value61);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter43.newValue(type64);
        int int67 = type64.getOpcode(54);
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier10.newValue(type64);
        org.mockito.asm.Type[] typeArray70 = org.mockito.asm.Type.getArgumentTypes("(I)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray70);
        boolean boolean72 = type0.equals((java.lang.Object) str71);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "C" + "'", str3, "C");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "C" + "'", str4, "C");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 172 + "'", int6 == 172);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 260 + "'", int9 == 260);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertNull(value15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(VVI)J" + "'", str27, "(VVI)J");
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str41, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 56 + "'", int67 == 56);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(I)F" + "'", str71, "(I)F");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test11515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11515");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)V");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: char: expected char, but found I", (java.lang.Throwable) analyzerException2);
        java.lang.Object obj5 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str11 = type10.toString();
        int int12 = type10.getSort();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type10, type13, type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter6.newValue(type8);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter20 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter20.ternaryOperation(abstractInsnNode21, value26, value32, value38);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier19.merge(value26, value61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean65 = type63.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass66 = type63.getClass();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        java.lang.String str68 = type67.toString();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str70 = type69.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str75 = type74.toString();
        int int76 = type74.getSort();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type74, type77, type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str85 = type84.toString();
        int int86 = type84.getSort();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type88 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type84, type87, type88 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray89);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray89);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray89);
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray89);
        org.mockito.asm.Type type94 = type67.getElementType();
        org.mockito.asm.Type type95 = type67.getElementType();
        org.mockito.asm.tree.analysis.Value value96 = basicVerifier19.newValue(type67);
        org.mockito.asm.tree.analysis.Value value97 = basicInterpreter6.copyOperation(abstractInsnNode18, value96);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V", obj5, value96);
        analyzerException2.addSuppressed((java.lang.Throwable) analyzerException98);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(VVI)J" + "'", str16, "(VVI)J");
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str68, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "char" + "'", str70, "char");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VVI)J" + "'", str80, "(VVI)J");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "V" + "'", str85, "V");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VVI)J" + "'", str90, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(VVI)J" + "'", str91, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(VVI)C" + "'", str92, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str93, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertNotNull(value96);
        org.junit.Assert.assertNotNull(value97);
    }

    @Test
    public void test11516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11516");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter29.ternaryOperation(abstractInsnNode30, value35, value41, value47);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str51 = type50.toString();
        int int52 = type50.getSort();
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter29.newValue(type50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode54 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter55 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type56 = null;
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter55.newValue(type56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter29.copyOperation(abstractInsnNode54, value57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass60 = type59.getClass();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        int int62 = type61.getSort();
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter29.newValue(type61);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode64 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        int int68 = value67.getSize();
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter29.copyOperation(abstractInsnNode64, value67);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.copyOperation(abstractInsnNode28, value69);
        java.lang.Class<?> wildcardClass71 = value69.getClass();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass71);
        org.mockito.asm.Type type73 = type72.getElementType();
        int int74 = type73.getSort();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "V" + "'", str51, "V");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(value53);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
    }

    @Test
    public void test11517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11517");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        boolean boolean22 = type1.equals((java.lang.Object) basicInterpreter10);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.String str26 = type23.toString();
        java.lang.String str27 = type23.getDescriptor();
        int int28 = type23.getSize();
        java.lang.String str29 = type23.getClassName();
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.newValue(type23);
        int int31 = type23.getSort();
        java.lang.Class<?> wildcardClass32 = type23.getClass();
        java.lang.String str33 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass32);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "char" + "'", str29, "char");
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/asm/Type" + "'", str33, "org/mockito/asm/Type");
    }

    @Test
    public void test11518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11518");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type47);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        int int51 = type50.getDimensions();
        java.lang.String str52 = type50.toString();
        java.lang.Class<?> wildcardClass53 = type50.getClass();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter0.newValue(type54);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass59 = type58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        int int64 = type63.getSort();
        int int65 = type63.getSize();
        int int67 = type63.getOpcode(162);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter68 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str73 = type72.toString();
        int int74 = type72.getSort();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type72, type75, type76 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray77);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter68.newValue(type70);
        int int80 = value79.getSize();
        int int81 = value79.getSize();
        int int82 = value79.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.Type;: expected null, but found R;", (java.lang.Object) type63, value79);
        int int84 = value79.getSize();
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter0.copyOperation(abstractInsnNode56, value79);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;" + "'", str52, "Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/Type" + "'", str60, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/Type" + "'", str61, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/asm/Type" + "'", str62, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 166 + "'", int67 == 166);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "V" + "'", str73, "V");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VVI)J" + "'", str78, "(VVI)J");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(value85);
    }

    @Test
    public void test11519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11519");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        int int2 = type0.getSort();
        java.lang.String str3 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str9 = type8.toString();
        int int10 = type8.getSort();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type8, type11, type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter4.newValue(type6);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean19 = type17.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.String str26 = type23.toString();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type6, type16, type17, type21, type23, type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray28);
        int int30 = type0.getSort();
        int int31 = type0.getSort();
        java.lang.String str32 = type0.toString();
        java.lang.String str33 = type0.getDescriptor();
        int int34 = type0.getSort();
        java.lang.String str35 = type0.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(VVI)J" + "'", str14, "(VVI)J");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(JDCJCI)V" + "'", str29, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "V" + "'", str35, "V");
    }

    @Test
    public void test11520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11520");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean46 = type44.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass47 = type44.getClass();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        java.lang.String str49 = type48.toString();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        int int57 = type55.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type55, type58, type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str66 = type65.toString();
        int int67 = type65.getSort();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type65, type68, type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray70);
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray70);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray70);
        org.mockito.asm.Type type75 = type48.getElementType();
        org.mockito.asm.Type type76 = type48.getElementType();
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier0.newValue(type48);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/Type: expected C, but found J");
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier0.newValue(type79);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value82 = basicVerifier0.newOperation(abstractInsnNode81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "char" + "'", str51, "char");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)J" + "'", str61, "(VVI)J");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)J" + "'", str71, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)C" + "'", str73, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str74, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
    }

    @Test
    public void test11521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11521");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        java.lang.String str49 = type46.getClassName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str52 = type51.getClassName();
        org.mockito.asm.Type[] typeArray54 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray54);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray54);
        int int57 = type46.getSize();
        java.lang.Class<?> wildcardClass58 = type46.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        java.lang.String str60 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass58);
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "char" + "'", str49, "char");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "void" + "'", str52, "void");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(I)V" + "'", str55, "(I)V");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(I)C" + "'", str56, "(I)C");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/Type" + "'", str59, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str60, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/Type" + "'", str61, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/asm/Type" + "'", str62, "org/mockito/asm/Type");
    }

    @Test
    public void test11522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11522");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter9.ternaryOperation(abstractInsnNode10, value15, value21, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter9.merge(value34, value47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter9.newValue(type49);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        int int56 = type55.getSort();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter9.newValue(type55);
        java.lang.String str58 = type55.getClassName();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str61 = type60.getClassName();
        org.mockito.asm.Type[] typeArray63 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray63);
        java.lang.String str66 = type55.toString();
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier0.newValue(type55);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass69 = type68.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        int int71 = type70.getDimensions();
        org.mockito.asm.Type type72 = type70.getElementType();
        int int73 = type72.getDimensions();
        java.lang.String str74 = type72.toString();
        int int75 = type72.getSize();
        int int76 = type72.getDimensions();
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier0.newValue(type72);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str79 = type78.toString();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type78, typeArray81);
        java.lang.Class<?> wildcardClass83 = type78.getClass();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        org.mockito.asm.Type type85 = type84.getElementType();
        org.mockito.asm.Type type86 = type85.getElementType();
        int int87 = type86.getSize();
        org.mockito.asm.Type type88 = type86.getElementType();
        int int90 = type86.getOpcode(106);
        org.mockito.asm.Type type91 = type86.getElementType();
        java.lang.String str92 = type91.getInternalName();
        org.mockito.asm.tree.analysis.Value value93 = basicVerifier0.newValue(type91);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode94 = null;
        org.mockito.asm.tree.analysis.Value value95 = null;
        org.mockito.asm.tree.analysis.Value value96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value97 = basicVerifier0.binaryOperation(abstractInsnNode94, value95, value96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(I)V" + "'", str53, "(I)V");
        org.junit.Assert.assertNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "char" + "'", str58, "char");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "void" + "'", str61, "void");
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(I)V" + "'", str64, "(I)V");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(I)C" + "'", str65, "(I)C");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "C" + "'", str66, "C");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lg/mockito/asm/Type;" + "'", str74, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "V" + "'", str79, "V");
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(I)V" + "'", str82, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 110 + "'", int90 == 110);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "ckito/asm/Type" + "'", str92, "ckito/asm/Type");
        org.junit.Assert.assertNotNull(value93);
    }

    @Test
    public void test11523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11523");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.merge(value8, value13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean18 = type16.equals((java.lang.Object) 180);
        java.lang.String str19 = type16.toString();
        java.lang.String str20 = type16.toString();
        java.lang.String str21 = type16.getDescriptor();
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier0.newValue(type16);
        java.lang.String str23 = type16.toString();
        java.lang.String str24 = type16.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "C" + "'", str21, "C");
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "char" + "'", str24, "char");
    }

    @Test
    public void test11524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11524");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass1 = type0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.Type type7 = type5.getElementType();
        org.mockito.asm.Type type8 = type5.getElementType();
        java.lang.String str9 = type8.getDescriptor();
        int int10 = type8.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value29);
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter11.ternaryOperation(abstractInsnNode12, value17, value23, value29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter11.newValue(type32);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode36 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type38 = null;
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter37.newValue(type38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter11.copyOperation(abstractInsnNode36, value39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean43 = type41.equals((java.lang.Object) 180);
        java.lang.String str44 = type41.toString();
        java.lang.String str45 = type41.getDescriptor();
        int int46 = type41.getSort();
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter11.newValue(type41);
        java.lang.Class<?> wildcardClass48 = basicInterpreter11.getClass();
        boolean boolean49 = type8.equals((java.lang.Object) wildcardClass48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type53 = type52.getElementType();
        int int54 = type52.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str2, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/Type" + "'", str3, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lg/mockito/asm/Type;" + "'", str9, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(value35);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str51, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test11525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11525");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        java.lang.Throwable throwable15 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable15);
        java.lang.Throwable[] throwableArray17 = analyzerException16.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException16.addSuppressed((java.lang.Throwable) analyzerException20);
        java.lang.Throwable throwable24 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException25);
        analyzerException20.addSuppressed((java.lang.Throwable) analyzerException26);
        java.lang.Class<?> wildcardClass28 = analyzerException20.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier0.newValue(type30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType("(VVI)L(I)V;");
        int int34 = type33.getDimensions();
        int int35 = type33.getDimensions();
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier0.newValue(type33);
        java.lang.String str37 = type33.getDescriptor();
        int int39 = type33.getOpcode(130);
        int int40 = type33.getSort();
        java.lang.String str41 = type33.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str29, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LVVI)L(I)V;" + "'", str37, "LVVI)L(I)V;");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 134 + "'", int39 == 134);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "VVI)L(I)V" + "'", str41, "VVI)L(I)V");
    }

    @Test
    public void test11526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11526");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        boolean boolean5 = type1.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str11 = type10.toString();
        int int12 = type10.getSort();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type10, type13, type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str21 = type20.toString();
        int int22 = type20.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type20, type23, type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray25);
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray25);
        int int29 = type8.getOpcode((int) 'a');
        java.lang.String str30 = type8.getClassName();
        int int31 = type8.getSort();
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier0.newValue(type8);
        int int33 = type8.getSort();
        int int35 = type8.getOpcode(48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException39);
        java.lang.Throwable throwable43 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable43);
        java.lang.Throwable[] throwableArray45 = analyzerException44.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException44.addSuppressed((java.lang.Throwable) analyzerException48);
        java.lang.Throwable[] throwableArray50 = analyzerException48.getSuppressed();
        analyzerException39.addSuppressed((java.lang.Throwable) analyzerException48);
        java.lang.Throwable throwable56 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException57);
        java.lang.Throwable throwable61 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException62);
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Z");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)L(I)V;", (java.lang.Throwable) analyzerException68);
        analyzerException62.addSuppressed((java.lang.Throwable) analyzerException68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException68);
        analyzerException39.addSuppressed((java.lang.Throwable) analyzerException71);
        java.lang.Throwable throwable76 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException77);
        java.lang.Throwable throwable81 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException82);
        analyzerException77.addSuppressed((java.lang.Throwable) analyzerException82);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException82);
        analyzerException71.addSuppressed((java.lang.Throwable) analyzerException85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lg/mockito/asm/Type;", (java.lang.Throwable) analyzerException71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lg/mockito/asm/tree/analysis/BasicValue;");
        analyzerException87.addSuppressed((java.lang.Throwable) analyzerException89);
        boolean boolean91 = type8.equals((java.lang.Object) analyzerException87);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(VVI)J" + "'", str16, "(VVI)J");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "V" + "'", str21, "V");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(VVI)J" + "'", str26, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(VVI)J" + "'", str27, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 98 + "'", int29 == 98);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "long" + "'", str30, "long");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 7 + "'", int33 == 7);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 49 + "'", int35 == 49);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test11527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11527");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass31 = type30.getClass();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        int int33 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type32);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter0.copyOperation(abstractInsnNode35, value38);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType("C");
        java.lang.String str43 = type42.getDescriptor();
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter0.newValue(type42);
        int int45 = type42.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter46 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type47 = null;
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter46.newValue(type47);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode51 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value68);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter50.ternaryOperation(abstractInsnNode51, value56, value62, value68);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter73 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type74 = null;
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter73.newValue(type74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value75);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter46.ternaryOperation(abstractInsnNode49, value62, value75, value79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter46.newValue(type82);
        java.lang.String str84 = type82.toString();
        java.lang.String str85 = type82.toString();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass87 = type86.getClass();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        java.lang.String str89 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type91 = type90.getElementType();
        org.mockito.asm.Type[] typeArray93 = org.mockito.asm.Type.getArgumentTypes("(VVI)L(I)V;");
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type91, typeArray93);
        java.lang.String str95 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray93);
        java.lang.String str96 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = type42.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "C" + "'", str43, "C");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LLorg/mockito/asm/Type;;" + "'", str84, "LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "LLorg/mockito/asm/Type;;" + "'", str85, "LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str89, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(typeArray93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(VVI)Lg/mockito/asm/Type;" + "'", str94, "(VVI)Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(VVI)LLorg/mockito/asm/Type;;" + "'", str95, "(VVI)LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "(VVI)C" + "'", str96, "(VVI)C");
    }

    @Test
    public void test11528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11528");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        int int31 = type30.getSort();
        java.lang.String str32 = type30.getDescriptor();
        java.lang.String str33 = type30.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSort();
        boolean boolean40 = type36.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type45, type48, type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        int int57 = type55.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type55, type58, type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray60);
        int int64 = type43.getOpcode((int) 'a');
        java.lang.String str65 = type43.getClassName();
        int int66 = type43.getSort();
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier35.newValue(type43);
        int int69 = type43.getOpcode(195);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type43);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.toString();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray74);
        java.lang.Class<?> wildcardClass76 = type71.getClass();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        java.lang.String str78 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass76);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        java.lang.Object obj80 = null;
        boolean boolean81 = type79.equals(obj80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter0.newValue(type79);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.String str84 = type83.getDescriptor();
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter0.newValue(type83);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType("C");
        int int88 = type87.getSort();
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter0.newValue(type87);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = basicInterpreter0.newOperation(abstractInsnNode90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)J" + "'", str61, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VVI)J" + "'", str62, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 98 + "'", int64 == 98);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "long" + "'", str65, "long");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 7 + "'", int66 == 7);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 196 + "'", int69 == 196);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(I)V" + "'", str75, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str78, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "F" + "'", str84, "F");
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertNotNull(value89);
    }

    @Test
    public void test11529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11529");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(VVI)C");
        java.lang.String str2 = type1.getInternalName();
        org.mockito.asm.Type type3 = type1.getElementType();
        int int4 = type1.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value23);
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter5.ternaryOperation(abstractInsnNode6, value11, value17, value23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str27 = type26.toString();
        int int28 = type26.getSort();
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter5.newValue(type26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type32 = null;
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter5.copyOperation(abstractInsnNode30, value33);
        java.lang.Class<?> wildcardClass35 = value33.getClass();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSize();
        boolean boolean39 = type1.equals((java.lang.Object) int38);
        int int41 = type1.getOpcode(6);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "(VVI)C" + "'", str2, "(VVI)C");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str37, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
    }

    @Test
    public void test11530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11530");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter26.ternaryOperation(abstractInsnNode27, value32, value38, value44);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier25.merge(value32, value67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter4.merge(value68, value71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("I", (java.lang.Object) 9, value68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException73);
        java.lang.Throwable[] throwableArray75 = analyzerException73.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("LVVI)Lg/mockito/asm/Type;", (java.lang.Throwable) analyzerException73);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNull(value46);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(throwableArray75);
    }

    @Test
    public void test11531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11531");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.Value value4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter0.copyOperation(abstractInsnNode3, value4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getReturnType("(I)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter0.newValue(type7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.Class<?> wildcardClass13 = type12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        int int17 = type16.getDimensions();
        boolean boolean18 = type10.equals((java.lang.Object) int17);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter0.newValue(type10);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.Value value21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.unaryOperation(abstractInsnNode20, value21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/Type" + "'", str14, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(value19);
    }

    @Test
    public void test11532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11532");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean2 = type0.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass3 = type0.getClass();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        int int6 = type4.getOpcode(0);
        java.lang.String str7 = type4.getInternalName();
        java.lang.String str8 = type4.getClassName();
        int int9 = type4.getSize();
        java.lang.String str10 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter15 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter15.ternaryOperation(abstractInsnNode16, value21, value27, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter37.ternaryOperation(abstractInsnNode38, value43, value49, value55);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode59 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value64);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter58.ternaryOperation(abstractInsnNode59, value64, value70, value76);
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier36.merge(value43, value78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter15.merge(value79, value82);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("void", (java.lang.Object) 171, value83);
        java.lang.Throwable[] throwableArray85 = analyzerException84.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("F");
        analyzerException84.addSuppressed((java.lang.Throwable) analyzerException87);
        java.lang.Throwable[] throwableArray89 = analyzerException84.getSuppressed();
        java.lang.Throwable[] throwableArray90 = analyzerException84.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException91);
        java.lang.Throwable[] throwableArray93 = analyzerException91.getSuppressed();
        boolean boolean94 = type4.equals((java.lang.Object) throwableArray93);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.mockito.asm.Type" + "'", str8, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value35);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNull(value57);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test11533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11533");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        int int50 = type49.getSort();
        java.lang.String str51 = type49.getDescriptor();
        java.lang.String str52 = type49.getDescriptor();
        int int53 = type49.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type49);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean57 = type55.equals((java.lang.Object) 180);
        java.lang.String str58 = type55.toString();
        java.lang.String str59 = type55.getDescriptor();
        java.lang.String str60 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter0.newValue(type55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode62 = null;
        java.util.List list63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value64 = basicInterpreter0.naryOperation(abstractInsnNode62, list63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "C" + "'", str60, "C");
        org.junit.Assert.assertNotNull(value61);
    }

    @Test
    public void test11534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11534");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        int int30 = type28.getSort();
        java.lang.String str31 = type28.getClassName();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("S");
        boolean boolean34 = type28.equals((java.lang.Object) "S");
        java.lang.String str35 = type28.getClassName();
        java.lang.String str36 = type28.toString();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.newValue(type28);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.Type[] typeArray41 = org.mockito.asm.Type.getArgumentTypes("(I)LLorg.mockito.asm.tree.analysis.AnalyzerException: (I)L(I)V;;;");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter42 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type43 = null;
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter42.newValue(type43);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str47 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter42.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("Lchar", (java.lang.Object) "(I)LLorg.mockito.asm.tree.analysis.AnalyzerException: (I)L(I)V;;;", value48);
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter0.copyOperation(abstractInsnNode38, value48);
        int int51 = value48.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "void" + "'", str31, "void");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "void" + "'", str35, "void");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "B" + "'", str47, "B");
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test11535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11535");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str31 = type30.toString();
        int int32 = type30.getSort();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type30, type33, type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        java.lang.Class<?> wildcardClass37 = typeArray35.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter0.newValue(type39);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.Value value42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.copyOperation(abstractInsnNode41, value42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getObjectType("(VVI)C");
        java.lang.String str46 = type45.toString();
        java.lang.String str47 = type45.getInternalName();
        int int48 = type45.getDimensions();
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter0.newValue(type45);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("mockito.asm.Type");
        int int52 = type51.getDimensions();
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter0.newValue(type51);
        java.lang.Throwable throwable56 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException57);
        java.lang.Throwable throwable61 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException62);
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException62);
        java.lang.Class<?> wildcardClass65 = analyzerException57.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass65);
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass65);
        java.lang.String str68 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass65);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        int int71 = type69.getOpcode(124);
        java.lang.String str72 = type69.getClassName();
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter0.newValue(type69);
        int int74 = value73.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "V" + "'", str31, "V");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VVI)J" + "'", str36, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str38, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L(VVI)C;" + "'", str46, "L(VVI)C;");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(VVI)C" + "'", str47, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str66, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str67, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str68, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 128 + "'", int71 == 128);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException" + "'", str72, "org.mockito.asm.tree.analysis.AnalyzerException");
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
    }

    @Test
    public void test11536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11536");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        int int21 = type20.getSort();
        int int22 = type20.getSize();
        int int23 = type20.getDimensions();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter1.newValue(type20);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.Value value26 = null;
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter1.copyOperation(abstractInsnNode25, value26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray31);
        java.lang.Class<?> wildcardClass33 = type28.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        int int36 = type34.getOpcode(141);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str39 = type38.getClassName();
        org.mockito.asm.Type[] typeArray41 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.Class<?> wildcardClass44 = type34.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass44);
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter1.newValue(type47);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter49.ternaryOperation(abstractInsnNode50, value55, value61, value67);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter49.newValue(type70);
        int int72 = type70.getSort();
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter1.newValue(type70);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value75 = basicInterpreter1.newOperation(abstractInsnNode74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(I)V" + "'", str32, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 145 + "'", int36 == 145);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "void" + "'", str39, "void");
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(I)V" + "'", str42, "(I)V");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str43, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str45, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/Type" + "'", str46, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 6 + "'", int72 == 6);
        org.junit.Assert.assertNotNull(value73);
    }

    @Test
    public void test11537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11537");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type33, type36, type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter29.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter29, value43);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass47 = type46.getClass();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        int int49 = type48.getSort();
        int int50 = type48.getSize();
        int int51 = type48.getDimensions();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter29.newValue(type48);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("mockito.asm.Type");
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter29.newValue(type54);
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter0.copyOperation(abstractInsnNode27, value55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        org.mockito.asm.tree.analysis.Value value58 = null;
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter0.copyOperation(abstractInsnNode57, value58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean62 = type60.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass63 = type60.getClass();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        int int66 = type64.getOpcode(0);
        org.mockito.asm.Type type67 = type64.getElementType();
        int int69 = type64.getOpcode(149);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type64);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter0.newValue(type71);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value74 = basicInterpreter0.newOperation(abstractInsnNode73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)J" + "'", str39, "(VVI)J");
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 153 + "'", int69 == 153);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
    }

    @Test
    public void test11538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11538");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.ternaryOperation(abstractInsnNode11, value16, value22, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value35);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str42 = type41.toString();
        int int43 = type41.getSort();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type41, type44, type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter37.newValue(type39);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter10.merge(value35, value48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str51 = type50.toString();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter10.newValue(type50);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        int int57 = type56.getSort();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter10.newValue(type56);
        java.lang.String str59 = type56.getClassName();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str62 = type61.getClassName();
        org.mockito.asm.Type[] typeArray64 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray64);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray64);
        java.lang.Class<?> wildcardClass67 = typeArray64.getClass();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass67);
        java.lang.String str70 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass67);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass67);
        int int72 = type71.getSort();
        org.mockito.asm.Type[] typeArray74 = org.mockito.asm.Type.getArgumentTypes("(VVI)I");
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray74);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray74);
        java.lang.String str77 = type1.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "V" + "'", str42, "V");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(VVI)J" + "'", str47, "(VVI)J");
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "V" + "'", str51, "V");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(I)V" + "'", str54, "(I)V");
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "char" + "'", str59, "char");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "void" + "'", str62, "void");
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(I)V" + "'", str65, "(I)V");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(I)C" + "'", str66, "(I)C");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str70, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 9 + "'", int72 == 9);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(VVI)[Lorg/mockito/asm/Type;" + "'", str75, "(VVI)[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(VVI)J" + "'", str76, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "J" + "'", str77, "J");
    }

    @Test
    public void test11539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11539");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        java.lang.Throwable throwable6 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException7);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J: expected C, but found J", (java.lang.Throwable) analyzerException7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("I)Lorg/mockito/asm/tree/analysis/BasicInterpreter", (java.lang.Throwable) analyzerException7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable17 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable17);
        java.lang.Throwable[] throwableArray19 = analyzerException18.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException18);
        analyzerException14.addSuppressed((java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        analyzerException14.addSuppressed((java.lang.Throwable) analyzerException23);
        java.lang.Throwable[] throwableArray25 = analyzerException23.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: VVI)Lorg/mockito/asm/Type: expected null, but found R", (java.lang.Throwable) analyzerException23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(JDCJCI)LC;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: F", (java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray33 = analyzerException32.getSuppressed();
        java.lang.Throwable[] throwableArray34 = analyzerException32.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str38 = type37.toString();
        int int39 = type37.getSort();
        java.lang.String str40 = type37.getDescriptor();
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean44 = type42.equals((java.lang.Object) 180);
        java.lang.String str45 = type42.toString();
        java.lang.String str46 = type42.getDescriptor();
        int int47 = type42.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier36.newValue(type42);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int50 = type49.getSort();
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier36.newValue(type49);
        java.lang.String str52 = type49.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type54 = null;
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter53.newValue(type54);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter57 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode58 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value75);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter57.ternaryOperation(abstractInsnNode58, value63, value69, value75);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter80 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type81 = null;
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter80.newValue(type81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value82);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter53.ternaryOperation(abstractInsnNode56, value69, value82, value86);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter53.newValue(type89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue", (java.lang.Object) type49, value90);
        analyzerException32.addSuppressed((java.lang.Throwable) analyzerException91);
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException91);
        analyzerException26.addSuppressed((java.lang.Throwable) analyzerException29);
        analyzerException7.addSuppressed((java.lang.Throwable) analyzerException29);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "V" + "'", str38, "V");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "C" + "'", str46, "C");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Z" + "'", str52, "Z");
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNull(value77);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
    }

    @Test
    public void test11540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11540");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)[Lorg/mockito/asm/Type;");
        java.lang.Object obj4 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str11 = type10.toString();
        int int12 = type10.getSort();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type10, type13, type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter6.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter6, value20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass24 = type23.getClass();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass24);
        int int26 = type25.getSort();
        int int27 = type25.getSize();
        int int28 = type25.getDimensions();
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter6.newValue(type25);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean32 = type30.equals((java.lang.Object) 180);
        java.lang.String str33 = type30.toString();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter6.newValue(type30);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str36 = type35.toString();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray38);
        java.lang.Class<?> wildcardClass40 = type35.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        int int43 = type42.getSize();
        org.mockito.asm.Type type44 = type42.getElementType();
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter6.newValue(type42);
        org.mockito.asm.Type type46 = null;
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter6.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/BasicInterpreter;", obj4, value47);
        org.mockito.asm.tree.analysis.Value value49 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V: expected  , but found J: expected V, but found null", (java.lang.Object) analyzerException48, value49);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException50);
        java.lang.Throwable[] throwableArray52 = analyzerException50.getSuppressed();
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(VVI)J" + "'", str16, "(VVI)J");
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(I)V" + "'", str39, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str41, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test11541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11541");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        java.lang.String str30 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str36 = type35.toString();
        int int37 = type35.getSort();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type35, type38, type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter31.newValue(type33);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean46 = type44.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean52 = type50.equals((java.lang.Object) 180);
        java.lang.String str53 = type50.toString();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type33, type43, type44, type48, type50, type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray55);
        int int57 = type27.getSort();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int63 = type61.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier59.newValue(type61);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type61);
        org.mockito.asm.Type type66 = null;
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter0.newValue(type66);
        org.mockito.asm.Type type68 = null;
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter0.newValue(type68);
        java.lang.Class<?> wildcardClass70 = basicInterpreter0.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass70);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(VVI)J" + "'", str41, "(VVI)J");
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "C" + "'", str53, "C");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(JDCJCI)V" + "'", str56, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(value58);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 87 + "'", int63 == 87);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str71, "org/mockito/asm/tree/analysis/BasicInterpreter");
    }

    @Test
    public void test11542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11542");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass1 = basicInterpreter0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str2, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str4, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11543");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BYTE_TYPE;
        int int30 = type29.getSize();
        java.lang.Class<?> wildcardClass31 = type29.getClass();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter32.ternaryOperation(abstractInsnNode33, value38, value44, value50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("LC;", (java.lang.Object) wildcardClass31, value50);
        int int54 = value50.getSize();
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter0.copyOperation(abstractInsnNode27, value50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value61);
        int int63 = value61.getSize();
        int int64 = value61.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.unaryOperation(abstractInsnNode56, value61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
    }

    @Test
    public void test11544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11544");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass2 = basicInterpreter1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int9 = type8.getDimensions();
        java.lang.String str10 = type8.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter12 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode13 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value30);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter12.ternaryOperation(abstractInsnNode13, value18, value24, value30);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode34 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter33.ternaryOperation(abstractInsnNode34, value39, value45, value51);
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier11.merge(value18, value53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean57 = type55.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass58 = type55.getClass();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        java.lang.String str60 = type59.toString();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str62 = type61.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type66, type69, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.toString();
        int int78 = type76.getSort();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type76, type79, type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray81);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray81);
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray81);
        org.mockito.asm.Type type86 = type59.getElementType();
        org.mockito.asm.Type type87 = type59.getElementType();
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier11.newValue(type59);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;");
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier11.newValue(type90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S", (java.lang.Object) str10, value91);
        java.lang.Throwable throwable93 = null;
        // The following exception was thrown during execution in test generation
        try {
            analyzerException92.addSuppressed(throwable93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str3, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str5, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str7, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.mockito.asm.tree.analysis.BasicInterpreter" + "'", str10, "org.mockito.asm.tree.analysis.BasicInterpreter");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNull(value32);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str60, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "char" + "'", str62, "char");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)J" + "'", str83, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(VVI)C" + "'", str84, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str85, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test11545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11545");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        boolean boolean9 = type6.equals((java.lang.Object) 87);
        int int10 = type6.getSize();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass12 = type11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        java.lang.String str14 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type[] typeArray18 = org.mockito.asm.Type.getArgumentTypes("(VVI)L(I)Z;");
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray18);
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray18);
        java.lang.Object obj21 = null;
        boolean boolean22 = type6.equals(obj21);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter23 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value41);
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter23.ternaryOperation(abstractInsnNode24, value29, value35, value41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter23.newValue(type44);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type50 = null;
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter49.newValue(type50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter23.copyOperation(abstractInsnNode48, value51);
        int int53 = value51.getSize();
        java.lang.Class<?> wildcardClass54 = value51.getClass();
        boolean boolean55 = type6.equals((java.lang.Object) value51);
        java.lang.String str56 = type6.getClassName();
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type60 = type59.getElementType();
        java.lang.String str61 = type59.getDescriptor();
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier0.newValue(type59);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode63 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter64 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type65 = null;
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean69 = type67.equals((java.lang.Object) 180);
        java.lang.String str70 = type67.toString();
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter64.newValue(type67);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode72 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        int int78 = value77.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value77);
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter64.copyOperation(abstractInsnNode72, value77);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getObjectType("C");
        int int83 = type82.getSort();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter64.newValue(type82);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int88 = type86.getOpcode((int) (byte) 1);
        int int89 = type86.getSize();
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter64.newValue(type86);
        int int91 = value90.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value92 = basicVerifier0.copyOperation(abstractInsnNode63, value90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str14, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/Type" + "'", str15, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str19, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)V" + "'", str20, "(VVI)V");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "void" + "'", str56, "void");
        org.junit.Assert.assertNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str61, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "C" + "'", str70, "C");
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 5 + "'", int88 == 5);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test11546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11546");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("B");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type4 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        java.lang.String str8 = type5.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str14 = type13.toString();
        int int15 = type13.getSort();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type13, type16, type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter9.newValue(type11);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean24 = type22.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean30 = type28.equals((java.lang.Object) 180);
        java.lang.String str31 = type28.toString();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type11, type21, type22, type26, type28, type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str39 = type38.toString();
        int int40 = type38.getSort();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type38, type41, type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type48, type51, type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray53);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray53);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray53);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray53);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray53);
        int int60 = type1.getSort();
        java.lang.Class<?> wildcardClass61 = type1.getClass();
        java.lang.String str62 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(VVI)J" + "'", str19, "(VVI)J");
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(JDCJCI)V" + "'", str34, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(VVI)J" + "'", str44, "(VVI)J");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VVI)J" + "'", str54, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(VVI)J" + "'", str55, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VVI)V" + "'", str56, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(VVI)I" + "'", str57, "(VVI)I");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)LLorg/mockito/asm/Type;;" + "'", str58, "(VVI)LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)B" + "'", str59, "(VVI)B");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str62, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
    }

    @Test
    public void test11547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11547");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        int int3 = type2.getSort();
        java.lang.String str4 = type2.getDescriptor();
        java.lang.String str5 = type2.getDescriptor();
        int int6 = type2.getSize();
        int int7 = type2.getSize();
        java.lang.String str8 = type2.getClassName();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter9.ternaryOperation(abstractInsnNode10, value15, value21, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter9.merge(value34, value47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean51 = type49.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass52 = type49.getClass();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter9.newValue(type53);
        int int55 = type53.getDimensions();
        org.mockito.asm.Type type56 = type53.getElementType();
        org.mockito.asm.Type[] typeArray58 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray58);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray58);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray58);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "C" + "'", str4, "C");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "C" + "'", str5, "C");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "char" + "'", str8, "char");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str59, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(I)C" + "'", str60, "(I)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(I)LC;" + "'", str61, "(I)LC;");
    }

    @Test
    public void test11548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11548");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        int int39 = type38.getSort();
        java.lang.String str40 = type38.getDescriptor();
        java.lang.String str41 = type38.getDescriptor();
        int int42 = type38.getSort();
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.newValue(type38);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("Lg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter0.newValue(type45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        boolean boolean52 = type48.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier47.newValue(type48);
        int int54 = type48.getSort();
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter0.newValue(type48);
        int int56 = type48.getSort();
        int int58 = type48.getOpcode(202);
        int int59 = type48.getSize();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 207 + "'", int58 == 207);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
    }

    @Test
    public void test11549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11549");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type4, type7, type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type2);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type14 = null;
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter13.newValue(type14);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode12, value15);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type18 = null;
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter17.newValue(type18);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter21 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value39);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter21.ternaryOperation(abstractInsnNode22, value27, value33, value39);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type45 = null;
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter17.ternaryOperation(abstractInsnNode20, value33, value46, value50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter17.newValue(type53);
        org.mockito.asm.Type type55 = type53.getElementType();
        boolean boolean57 = type53.equals((java.lang.Object) 95);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.newValue(type53);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter59 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode60 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value77);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter59.ternaryOperation(abstractInsnNode60, value65, value71, value77);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter59.newValue(type80);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        int int85 = type83.getSize();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter59.newValue(type83);
        java.lang.Class<?> wildcardClass87 = basicInterpreter59.getClass();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        int int89 = type88.getSort();
        java.lang.String str90 = type88.getDescriptor();
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter0.newValue(type88);
        int int92 = value91.getSize();
        int int93 = value91.getSize();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(VVI)J" + "'", str10, "(VVI)J");
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNull(value41);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str90, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test11550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11550");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter0.newValue(type5);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type8 = null;
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter7.newValue(type8);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value29);
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter11.ternaryOperation(abstractInsnNode12, value17, value23, value29);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type35 = null;
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter7.ternaryOperation(abstractInsnNode10, value23, value36, value40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter7.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        int int46 = type45.getSort();
        java.lang.String str47 = type45.getDescriptor();
        java.lang.String str48 = type45.getDescriptor();
        int int49 = type45.getSort();
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter7.newValue(type45);
        int int52 = type45.getOpcode(6);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter0.newValue(type45);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg/mockito/asm/tree/analysis/BasicValue;: expected byte, but found R");
        java.lang.String str56 = type55.getClassName();
        java.lang.String str57 = type55.getClassName();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.newValue(type55);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: void: expected 171, but found .;");
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter0.newValue(type60);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode62 = null;
        java.util.List list63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value64 = basicInterpreter0.naryOperation(abstractInsnNode62, list63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "C" + "'", str47, "C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "C" + "'", str48, "C");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 6 + "'", int52 == 6);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "rg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.BasicValue" + "'", str56, "rg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "rg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.BasicValue" + "'", str57, "rg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
    }

    @Test
    public void test11551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11551");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        java.lang.Throwable throwable15 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable15);
        java.lang.Throwable[] throwableArray17 = analyzerException16.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException16.addSuppressed((java.lang.Throwable) analyzerException20);
        java.lang.Throwable throwable24 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException25);
        analyzerException20.addSuppressed((java.lang.Throwable) analyzerException26);
        java.lang.Class<?> wildcardClass28 = analyzerException20.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier0.newValue(type30);
        java.lang.String str32 = type30.toString();
        int int34 = type30.getOpcode(0);
        int int35 = type30.getSort();
        java.lang.String str36 = type30.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str29, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str32, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str36, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test11552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11552");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        java.lang.Class<?> wildcardClass18 = value15.getClass();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        java.lang.String str21 = type20.getInternalName();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str21, "org/mockito/asm/tree/analysis/BasicValue");
    }

    @Test
    public void test11553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11553");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean4 = type2.equals((java.lang.Object) 88);
        int int5 = type2.getSize();
        int int6 = type2.getSort();
        java.lang.String str7 = type2.getDescriptor();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass12 = type11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type16 = type15.getElementType();
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier10.newValue(type16);
        boolean boolean18 = type9.equals((java.lang.Object) basicVerifier10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str23 = type22.toString();
        int int24 = type22.getSort();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type22, type25, type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        java.lang.Class<?> wildcardClass29 = typeArray27.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        java.lang.String str32 = type31.toString();
        int int33 = type31.getDimensions();
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier10.newValue(type31);
        int int35 = value34.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J", (java.lang.Object) str7, value34);
        int int37 = value34.getSize();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L(I)V;" + "'", str7, "L(I)V;");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "V" + "'", str23, "V");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VVI)J" + "'", str28, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str30, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str32, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
    }

    @Test
    public void test11554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11554");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.merge(value8, value13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        int int19 = type16.getSort();
        java.lang.String str20 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier0.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        java.lang.String str27 = type24.getDescriptor();
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier23.newValue(type24);
        java.lang.String str29 = type24.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type33 = null;
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type24, value34);
        java.lang.String str37 = type24.toString();
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier0.newValue(type24);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass40 = type39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier0.newValue(type46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str52 = type51.toString();
        int int53 = type51.getSort();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type51, type54, type55 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray56);
        int int58 = type49.getSize();
        int int60 = type49.getOpcode(159);
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier0.newValue(type49);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter62 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass63 = basicInterpreter62.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass63);
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass63);
        java.lang.String str66 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass63);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        java.lang.String str68 = type67.getClassName();
        int int69 = type67.getSize();
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier0.newValue(type67);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        org.mockito.asm.tree.analysis.Value value72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value73 = basicVerifier0.unaryOperation(abstractInsnNode71, value72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "void" + "'", str20, "void");
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str41, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/Type" + "'", str43, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/Type" + "'", str45, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "V" + "'", str52, "V");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(VVI)J" + "'", str57, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 160 + "'", int60 == 160);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str64, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str65, "org/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str66, "org/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.mockito.asm.tree.analysis.BasicInterpreter" + "'", str68, "org.mockito.asm.tree.analysis.BasicInterpreter");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(value70);
    }

    @Test
    public void test11555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11555");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BYTE_TYPE;
        int int64 = type63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type63);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter66 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type67 = null;
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter0.merge(value68, value73);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getObjectType("C");
        int int78 = type77.getSort();
        java.lang.String str79 = type77.getInternalName();
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter0.newValue(type77);
        java.lang.String str81 = type77.getClassName();
        java.lang.String str82 = type77.getDescriptor();
        int int84 = type77.getOpcode(19);
        java.lang.String str85 = type77.getClassName();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "C" + "'", str79, "C");
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "LC;" + "'", str82, "LC;");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 23 + "'", int84 == 23);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
    }

    @Test
    public void test11556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11556");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        int int51 = type49.getSort();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type49, type52, type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        int int56 = type47.getSize();
        int int58 = type47.getOpcode(159);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.Type[] typeArray62 = org.mockito.asm.Type.getArgumentTypes("(VVI)B");
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray62);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray62);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type47);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode66 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter67 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type68 = null;
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter67.newValue(type68);
        int int70 = value69.getSize();
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter0.copyOperation(abstractInsnNode66, value69);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode72 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str75 = type74.toString();
        int int76 = type74.getSort();
        java.lang.String str77 = type74.getDescriptor();
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean81 = type79.equals((java.lang.Object) 180);
        java.lang.String str82 = type79.toString();
        java.lang.String str83 = type79.getDescriptor();
        int int84 = type79.getSort();
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier73.newValue(type79);
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter0.copyOperation(abstractInsnNode72, value85);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.newOperation(abstractInsnNode87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(VVI)J" + "'", str55, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 160 + "'", int58 == 160);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;" + "'", str63, "(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VVI)J" + "'", str64, "(VVI)J");
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "C" + "'", str82, "C");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "C" + "'", str83, "C");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value86);
    }

    @Test
    public void test11557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11557");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        java.lang.String str8 = type5.getDescriptor();
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier4.newValue(type5);
        java.lang.String str10 = type5.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type14 = null;
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type5, value15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value24);
        java.lang.Throwable throwable28 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable28);
        java.lang.Throwable[] throwableArray30 = analyzerException29.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException29);
        java.lang.Throwable[] throwableArray32 = analyzerException29.getSuppressed();
        analyzerException25.addSuppressed((java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value38);
        java.lang.Throwable[] throwableArray40 = analyzerException39.getSuppressed();
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("F", (java.lang.Throwable) analyzerException39);
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("void", (java.lang.Throwable) analyzerException42);
        java.lang.Throwable[] throwableArray45 = analyzerException44.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("L(JDCJCI)LC;;", (java.lang.Throwable) analyzerException44);
        java.lang.String str47 = analyzerException46.toString();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertNull(value9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: L(JDCJCI)LC;;" + "'", str47, "org.mockito.asm.tree.analysis.AnalyzerException: L(JDCJCI)LC;;");
    }

    @Test
    public void test11558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11558");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        java.lang.String str7 = type3.getDescriptor();
        int int8 = type3.getSort();
        org.mockito.asm.Type[] typeArray10 = org.mockito.asm.Type.getArgumentTypes("(VVI)I");
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        int int12 = type3.getSize();
        int int13 = type3.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter14 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type15 = null;
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean19 = type17.equals((java.lang.Object) 180);
        java.lang.String str20 = type17.toString();
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter14.newValue(type17);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value47);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type53, type56, type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter49.newValue(type51);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter22.merge(value47, value60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean64 = type62.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass65 = type62.getClass();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter22.newValue(type66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter14.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Object) int13, value68);
        java.lang.Throwable[] throwableArray70 = analyzerException69.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("B", (java.lang.Throwable) analyzerException69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value77);
        java.lang.Throwable[] throwableArray79 = analyzerException78.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException78);
        java.lang.Throwable[] throwableArray81 = analyzerException80.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lorg/mockito/asm/Type;");
        analyzerException80.addSuppressed((java.lang.Throwable) analyzerException83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Z");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)L(I)V;", (java.lang.Throwable) analyzerException87);
        analyzerException83.addSuppressed((java.lang.Throwable) analyzerException87);
        analyzerException71.addSuppressed((java.lang.Throwable) analyzerException83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)LLorg/mockito/asm/tree/analysis/AnalyzerException;;: expected 1, but found I", (java.lang.Throwable) analyzerException83);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)C" + "'", str11, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray81);
    }

    @Test
    public void test11559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11559");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value6);
        java.lang.Throwable[] throwableArray8 = analyzerException7.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException7);
        java.lang.Throwable[] throwableArray10 = analyzerException9.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)V", (java.lang.Throwable) analyzerException9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/Type;");
        java.lang.Throwable throwable17 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable17);
        java.lang.Throwable[] throwableArray19 = analyzerException18.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException22);
        java.lang.Throwable throwable26 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException27);
        analyzerException22.addSuppressed((java.lang.Throwable) analyzerException28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)V", (java.lang.Throwable) analyzerException22);
        analyzerException13.addSuppressed((java.lang.Throwable) analyzerException30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Throwable[] throwableArray34 = analyzerException33.getSuppressed();
        analyzerException13.addSuppressed((java.lang.Throwable) analyzerException33);
        analyzerException9.addSuppressed((java.lang.Throwable) analyzerException33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable45 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable45);
        java.lang.Throwable[] throwableArray47 = analyzerException46.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException46);
        analyzerException42.addSuppressed((java.lang.Throwable) analyzerException46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        analyzerException42.addSuppressed((java.lang.Throwable) analyzerException51);
        java.lang.Throwable[] throwableArray53 = analyzerException42.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException", (java.lang.Throwable) analyzerException42);
        analyzerException39.addSuppressed((java.lang.Throwable) analyzerException42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (JDCJCI)LC;", (java.lang.Throwable) analyzerException42);
        analyzerException33.addSuppressed((java.lang.Throwable) analyzerException56);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test11560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11560");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter0.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str10 = type9.toString();
        int int11 = type9.getSort();
        java.lang.String str12 = type9.getDescriptor();
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean16 = type14.equals((java.lang.Object) 180);
        java.lang.String str17 = type14.toString();
        java.lang.String str18 = type14.getDescriptor();
        int int19 = type14.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier8.newValue(type14);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int22 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier8.newValue(type21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray27);
        java.lang.Class<?> wildcardClass29 = type24.getClass();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type31 = type30.getElementType();
        java.lang.String str32 = type31.getInternalName();
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier8.newValue(type31);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.copyOperation(abstractInsnNode7, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSort();
        java.lang.String str39 = type36.getDescriptor();
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean43 = type41.equals((java.lang.Object) 180);
        java.lang.String str44 = type41.toString();
        java.lang.String str45 = type41.getDescriptor();
        int int46 = type41.getSort();
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier35.newValue(type41);
        java.lang.String str48 = type41.getDescriptor();
        int int50 = type41.getOpcode(118);
        java.lang.String str51 = type41.getDescriptor();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter0.newValue(type41);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean55 = type53.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass56 = type53.getClass();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        java.lang.String str58 = type57.toString();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str60 = type59.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str65 = type64.toString();
        int int66 = type64.getSort();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type64, type67, type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str75 = type74.toString();
        int int76 = type74.getSort();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type74, type77, type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray79);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray79);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray79);
        org.mockito.asm.Type type84 = type57.getElementType();
        java.lang.String str85 = type57.toString();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter0.newValue(type57);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass88 = type87.getClass();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        int int90 = type89.getDimensions();
        int int91 = type89.getSort();
        int int92 = type89.getDimensions();
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter0.newValue(type89);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value95 = basicInterpreter0.newOperation(abstractInsnNode94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "B" + "'", str5, "B");
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(I)V" + "'", str28, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "g/mockito/asm/Type" + "'", str32, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "C" + "'", str48, "C");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 118 + "'", int50 == 118);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str58, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "char" + "'", str60, "char");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "V" + "'", str65, "V");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VVI)J" + "'", str70, "(VVI)J");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VVI)J" + "'", str80, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)J" + "'", str81, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)C" + "'", str82, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str83, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str85, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10 + "'", int91 == 10);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(value93);
    }

    @Test
    public void test11561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11561");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass1 = type0.getClass();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        int int3 = type2.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type7, type10, type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type17, type20, type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray22);
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray22);
        int int27 = type2.getOpcode(142);
        java.lang.String str28 = type2.getClassName();
        int int29 = type2.getSort();
        int int30 = type2.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(VVI)J" + "'", str13, "(VVI)J");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)J" + "'", str24, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str25, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 146 + "'", int27 == 146);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.mockito.asm.Type" + "'", str28, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test11562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11562");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str42 = type41.getInternalName();
        org.mockito.asm.Type type43 = type41.getElementType();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter44.ternaryOperation(abstractInsnNode45, value50, value56, value62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value69);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str76 = type75.toString();
        int int77 = type75.getSort();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type75, type78, type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter71.newValue(type73);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter44.merge(value69, value82);
        java.lang.Class<?> wildcardClass84 = value82.getClass();
        java.lang.String str85 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass84);
        boolean boolean86 = type43.equals((java.lang.Object) wildcardClass84);
        int int87 = type43.getSort();
        org.mockito.asm.Type[] typeArray89 = org.mockito.asm.Type.getArgumentTypes("(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray89);
        org.mockito.asm.Type type91 = type43.getElementType();
        int int92 = type91.getSort();
        int int93 = type91.getSort();
        int int94 = type91.getDimensions();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str42, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "V" + "'", str76, "V");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)J" + "'", str81, "(VVI)J");
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str85, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 10 + "'", int87 == 10);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(I)Lg/mockito/asm/tree/analysis/BasicValue;" + "'", str90, "(I)Lg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 10 + "'", int92 == 10);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10 + "'", int93 == 10);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test11563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11563");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.ternaryOperation(abstractInsnNode3, value8, value14, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter24.ternaryOperation(abstractInsnNode25, value30, value36, value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter45 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value63);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter45.ternaryOperation(abstractInsnNode46, value51, value57, value63);
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier23.merge(value30, value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter2.merge(value66, value69);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter72 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode73 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value84);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier88 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value90 = basicVerifier88.newValue(type89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value90);
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter72.ternaryOperation(abstractInsnNode73, value78, value84, value90);
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter2.copyOperation(abstractInsnNode71, value78);
        org.mockito.asm.Type type94 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int95 = type94.getSort();
        org.mockito.asm.tree.analysis.Value value96 = basicInterpreter2.newValue(type94);
        int int97 = value96.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: g/mockito/asm/tree/analysis/BasicValue", (java.lang.Object) 100, value96);
        java.lang.String str99 = analyzerException98.toString();
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNull(value22);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNull(value44);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNull(value92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertNotNull(value96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: g/mockito/asm/tree/analysis/BasicValue: expected 100, but found I" + "'", str99, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: g/mockito/asm/tree/analysis/BasicValue: expected 100, but found I");
    }

    @Test
    public void test11564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11564");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value47);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type53, type56, type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter49.newValue(type51);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter22.merge(value47, value60);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode21, value61);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getReturnType("(VVI)V");
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getReturnType("(VVI)C");
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter0.newValue(type67);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getReturnType("(I)Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;");
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter0.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean74 = type72.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass75 = type72.getClass();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type77 = type76.getElementType();
        boolean boolean78 = type70.equals((java.lang.Object) type77);
        int int79 = type77.getSort();
        org.mockito.asm.Type type80 = type77.getElementType();
        org.mockito.asm.Type type81 = type77.getElementType();
        int int83 = type81.getOpcode(8209);
        org.mockito.asm.Type type84 = type81.getElementType();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 8213 + "'", int83 == 8213);
        org.junit.Assert.assertNotNull(type84);
    }

    @Test
    public void test11565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11565");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str3 = type2.toString();
        int int4 = type2.getSort();
        java.lang.String str5 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier1.newValue(type2);
        java.lang.String str7 = type2.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type11 = null;
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type2, value12);
        java.lang.String str15 = type2.toString();
        java.lang.Class<?> wildcardClass16 = type2.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        int int20 = type18.getOpcode(0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/Type" + "'", str17, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
    }

    @Test
    public void test11566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11566");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean42 = type40.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass43 = type40.getClass();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass47 = type46.getClass();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        int int49 = type48.getDimensions();
        org.mockito.asm.Type type50 = type48.getElementType();
        int int52 = type50.getOpcode(156);
        org.mockito.asm.Type type53 = type50.getElementType();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str59 = type58.toString();
        int int60 = type58.getSort();
        java.lang.String str61 = type58.getDescriptor();
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean65 = type63.equals((java.lang.Object) 180);
        java.lang.String str66 = type63.toString();
        java.lang.String str67 = type63.getDescriptor();
        int int68 = type63.getSort();
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier57.newValue(type63);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int71 = type70.getSort();
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier57.newValue(type70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str75 = type74.toString();
        int int76 = type74.getSort();
        java.lang.String str77 = type74.getDescriptor();
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean81 = type79.equals((java.lang.Object) 180);
        java.lang.String str82 = type79.toString();
        java.lang.String str83 = type79.getDescriptor();
        int int84 = type79.getSort();
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier73.newValue(type79);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int87 = type86.getSort();
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier73.newValue(type86);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getReturnType("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.BasicValue;");
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier73.newValue(type90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: I: expected 9, but found .", (java.lang.Object) value72, value91);
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter0.copyOperation(abstractInsnNode55, value72);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 160 + "'", int52 == 160);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "V" + "'", str59, "V");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "V" + "'", str61, "V");
        org.junit.Assert.assertNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "C" + "'", str66, "C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "C" + "'", str67, "C");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "C" + "'", str82, "C");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "C" + "'", str83, "C");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(value93);
    }

    @Test
    public void test11567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11567");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        boolean boolean22 = type1.equals((java.lang.Object) basicInterpreter10);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str26 = type25.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str31 = type30.toString();
        int int32 = type30.getSort();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type30, type33, type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray45);
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray45);
        int int49 = type25.getSize();
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter24.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.toString();
        int int56 = type54.getSort();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type54, type57, type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        java.lang.Class<?> wildcardClass61 = typeArray59.getClass();
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter24.newValue(type63);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter10.copyOperation(abstractInsnNode23, value64);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode66 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.toString();
        int int70 = type68.getSort();
        java.lang.String str71 = type68.getDescriptor();
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier67.newValue(type74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType("LC;");
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier67.newValue(type77);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter79 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass80 = basicInterpreter79.getClass();
        java.lang.String str81 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        int int85 = type84.getSize();
        int int86 = type84.getSort();
        int int87 = type84.getSize();
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier67.newValue(type84);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value89 = basicInterpreter10.unaryOperation(abstractInsnNode66, value88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "char" + "'", str26, "char");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "V" + "'", str31, "V");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VVI)J" + "'", str36, "(VVI)J");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(VVI)J" + "'", str47, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(VVI)C" + "'", str48, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)J" + "'", str60, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str62, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "V" + "'", str71, "V");
        org.junit.Assert.assertNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str81, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10 + "'", int86 == 10);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(value88);
    }

    @Test
    public void test11568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11568");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        int int50 = type49.getSort();
        java.lang.String str51 = type49.getDescriptor();
        java.lang.String str52 = type49.getDescriptor();
        int int53 = type49.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type49);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean57 = type55.equals((java.lang.Object) 180);
        java.lang.String str58 = type55.toString();
        java.lang.String str59 = type55.getDescriptor();
        java.lang.String str60 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter0.newValue(type55);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        java.lang.String str64 = type63.getDescriptor();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type63);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str67 = type66.getClassName();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.toString();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray71);
        java.lang.Class<?> wildcardClass73 = type68.getClass();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        boolean boolean76 = type66.equals((java.lang.Object) wildcardClass73);
        java.lang.String str77 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass73);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.newValue(type78);
        org.mockito.asm.Type type80 = null;
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter0.newValue(type80);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int84 = type83.getDimensions();
        org.mockito.asm.Type type85 = type83.getElementType();
        int int87 = type83.getOpcode(104);
        java.lang.String str88 = type83.getInternalName();
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter0.newValue(type83);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getObjectType("(VVI)L(I)V;");
        java.lang.String str92 = type91.toString();
        java.lang.String str93 = type91.getClassName();
        org.mockito.asm.Type type94 = type91.getElementType();
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter0.newValue(type91);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value97 = basicInterpreter0.newOperation(abstractInsnNode96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "C" + "'", str60, "C");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;" + "'", str64, "Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;");
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "long" + "'", str67, "long");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(I)V" + "'", str72, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str77, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 108 + "'", int87 == 108);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str88, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L(VVI)L(I)V;;" + "'", str92, "L(VVI)L(I)V;;");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(VVI)L(I)V;" + "'", str93, "(VVI)L(I)V;");
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNotNull(value95);
    }

    @Test
    public void test11569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11569");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type45, type48, type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter41.newValue(type43);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter54 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type55 = null;
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter54.newValue(type55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter41.copyOperation(abstractInsnNode53, value56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.copyOperation(abstractInsnNode40, value56);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode59 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter0.copyOperation(abstractInsnNode59, value62);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode64 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        java.lang.String str69 = type66.getDescriptor();
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean73 = type71.equals((java.lang.Object) 180);
        java.lang.String str74 = type71.toString();
        java.lang.String str75 = type71.getDescriptor();
        int int76 = type71.getSort();
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier65.newValue(type71);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int79 = type78.getSort();
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier65.newValue(type78);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("Lg/mockito/asm/Type;");
        int int83 = type82.getSize();
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier65.newValue(type82);
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter0.copyOperation(abstractInsnNode64, value84);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode86 = null;
        org.mockito.asm.tree.analysis.Value value87 = null;
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.copyOperation(abstractInsnNode86, value87);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "C" + "'", str74, "C");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "C" + "'", str75, "C");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNull(value88);
    }

    @Test
    public void test11570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11570");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str12 = type11.toString();
        int int13 = type11.getSort();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type11, type14, type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter7.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter7, value21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass25 = type24.getClass();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass25);
        int int27 = type26.getSort();
        int int28 = type26.getSize();
        int int29 = type26.getDimensions();
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter7.newValue(type26);
        java.lang.String str31 = type26.toString();
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier0.newValue(type26);
        java.lang.String str33 = type26.getClassName();
        int int35 = type26.getOpcode(2052);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(VVI)J" + "'", str17, "(VVI)J");
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str31, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.mockito.asm.Type" + "'", str33, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2056 + "'", int35 == 2056);
    }

    @Test
    public void test11571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11571");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type6);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter9.ternaryOperation(abstractInsnNode10, value15, value21, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter9.merge(value34, value47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter9.newValue(type49);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter9.newValue(type55);
        int int57 = value56.getSize();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.copyOperation(abstractInsnNode8, value56);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter0.newValue(type59);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getObjectType("(VVI)Lg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter0.newValue(type62);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getReturnType("(I)I");
        java.lang.String str66 = type65.getClassName();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter0.newValue(type65);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(I)V" + "'", str53, "(I)V");
        org.junit.Assert.assertNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "int" + "'", str66, "int");
        org.junit.Assert.assertNotNull(value67);
    }

    @Test
    public void test11572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11572");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter0.newValue(type36);
        int int39 = type36.getSize();
        java.lang.String str40 = type36.getDescriptor();
        java.lang.Class<?> wildcardClass41 = type36.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        int int44 = type43.getDimensions();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "J" + "'", str40, "J");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
    }

    @Test
    public void test11573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11573");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        org.mockito.asm.tree.analysis.Value value10 = basicInterpreter3.newValue(type6);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter3.copyOperation(abstractInsnNode11, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray25 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        int int30 = value29.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str26, value29);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter3.copyOperation(abstractInsnNode20, value29);
        int int33 = value32.getSize();
        int int34 = value32.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str40 = type39.toString();
        int int41 = type39.getSort();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type39, type42, type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter35.newValue(type37);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter48.ternaryOperation(abstractInsnNode49, value54, value60, value66);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str70 = type69.toString();
        int int71 = type69.getSort();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter48.newValue(type69);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode73 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter74 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type75 = null;
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter74.newValue(type75);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter48.copyOperation(abstractInsnNode73, value76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter35.copyOperation(abstractInsnNode47, value77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)J: expected V, but found .", (java.lang.Object) value32, value78);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value80 = basicVerifier0.copyOperation(abstractInsnNode1, value32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(I)Lchar;" + "'", str26, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VVI)J" + "'", str45, "(VVI)J");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "V" + "'", str70, "V");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(value72);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(value78);
    }

    @Test
    public void test11574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11574");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        java.lang.String str6 = type1.toString();
        int int7 = type1.getSize();
        int int8 = type1.getSize();
        java.lang.String str9 = type1.getClassName();
        int int10 = type1.getSize();
        java.lang.String str11 = type1.toString();
        java.lang.Throwable throwable20 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException21);
        java.lang.Throwable throwable25 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException26);
        analyzerException21.addSuppressed((java.lang.Throwable) analyzerException26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Throwable) analyzerException21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode34 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter33.ternaryOperation(abstractInsnNode34, value39, value45, value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value58);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter60 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str65 = type64.toString();
        int int66 = type64.getSort();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type64, type67, type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray69);
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter60.newValue(type62);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter33.merge(value58, value71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) analyzerException32, value72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException32);
        boolean boolean76 = type1.equals((java.lang.Object) analyzerException32);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "void" + "'", str9, "void");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNull(value53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "V" + "'", str65, "V");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VVI)J" + "'", str70, "(VVI)J");
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test11575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11575");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type27 = type26.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int32 = type30.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier28.newValue(type30);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Object) type26, value33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)D", (java.lang.Object) 61, value33);
        int int37 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter0.copyOperation(abstractInsnNode21, value33);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int41 = type40.getDimensions();
        org.mockito.asm.Type type42 = type40.getElementType();
        int int44 = type40.getOpcode(130);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        int int48 = type47.getSort();
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter0.newValue(type47);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value51 = basicInterpreter0.newOperation(abstractInsnNode50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 87 + "'", int32 == 87);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 134 + "'", int44 == 134);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNotNull(value49);
    }

    @Test
    public void test11576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11576");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        boolean boolean5 = type1.equals((java.lang.Object) (-1.0d));
        int int6 = type1.getSize();
        int int8 = type1.getOpcode(160);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 7 + "'", int3 == 7);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 161 + "'", int8 == 161);
    }

    @Test
    public void test11577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11577");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)L(I)V;");
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type26);
        java.lang.String str28 = type26.toString();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable39 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable39);
        java.lang.Throwable[] throwableArray41 = analyzerException40.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException40);
        analyzerException36.addSuppressed((java.lang.Throwable) analyzerException40);
        java.lang.Throwable[] throwableArray44 = analyzerException40.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)V", (java.lang.Throwable) analyzerException40);
        java.lang.Throwable[] throwableArray46 = analyzerException40.getSuppressed();
        java.lang.Throwable[] throwableArray47 = analyzerException40.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("LL(I)V;;", (java.lang.Throwable) analyzerException48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Throwable) analyzerException48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("B");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter57 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type58 = null;
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value59);
        java.lang.Throwable throwable63 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable63);
        java.lang.Throwable[] throwableArray65 = analyzerException64.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException64.addSuppressed((java.lang.Throwable) analyzerException68);
        java.lang.Throwable throwable72 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException73);
        analyzerException68.addSuppressed((java.lang.Throwable) analyzerException74);
        analyzerException60.addSuppressed((java.lang.Throwable) analyzerException74);
        analyzerException54.addSuppressed((java.lang.Throwable) analyzerException60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type");
        java.lang.Throwable[] throwableArray80 = analyzerException79.getSuppressed();
        java.lang.Throwable throwable83 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException84);
        analyzerException79.addSuppressed((java.lang.Throwable) analyzerException84);
        analyzerException60.addSuppressed((java.lang.Throwable) analyzerException84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;: expected g/mockito/asm/tree/analysis/BasicValue, but found null", (java.lang.Throwable) analyzerException60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("g.mockito.asm.Type", (java.lang.Throwable) analyzerException88);
        analyzerException48.addSuppressed((java.lang.Throwable) analyzerException89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.BasicValue;", (java.lang.Throwable) analyzerException91);
        boolean boolean93 = type26.equals((java.lang.Object) analyzerException92);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L(I)V;" + "'", str28, "L(I)V;");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test11578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11578");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.merge(value8, value13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        int int19 = type16.getSort();
        java.lang.String str20 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier0.newValue(type16);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter22.newValue(type43);
        int int46 = type43.getOpcode(1024);
        int int47 = type43.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier0.newValue(type43);
        java.lang.String str49 = type43.getDescriptor();
        int int50 = type43.getSort();
        int int51 = type43.getSort();
        // The following exception was thrown during execution in test generation
        try {
            int int52 = type43.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "void" + "'", str20, "void");
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1026 + "'", int46 == 1026);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 6 + "'", int47 == 6);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "F" + "'", str49, "F");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 6 + "'", int50 == 6);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 6 + "'", int51 == 6);
    }

    @Test
    public void test11579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11579");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.Class<?> wildcardClass23 = typeArray21.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier0.newValue(type26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value29 = basicVerifier0.newOperation(abstractInsnNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str24, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str25, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
    }

    @Test
    public void test11580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11580");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("(I)V");
        java.lang.Throwable throwable39 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Throwable) analyzerException40);
        java.lang.Throwable[] throwableArray42 = analyzerException41.getSuppressed();
        boolean boolean43 = type36.equals((java.lang.Object) throwableArray42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type45 = null;
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter44.newValue(type45);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter48.ternaryOperation(abstractInsnNode49, value54, value60, value66);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter44.ternaryOperation(abstractInsnNode47, value60, value73, value77);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter44.newValue(type80);
        java.lang.String str82 = type80.toString();
        int int83 = type80.getSize();
        boolean boolean84 = type36.equals((java.lang.Object) type80);
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter0.newValue(type80);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.newValue(type87);
        java.lang.String str89 = type87.getInternalName();
        org.mockito.asm.Type[] typeArray91 = org.mockito.asm.Type.getArgumentTypes("(I)Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V;");
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type87, typeArray91);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "LLorg/mockito/asm/Type;;" + "'", str82, "LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "char" + "'", str89, "char");
        org.junit.Assert.assertNotNull(typeArray91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(I)Lchar;" + "'", str92, "(I)Lchar;");
    }

    @Test
    public void test11581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11581");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter0.newValue(type4);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        int int10 = type8.getOpcode(116);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type8);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.Value value13 = null;
        org.mockito.asm.tree.analysis.Value value14 = basicInterpreter0.copyOperation(abstractInsnNode12, value13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        org.mockito.asm.tree.analysis.Value value16 = null;
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter0.copyOperation(abstractInsnNode15, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.toString();
        int int21 = type19.getSort();
        java.lang.String str22 = type19.getDescriptor();
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter25 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str30 = type29.toString();
        int int31 = type29.getSort();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type29, type32, type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter25.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        int int40 = value39.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter25, value39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass43 = type42.getClass();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        int int45 = type44.getSort();
        int int46 = type44.getSize();
        int int47 = type44.getDimensions();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter25.newValue(type44);
        java.lang.String str49 = type44.toString();
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier18.newValue(type44);
        java.lang.String str51 = type44.getDescriptor();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter0.newValue(type44);
        java.lang.String str53 = type44.getInternalName();
        java.lang.String str54 = type44.getInternalName();
        int int55 = type44.getSize();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "B" + "'", str5, "B");
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 120 + "'", int10 == 120);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNull(value14);
        org.junit.Assert.assertNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VVI)J" + "'", str35, "(VVI)J");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str51, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/asm/Type" + "'", str53, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/asm/Type" + "'", str54, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test11582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11582");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        java.lang.String str49 = type46.getClassName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str52 = type51.getClassName();
        org.mockito.asm.Type[] typeArray54 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray54);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray54);
        java.lang.Class<?> wildcardClass57 = typeArray54.getClass();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        java.lang.String str63 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        java.lang.String str64 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "char" + "'", str49, "char");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "void" + "'", str52, "void");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(I)V" + "'", str55, "(I)V");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(I)C" + "'", str56, "(I)C");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str60, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str63, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str64, "[Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11583");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value6);
        java.lang.Throwable[] throwableArray8 = analyzerException7.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException7);
        java.lang.Throwable throwable12 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable12);
        java.lang.Throwable[] throwableArray14 = analyzerException13.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException13.addSuppressed((java.lang.Throwable) analyzerException17);
        java.lang.Throwable throwable21 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException22);
        analyzerException17.addSuppressed((java.lang.Throwable) analyzerException23);
        java.lang.Throwable[] throwableArray25 = analyzerException17.getSuppressed();
        analyzerException9.addSuppressed((java.lang.Throwable) analyzerException17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray30 = analyzerException29.getSuppressed();
        java.lang.Throwable[] throwableArray31 = analyzerException29.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("[Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException29);
        analyzerException17.addSuppressed((java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException29);
        java.lang.String str35 = analyzerException34.toString();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/Type;" + "'", str35, "org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11584");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass31 = type30.getClass();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        int int33 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type32);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str36 = type35.toString();
        int int37 = type35.getSort();
        java.lang.String str38 = type35.getClassName();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        java.lang.String str43 = type40.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type48, type51, type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter44.newValue(type46);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean59 = type57.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean65 = type63.equals((java.lang.Object) 180);
        java.lang.String str66 = type63.toString();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type46, type56, type57, type61, type63, type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str74 = type73.toString();
        int int75 = type73.getSort();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type77 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray78 = new org.mockito.asm.Type[] { type73, type76, type77 };
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str84 = type83.toString();
        int int85 = type83.getSort();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type87 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray88 = new org.mockito.asm.Type[] { type83, type86, type87 };
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type81, typeArray88);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray88);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray88);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray88);
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray88);
        java.lang.String str94 = type35.toString();
        java.lang.Class<?> wildcardClass95 = type35.getClass();
        java.lang.String str96 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass95);
        org.mockito.asm.Type type97 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass95);
        org.mockito.asm.tree.analysis.Value value98 = basicInterpreter0.newValue(type97);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "void" + "'", str38, "void");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VVI)J" + "'", str54, "(VVI)J");
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "C" + "'", str66, "C");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(JDCJCI)V" + "'", str69, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "V" + "'", str74, "V");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(VVI)J" + "'", str79, "(VVI)J");
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "V" + "'", str84, "V");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(VVI)J" + "'", str89, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VVI)J" + "'", str90, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(VVI)V" + "'", str91, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(VVI)I" + "'", str92, "(VVI)I");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(VVI)V" + "'", str93, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "V" + "'", str94, "V");
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org/mockito/asm/Type" + "'", str96, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertNotNull(value98);
    }

    @Test
    public void test11585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11585");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(I)V");
        int int2 = type1.getSize();
        int int3 = type1.getSize();
        java.lang.String str4 = type1.getClassName();
        int int5 = type1.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        java.lang.String str10 = type7.getDescriptor();
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier6.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.toString();
        int int17 = type15.getSort();
        java.lang.String str18 = type15.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter19 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.toString();
        int int25 = type23.getSort();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type23, type26, type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter19.newValue(type21);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean34 = type32.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean40 = type38.equals((java.lang.Object) 180);
        java.lang.String str41 = type38.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type21, type31, type32, type36, type38, type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type48, type51, type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str59 = type58.toString();
        int int60 = type58.getSort();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type58, type61, type62 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray63);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray63);
        int int67 = type15.getSort();
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier6.newValue(type15);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean72 = type70.equals((java.lang.Object) 88);
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier6.newValue(type70);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType("[Lorg/mockito/asm/Type;");
        int int77 = type75.getOpcode(94);
        java.lang.String str78 = type75.getClassName();
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier6.newValue(type75);
        boolean boolean80 = type1.equals((java.lang.Object) type75);
        int int81 = type1.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "void" + "'", str4, "void");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(VVI)J" + "'", str29, "(VVI)J");
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(JDCJCI)V" + "'", str44, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VVI)J" + "'", str54, "(VVI)J");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "V" + "'", str59, "V");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VVI)J" + "'", str64, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VVI)J" + "'", str65, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(VVI)V" + "'", str66, "(VVI)V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 98 + "'", int77 == 98);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org.mockito.asm.Type[]" + "'", str78, "org.mockito.asm.Type[]");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
    }

    @Test
    public void test11586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11586");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        int int29 = type24.getOpcode(4096);
        java.lang.String str30 = type24.getClassName();
        java.lang.String str31 = type24.toString();
        java.lang.String str32 = type24.getClassName();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4097 + "'", int29 == 4097);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "long" + "'", str30, "long");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "J" + "'", str31, "J");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "long" + "'", str32, "long");
    }

    @Test
    public void test11587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11587");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.newValue(type36);
        java.lang.Class<?> wildcardClass38 = type36.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass38);
        java.lang.String str40 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int46 = type44.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier42.newValue(type44);
        boolean boolean48 = type41.equals((java.lang.Object) basicVerifier42);
        int int50 = type41.getOpcode(80);
        org.mockito.asm.Type type51 = type41.getElementType();
        org.mockito.asm.Type type52 = type41.getElementType();
        org.mockito.asm.Type type53 = type41.getElementType();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str39, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str40, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 87 + "'", int46 == 87);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 84 + "'", int50 == 84);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
    }

    @Test
    public void test11588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11588");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int14 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.newValue(type13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray19);
        java.lang.Class<?> wildcardClass21 = type16.getClass();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type23 = type22.getElementType();
        java.lang.String str24 = type23.getInternalName();
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier0.newValue(type23);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S");
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier0.newValue(type27);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("B");
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier0.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        java.lang.String str36 = type33.getDescriptor();
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean40 = type38.equals((java.lang.Object) 180);
        java.lang.String str41 = type38.toString();
        java.lang.String str42 = type38.getDescriptor();
        int int43 = type38.getSort();
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier32.newValue(type38);
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier0.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        java.util.List list47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value48 = basicVerifier0.naryOperation(abstractInsnNode46, list47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(I)V" + "'", str20, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "g/mockito/asm/Type" + "'", str24, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "C" + "'", str42, "C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
    }

    @Test
    public void test11589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11589");
        java.lang.Throwable throwable2 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("LLI)Lg/mockito/asm/Type;;", throwable2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.lang.Class<?> wildcardClass8 = type7.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter12 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter12.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        int int27 = value26.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter12, value26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode32 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter31.ternaryOperation(abstractInsnNode32, value37, value43, value49);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter52 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value64);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter52.ternaryOperation(abstractInsnNode53, value58, value64, value70);
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier30.merge(value37, value72);
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter12.copyOperation(abstractInsnNode29, value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        int int78 = type76.getSort();
        java.lang.String str79 = type76.getDescriptor();
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter12.newValue(type76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)C", (java.lang.Object) str10, value80);
        java.lang.Throwable[] throwableArray82 = analyzerException81.getSuppressed();
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("LVVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;", (java.lang.Throwable) analyzerException3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNull(value72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "J" + "'", str79, "J");
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(throwableArray82);
    }

    @Test
    public void test11590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11590");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str12 = type11.toString();
        int int13 = type11.getSort();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type11, type14, type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter7.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter7, value21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass25 = type24.getClass();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass25);
        int int27 = type26.getSort();
        int int28 = type26.getSize();
        int int29 = type26.getDimensions();
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter7.newValue(type26);
        java.lang.String str31 = type26.toString();
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier0.newValue(type26);
        java.lang.String str33 = type26.getClassName();
        java.lang.String str34 = type26.getClassName();
        java.lang.String str35 = type26.getDescriptor();
        org.mockito.asm.Type type36 = type26.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(VVI)J" + "'", str17, "(VVI)J");
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str31, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.mockito.asm.Type" + "'", str33, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.mockito.asm.Type" + "'", str34, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str35, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type36);
    }

    @Test
    public void test11591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11591");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.Value value4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter0.copyOperation(abstractInsnNode3, value4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getReturnType("(I)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter0.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str10 = type9.getDescriptor();
        int int11 = type9.getSort();
        int int13 = type9.getOpcode(196658);
        org.mockito.asm.tree.analysis.Value value14 = basicInterpreter0.newValue(type9);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int18 = type16.getOpcode(83);
        java.lang.String str19 = type16.getClassName();
        int int20 = type16.getSize();
        org.mockito.asm.Type type21 = type16.getElementType();
        int int22 = type16.getSort();
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter0.newValue(type16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter25 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter25.ternaryOperation(abstractInsnNode26, value31, value37, value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value50);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter52 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str57 = type56.toString();
        int int58 = type56.getSort();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type56, type59, type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter52.newValue(type54);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter25.merge(value50, value63);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode65 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter66 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode67 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value84);
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter66.ternaryOperation(abstractInsnNode67, value72, value78, value84);
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter25.copyOperation(abstractInsnNode65, value84);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter25.newValue(type89);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass92 = type91.getClass();
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass92);
        org.mockito.asm.tree.analysis.Value value94 = basicInterpreter25.newValue(type93);
        org.mockito.asm.Type type95 = org.mockito.asm.Type.BYTE_TYPE;
        int int96 = type95.getSize();
        int int97 = type95.getSort();
        org.mockito.asm.tree.analysis.Value value98 = basicInterpreter25.newValue(type95);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = basicInterpreter0.unaryOperation(abstractInsnNode24, value98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "S" + "'", str10, "S");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 196658 + "'", int13 == 196658);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 87 + "'", int18 == 87);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(I)Z" + "'", str19, "(I)Z");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "V" + "'", str57, "V");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VVI)J" + "'", str62, "(VVI)J");
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNull(value86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 3 + "'", int97 == 3);
        org.junit.Assert.assertNotNull(value98);
    }

    @Test
    public void test11592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11592");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lg/mockito/asm/Type;");
        int int2 = type1.getSort();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("Z");
        java.lang.String str5 = type4.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str38 = type37.toString();
        int int39 = type37.getSort();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type37, type40, type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter33.newValue(type35);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter6.merge(value31, value44);
        java.lang.Class<?> wildcardClass46 = value44.getClass();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        java.lang.String str48 = type47.getInternalName();
        org.mockito.asm.Type type49 = type47.getElementType();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode51 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value68);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter50.ternaryOperation(abstractInsnNode51, value56, value62, value68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value75);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter77 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str82 = type81.toString();
        int int83 = type81.getSort();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type85 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray86 = new org.mockito.asm.Type[] { type81, type84, type85 };
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type79, typeArray86);
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter77.newValue(type79);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter50.merge(value75, value88);
        java.lang.Class<?> wildcardClass90 = value88.getClass();
        java.lang.String str91 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass90);
        boolean boolean92 = type49.equals((java.lang.Object) wildcardClass90);
        int int93 = type49.getSort();
        org.mockito.asm.Type[] typeArray95 = org.mockito.asm.Type.getArgumentTypes("(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str96 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray95);
        java.lang.String str97 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray95);
        java.lang.String str98 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray95);
        int int99 = type1.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Z" + "'", str5, "Z");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "V" + "'", str38, "V");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VVI)J" + "'", str43, "(VVI)J");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str48, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "V" + "'", str82, "V");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(VVI)J" + "'", str87, "(VVI)J");
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str91, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10 + "'", int93 == 10);
        org.junit.Assert.assertNotNull(typeArray95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "(I)Lg/mockito/asm/tree/analysis/BasicValue;" + "'", str96, "(I)Lg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "(I)Z" + "'", str97, "(I)Z");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "(I)Lg/mockito/asm/Type;" + "'", str98, "(I)Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test11593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11593");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter3.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter3.ternaryOperation(abstractInsnNode6, value19, value32, value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter44.ternaryOperation(abstractInsnNode45, value50, value56, value62);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value32, value42, value62);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass69 = type66.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        java.lang.String str71 = type70.toString();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter1.newValue(type70);
        int int73 = type70.getSize();
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter0.newValue(type70);
        java.lang.Class<?> wildcardClass75 = type70.getClass();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        java.lang.String str77 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str71, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str77, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11594");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter0.newValue(type46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("(I)V");
        int int50 = type49.getSize();
        int int51 = type49.getSize();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter0.newValue(type49);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getReturnType("L(I)V;");
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter0.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean58 = type56.equals((java.lang.Object) 180);
        java.lang.String str59 = type56.toString();
        java.lang.String str60 = type56.getDescriptor();
        int int61 = type56.getSize();
        java.lang.String str62 = type56.getClassName();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.toString();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray66);
        java.lang.Class<?> wildcardClass68 = type63.getClass();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        org.mockito.asm.Type type70 = type69.getElementType();
        org.mockito.asm.Type type71 = type70.getElementType();
        int int72 = type71.getSize();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type75 = type74.getElementType();
        boolean boolean76 = type71.equals((java.lang.Object) type74);
        org.mockito.asm.Type[] typeArray78 = org.mockito.asm.Type.getArgumentTypes("(VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray78);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray78);
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter0.newValue(type56);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value83 = basicInterpreter0.newOperation(abstractInsnNode82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "C" + "'", str60, "C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "char" + "'", str62, "char");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(I)V" + "'", str67, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(VVI)Lmockito/asm/Type;" + "'", str79, "(VVI)Lmockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VVI)C" + "'", str80, "(VVI)C");
        org.junit.Assert.assertNotNull(value81);
    }

    @Test
    public void test11595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11595");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type66, type69, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.toString();
        int int78 = type76.getSort();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type76, type79, type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray81);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type64);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int86 = type85.getSort();
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.newValue(type85);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType("(I)LI)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter0.newValue(type89);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode91 = null;
        java.util.List list92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = basicInterpreter0.naryOperation(abstractInsnNode91, list92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)J" + "'", str83, "(VVI)J");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
    }

    @Test
    public void test11596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11596");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type8 = type7.getElementType();
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier2.newValue(type8);
        boolean boolean10 = type1.equals((java.lang.Object) basicVerifier2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        java.lang.Class<?> wildcardClass21 = typeArray19.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.lang.String str24 = type23.toString();
        int int25 = type23.getDimensions();
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier2.newValue(type23);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray30);
        java.lang.Class<?> wildcardClass32 = type27.getClass();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass32);
        java.lang.String str35 = type34.getClassName();
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier2.newValue(type34);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getObjectType("Z");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter42 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value60);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter42.ternaryOperation(abstractInsnNode43, value48, value54, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value67);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter69 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str74 = type73.toString();
        int int75 = type73.getSort();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type77 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray78 = new org.mockito.asm.Type[] { type73, type76, type77 };
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray78);
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter69.newValue(type71);
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter42.merge(value67, value80);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter82 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type83 = null;
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter82.newValue(type83);
        int int85 = value84.getSize();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter41.merge(value67, value84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("g.mockito.asm.Type", (java.lang.Object) "Z", value67);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value88 = basicVerifier2.unaryOperation(abstractInsnNode37, value67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str22, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str24, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(I)V" + "'", str31, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.mockito.asm.Type" + "'", str35, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNull(value62);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "V" + "'", str74, "V");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(VVI)J" + "'", str79, "(VVI)J");
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(value86);
    }

    @Test
    public void test11597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11597");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str10 = type9.toString();
        int int11 = type9.getSort();
        java.lang.String str12 = type9.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type17, type20, type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter13.newValue(type15);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean28 = type26.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean34 = type32.equals((java.lang.Object) 180);
        java.lang.String str35 = type32.toString();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type15, type25, type26, type30, type32, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.toString();
        int int44 = type42.getSort();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type42, type45, type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type52, type55, type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray57);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray57);
        int int61 = type9.getSort();
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier0.newValue(type9);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType("L(I)V;");
        java.lang.String str65 = type64.getClassName();
        java.lang.Class<?> wildcardClass66 = type64.getClass();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier0.newValue(type67);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode69 = null;
        org.mockito.asm.tree.analysis.Value value70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value71 = basicVerifier0.copyOperation(abstractInsnNode69, value70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(JDCJCI)V" + "'", str38, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(VVI)J" + "'", str48, "(VVI)J");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)J" + "'", str58, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)V" + "'", str60, "(VVI)V");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(I)V" + "'", str65, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test11598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11598");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        int int21 = type20.getSort();
        int int22 = type20.getSize();
        int int23 = type20.getDimensions();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter1.newValue(type20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean34 = type32.equals((java.lang.Object) 180);
        java.lang.String str35 = type32.toString();
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter29.newValue(type32);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter37.ternaryOperation(abstractInsnNode38, value43, value49, value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value62);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter64 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.toString();
        int int70 = type68.getSort();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type68, type71, type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter64.newValue(type66);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter37.merge(value62, value75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean79 = type77.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass80 = type77.getClass();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter37.newValue(type81);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter29.newValue(type81);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str85 = type84.getClassName();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter29.newValue(type84);
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter1.merge(value27, value86);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getObjectType("(I)V");
        java.lang.String str90 = type89.getClassName();
        java.lang.String str91 = type89.getInternalName();
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter1.newValue(type89);
        org.mockito.asm.Type type94 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)C: expected Lorg/mockito/asm/Type;, but found J");
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter1.newValue(type94);
        java.lang.String str96 = type94.toString();
        java.lang.Class<?> wildcardClass97 = type94.getClass();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNull(value57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)J" + "'", str74, "(VVI)J");
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "long" + "'", str85, "long");
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(I)V" + "'", str90, "(I)V");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(I)V" + "'", str91, "(I)V");
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "C" + "'", str96, "C");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test11599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11599");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (JDCJCI)LC;");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.ternaryOperation(abstractInsnNode3, value8, value14, value20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.toString();
        int int25 = type23.getSort();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter2.newValue(type23);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type29 = null;
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter28.newValue(type29);
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter2.copyOperation(abstractInsnNode27, value30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        int int33 = type32.getSort();
        java.lang.String str34 = type32.getDescriptor();
        java.lang.String str35 = type32.getDescriptor();
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter2.newValue(type32);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type38 = null;
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter37.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter64 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type65 = null;
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter37.ternaryOperation(abstractInsnNode40, value53, value66, value70);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter37.newValue(type73);
        java.lang.Class<?> wildcardClass75 = type73.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        java.lang.String str77 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter2.newValue(type78);
        int int80 = type78.getSize();
        org.mockito.asm.Type type81 = type78.getElementType();
        int int82 = type78.getSort();
        int int84 = type78.getOpcode(198);
        boolean boolean85 = type1.equals((java.lang.Object) int84);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass87 = type86.getClass();
        java.lang.String str88 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        java.lang.String str89 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        java.lang.String str90 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        java.lang.String str92 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        boolean boolean93 = type1.equals((java.lang.Object) wildcardClass87);
        java.lang.String str94 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type95 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        int int96 = type95.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNull(value71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/Type" + "'", str76, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str77, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 202 + "'", int84 == 202);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str88, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str89, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str90, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str92, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str94, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
    }

    @Test
    public void test11600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11600");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter3.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter3.ternaryOperation(abstractInsnNode6, value19, value32, value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter44.ternaryOperation(abstractInsnNode45, value50, value56, value62);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value32, value42, value62);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass69 = type66.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        java.lang.String str71 = type70.toString();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter1.newValue(type70);
        int int73 = type70.getSize();
        java.lang.String str74 = type70.getDescriptor();
        org.mockito.asm.Type type75 = type70.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str78 = type77.toString();
        int int79 = type77.getSort();
        java.lang.String str80 = type77.getDescriptor();
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean84 = type82.equals((java.lang.Object) 180);
        java.lang.String str85 = type82.toString();
        java.lang.String str86 = type82.getDescriptor();
        int int87 = type82.getSort();
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier76.newValue(type82);
        int int89 = value88.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) type75, value88);
        java.lang.String str91 = type75.getDescriptor();
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str71, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str74, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "V" + "'", str78, "V");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "V" + "'", str80, "V");
        org.junit.Assert.assertNull(value81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Lg/mockito/asm/Type;" + "'", str91, "Lg/mockito/asm/Type;");
    }

    @Test
    public void test11601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11601");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str3 = type2.toString();
        int int4 = type2.getSort();
        java.lang.String str5 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier1.newValue(type2);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type8 = null;
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value14);
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier1.merge(value9, value14);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        int int20 = type17.getSort();
        java.lang.String str21 = type17.getClassName();
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier1.newValue(type17);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        int int30 = type28.getSort();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type28, type31, type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter24.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter24, value38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass42 = type41.getClass();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        int int44 = type43.getSort();
        int int45 = type43.getSize();
        int int46 = type43.getDimensions();
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter24.newValue(type43);
        java.lang.String str48 = type43.toString();
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier1.newValue(type43);
        org.mockito.asm.Type type50 = type43.getElementType();
        int int51 = type50.getSize();
        org.mockito.asm.Type type52 = type50.getElementType();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type54 = null;
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean58 = type56.equals((java.lang.Object) 180);
        java.lang.String str59 = type56.toString();
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter53.newValue(type56);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode61 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        int int67 = value66.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value66);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter53.copyOperation(abstractInsnNode61, value66);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.getObjectType("C");
        int int72 = type71.getSort();
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter53.newValue(type71);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode74 = null;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type80 = type79.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int85 = type83.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier81.newValue(type83);
        int int87 = value86.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Object) type79, value86);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)D", (java.lang.Object) 61, value86);
        int int90 = value86.getSize();
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter53.copyOperation(abstractInsnNode74, value86);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Object) type52, value91);
        java.lang.String str93 = type52.getClassName();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "void" + "'", str21, "void");
        org.junit.Assert.assertNull(value22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VVI)J" + "'", str34, "(VVI)J");
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str48, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 87 + "'", int85 == 87);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "mockito.asm.Type" + "'", str93, "mockito.asm.Type");
    }

    @Test
    public void test11602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11602");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("L(VVI)Lorg/mockito/asm/Type;;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str3 = type2.toString();
        boolean boolean5 = type2.equals((java.lang.Object) 87);
        int int7 = type2.getOpcode(118);
        int int8 = type2.getSize();
        java.lang.Throwable throwable11 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable11);
        java.lang.Throwable[] throwableArray13 = analyzerException12.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException12.addSuppressed((java.lang.Throwable) analyzerException16);
        java.lang.Throwable throwable20 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException21);
        analyzerException16.addSuppressed((java.lang.Throwable) analyzerException22);
        java.lang.Class<?> wildcardClass24 = analyzerException16.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass24);
        boolean boolean27 = type2.equals((java.lang.Object) wildcardClass24);
        boolean boolean28 = type1.equals((java.lang.Object) wildcardClass24);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str30 = type29.toString();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray32);
        java.lang.Class<?> wildcardClass34 = type29.getClass();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type36 = type35.getElementType();
        org.mockito.asm.Type type37 = type36.getElementType();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass39 = type38.getClass();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        int int41 = type40.getSort();
        int int42 = type40.getSize();
        int int43 = type40.getDimensions();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        java.lang.String str47 = type44.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type52, type55, type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter48.newValue(type50);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean63 = type61.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean69 = type67.equals((java.lang.Object) 180);
        java.lang.String str70 = type67.toString();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type50, type60, type61, type65, type67, type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray72);
        int int74 = type44.getSort();
        int int75 = type44.getSort();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str78 = type77.getClassName();
        org.mockito.asm.Type[] typeArray80 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type77, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray80);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray80);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray80);
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray80);
        java.lang.String str86 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 123 + "'", int7 == 123);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str25, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(I)V" + "'", str33, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)J" + "'", str58, "(VVI)J");
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "C" + "'", str70, "C");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(JDCJCI)V" + "'", str73, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "void" + "'", str78, "void");
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(I)V" + "'", str81, "(I)V");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(I)V" + "'", str82, "(I)V");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str83, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(I)Lg/mockito/asm/Type;" + "'", str84, "(I)Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str85, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str86, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11603");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        java.lang.String str49 = type46.getClassName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str52 = type51.getClassName();
        org.mockito.asm.Type[] typeArray54 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray54);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray54);
        java.lang.Class<?> wildcardClass57 = typeArray54.getClass();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        java.lang.Throwable throwable61 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable61);
        java.lang.Throwable[] throwableArray63 = analyzerException62.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException62);
        java.lang.Throwable[] throwableArray65 = analyzerException62.getSuppressed();
        boolean boolean66 = type58.equals((java.lang.Object) throwableArray65);
        int int67 = type58.getSize();
        int int68 = type58.getSort();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "char" + "'", str49, "char");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "void" + "'", str52, "void");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(I)V" + "'", str55, "(I)V");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(I)C" + "'", str56, "(I)C");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 9 + "'", int68 == 9);
    }

    @Test
    public void test11604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11604");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean2 = type0.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass3 = type0.getClass();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        int int6 = type4.getOpcode(0);
        int int7 = type4.getSort();
        int int8 = type4.getSort();
        org.mockito.asm.Type type9 = type4.getElementType();
        java.lang.String str10 = type9.getClassName();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean13 = type11.equals((java.lang.Object) 180);
        java.lang.String str14 = type11.toString();
        java.lang.String str15 = type11.toString();
        int int17 = type11.getOpcode(172);
        int int18 = type11.getSize();
        java.lang.String str19 = type11.getClassName();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean22 = type20.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass23 = type20.getClass();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        int int26 = type24.getOpcode(0);
        java.lang.String str27 = type24.getInternalName();
        org.mockito.asm.Type type28 = type24.getElementType();
        int int29 = type24.getSort();
        int int31 = type24.getOpcode(141);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("(VVI)I");
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        int int35 = type34.getSort();
        java.lang.String str36 = type34.getDescriptor();
        java.lang.String str37 = type34.getDescriptor();
        java.lang.String str38 = type34.getClassName();
        int int39 = type34.getSize();
        java.lang.String str40 = type34.getClassName();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass42 = type41.getClass();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        int int44 = type43.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type48, type51, type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str59 = type58.toString();
        int int60 = type58.getSort();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type58, type61, type62 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray63);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray63);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray63);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray63);
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray63);
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray63);
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray63);
        org.mockito.asm.Type[] typeArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "g.mockito.asm.Type" + "'", str10, "g.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "C" + "'", str14, "C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 172 + "'", int17 == 172);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "char" + "'", str19, "char");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/Type" + "'", str27, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 145 + "'", int31 == 145);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "C" + "'", str37, "C");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "char" + "'", str38, "char");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "char" + "'", str40, "char");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VVI)J" + "'", str54, "(VVI)J");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "V" + "'", str59, "V");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VVI)J" + "'", str64, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VVI)J" + "'", str65, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str66, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VVI)C" + "'", str67, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VVI)L(VVI)I;" + "'", str68, "(VVI)L(VVI)I;");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str69, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VVI)C" + "'", str70, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)Lg/mockito/asm/Type;" + "'", str71, "(VVI)Lg/mockito/asm/Type;");
    }

    @Test
    public void test11605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11605");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter0.newValue(type27);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.Value value30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter0.copyOperation(abstractInsnNode29, value30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        java.lang.String str34 = type33.getDescriptor();
        int int36 = type33.getOpcode(80);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.newValue(type33);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        java.util.List list39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value40 = basicInterpreter0.naryOperation(abstractInsnNode38, list39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lrg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;" + "'", str34, "Lrg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 84 + "'", int36 == 84);
        org.junit.Assert.assertNotNull(value37);
    }

    @Test
    public void test11606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11606");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str42 = type41.getInternalName();
        org.mockito.asm.Type type43 = type41.getElementType();
        java.lang.String str44 = type43.toString();
        int int45 = type43.getDimensions();
        org.mockito.asm.Type type46 = type43.getElementType();
        java.lang.Class<?> wildcardClass47 = type46.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str42, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lg/mockito/asm/tree/analysis/BasicValue;" + "'", str44, "Lg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/Type" + "'", str48, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/asm/Type" + "'", str49, "org/mockito/asm/Type");
    }

    @Test
    public void test11607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11607");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean42 = type40.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass43 = type40.getClass();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str47 = type46.toString();
        int int48 = type46.getSort();
        java.lang.String str49 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.toString();
        int int56 = type54.getSort();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type54, type57, type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter50.newValue(type52);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean65 = type63.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean71 = type69.equals((java.lang.Object) 180);
        java.lang.String str72 = type69.toString();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type52, type62, type63, type67, type69, type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray74);
        int int76 = type46.getSort();
        int int77 = type46.getSort();
        java.lang.String str78 = type46.toString();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.newValue(type46);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value81 = basicInterpreter0.newOperation(abstractInsnNode80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)J" + "'", str60, "(VVI)J");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "C" + "'", str72, "C");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(JDCJCI)V" + "'", str75, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "V" + "'", str78, "V");
        org.junit.Assert.assertNull(value79);
    }

    @Test
    public void test11608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11608");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        java.lang.String str6 = type3.getDescriptor();
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier2.newValue(type3);
        java.lang.String str8 = type3.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type12 = null;
        org.mockito.asm.tree.analysis.Value value13 = basicInterpreter11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type3, value13);
        java.lang.Class<?> wildcardClass16 = analyzerException15.getClass();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.asm.tree.analysis.Value value18 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Object) wildcardClass16, value18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        int int21 = type20.getDimensions();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertNull(value7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test11609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11609");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type8 = type7.getElementType();
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier2.newValue(type8);
        boolean boolean10 = type1.equals((java.lang.Object) basicVerifier2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        java.lang.Class<?> wildcardClass21 = typeArray19.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.lang.String str24 = type23.toString();
        int int25 = type23.getDimensions();
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier2.newValue(type23);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray30);
        java.lang.Class<?> wildcardClass32 = type27.getClass();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass32);
        java.lang.String str35 = type34.getClassName();
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier2.newValue(type34);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType("I)Lorg.mockito.asm.tree.analysis.BasicValue");
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier2.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.Value value41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value42 = basicVerifier2.unaryOperation(abstractInsnNode40, value41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str22, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str24, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(I)V" + "'", str31, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.mockito.asm.Type" + "'", str35, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
    }

    @Test
    public void test11610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11610");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass31 = type30.getClass();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        int int33 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type32);
        java.lang.Throwable throwable37 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable37);
        java.lang.Throwable[] throwableArray39 = analyzerException38.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException38.addSuppressed((java.lang.Throwable) analyzerException42);
        java.lang.Throwable throwable46 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException47);
        analyzerException42.addSuppressed((java.lang.Throwable) analyzerException48);
        java.lang.Class<?> wildcardClass50 = analyzerException42.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        int int53 = type52.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = type56.getSort();
        boolean boolean60 = type56.equals((java.lang.Object) (-1.0d));
        int int61 = type56.getSort();
        java.lang.String str62 = type56.getClassName();
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter0.newValue(type56);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str65 = type64.toString();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type66 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray67);
        java.lang.Class<?> wildcardClass69 = type64.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter0.newValue(type72);
        int int74 = value73.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str51, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 7 + "'", int61 == 7);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "long" + "'", str62, "long");
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "V" + "'", str65, "V");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(I)V" + "'", str68, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
    }

    @Test
    public void test11611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11611");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str9 = type8.toString();
        int int10 = type8.getSort();
        java.lang.String str11 = type8.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter12 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter12.newValue(type14);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean27 = type25.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean33 = type31.equals((java.lang.Object) 180);
        java.lang.String str34 = type31.toString();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type14, type24, type25, type29, type31, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray36);
        int int38 = type8.getSort();
        int int39 = type8.getSort();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.Type[] typeArray44 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray44);
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray44);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter0.newValue(type8);
        java.lang.String str48 = type8.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            int int49 = type8.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(JDCJCI)V" + "'", str37, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "void" + "'", str42, "void");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(I)V" + "'", str45, "(I)V");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(I)V" + "'", str46, "(I)V");
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "void" + "'", str48, "void");
    }

    @Test
    public void test11612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11612");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V");
        java.lang.Class<?> wildcardClass3 = type2.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean11 = type9.equals((java.lang.Object) 180);
        java.lang.String str12 = type9.toString();
        org.mockito.asm.tree.analysis.Value value13 = basicInterpreter6.newValue(type9);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value19);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter6.copyOperation(abstractInsnNode14, value19);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("C");
        int int25 = type24.getSort();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.newValue(type24);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int30 = type28.getOpcode((int) (byte) 1);
        int int31 = type28.getSize();
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter6.newValue(type28);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.Value value34 = null;
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter6.copyOperation(abstractInsnNode33, value34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray39);
        java.lang.Class<?> wildcardClass41 = type36.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        int int47 = type46.getSize();
        java.lang.String str48 = type46.getClassName();
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter6.newValue(type46);
        org.mockito.asm.Type type50 = null;
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter6.newValue(type50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        java.lang.String str56 = type53.getDescriptor();
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier52.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int65 = type63.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier61.newValue(type63);
        int int67 = value66.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter68 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode69 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value74);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value80);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value86);
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter68.ternaryOperation(abstractInsnNode69, value74, value80, value86);
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier52.merge(value66, value86);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("L(I)Lorg/mockito/asm/tree/analysis/BasicInterpreter;;", (java.lang.Object) value51, value89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str4, value51);
        java.lang.String str92 = analyzerException91.toString();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(I)V" + "'", str40, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/Type" + "'", str45, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.mockito.asm.Type" + "'", str48, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 87 + "'", int65 == 87);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNull(value88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: : expected org/mockito/asm/Type, but found ." + "'", str92, "org.mockito.asm.tree.analysis.AnalyzerException: : expected org/mockito/asm/Type, but found .");
    }

    @Test
    public void test11613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11613");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter43.ternaryOperation(abstractInsnNode44, value49, value55, value61);
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier21.merge(value28, value63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter0.merge(value64, value67);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode69 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter70 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value76);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value82);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier86 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier86.newValue(type87);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value88);
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter70.ternaryOperation(abstractInsnNode71, value76, value82, value88);
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter0.copyOperation(abstractInsnNode69, value76);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int93 = type92.getSort();
        org.mockito.asm.tree.analysis.Value value94 = basicInterpreter0.newValue(type92);
        java.lang.String str95 = type92.getDescriptor();
        java.lang.String str96 = type92.toString();
        java.lang.String str97 = type92.getDescriptor();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNull(value63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNull(value90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Z" + "'", str95, "Z");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Z" + "'", str96, "Z");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Z" + "'", str97, "Z");
    }

    @Test
    public void test11614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11614");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        int int21 = type20.getSort();
        int int22 = type20.getSize();
        int int23 = type20.getDimensions();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter1.newValue(type20);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.Value value26 = null;
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter1.copyOperation(abstractInsnNode25, value26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray31);
        java.lang.Class<?> wildcardClass33 = type28.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        int int36 = type34.getOpcode(141);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str39 = type38.getClassName();
        org.mockito.asm.Type[] typeArray41 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.Class<?> wildcardClass44 = type34.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass44);
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter1.newValue(type47);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getReturnType("V");
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter1.newValue(type50);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(I)V" + "'", str32, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 145 + "'", int36 == 145);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "void" + "'", str39, "void");
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(I)V" + "'", str42, "(I)V");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str43, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str45, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/Type" + "'", str46, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "void" + "'", str51, "void");
        org.junit.Assert.assertNull(value52);
    }

    @Test
    public void test11615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11615");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray6 = analyzerException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = analyzerException5.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("[Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException5);
        java.lang.Throwable[] throwableArray9 = analyzerException5.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter15 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter15.ternaryOperation(abstractInsnNode16, value21, value27, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter36.ternaryOperation(abstractInsnNode37, value42, value48, value54);
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier14.merge(value21, value56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) "void", value56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Throwable) analyzerException58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: void: expected 171, but found .", (java.lang.Throwable) analyzerException58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray64 = analyzerException63.getSuppressed();
        java.lang.Throwable[] throwableArray65 = analyzerException63.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("[Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException63);
        analyzerException58.addSuppressed((java.lang.Throwable) analyzerException63);
        java.lang.Throwable[] throwableArray68 = analyzerException58.getSuppressed();
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: hi!", (java.lang.Throwable) analyzerException58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("boolean", (java.lang.Throwable) analyzerException70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("(JDCJCI)LC;", (java.lang.Throwable) analyzerException70);
        java.lang.Throwable[] throwableArray73 = analyzerException72.getSuppressed();
        java.lang.Throwable[] throwableArray74 = analyzerException72.getSuppressed();
        java.lang.Class<?> wildcardClass75 = analyzerException72.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value35);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNull(value56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test11616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11616");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter0.newValue(type36);
        int int39 = type36.getSize();
        java.lang.String str40 = type36.getDescriptor();
        java.lang.Class<?> wildcardClass41 = type36.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "J" + "'", str40, "J");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str45, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11617");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int30 = type29.getDimensions();
        org.mockito.asm.Type type31 = type29.getElementType();
        int int33 = type29.getOpcode((int) '4');
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type29);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.Value value36 = null;
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.copyOperation(abstractInsnNode35, value36);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean42 = type40.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass43 = type40.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter46 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value64);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter46.ternaryOperation(abstractInsnNode47, value52, value58, value64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str68 = type67.toString();
        int int69 = type67.getSort();
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter46.newValue(type67);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)L(I)V;");
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter46.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Object) type45, value73);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.copyOperation(abstractInsnNode38, value73);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value78 = basicInterpreter0.newOperation(abstractInsnNode77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 56 + "'", int33 == 56);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/Type" + "'", str44, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "V" + "'", str68, "V");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value76);
    }

    @Test
    public void test11618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11618");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.Value value4 = basicInterpreter2.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter2.ternaryOperation(abstractInsnNode5, value18, value31, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value41);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter43.ternaryOperation(abstractInsnNode44, value49, value55, value61);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value31, value41, value61);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean67 = type65.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass68 = type65.getClass();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        java.lang.String str70 = type69.toString();
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter0.newValue(type69);
        int int72 = type69.getSize();
        java.lang.String str73 = type69.getDescriptor();
        org.mockito.asm.Type type74 = type69.getElementType();
        java.lang.String str75 = type69.toString();
        java.lang.String str76 = type69.getDescriptor();
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNull(value63);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str70, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str73, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str75, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str76, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11619");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type2 = null;
        org.mockito.asm.tree.analysis.Value value3 = basicInterpreter1.newValue(type2);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode4 = null;
        org.mockito.asm.tree.analysis.Value value5 = null;
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter1.copyOperation(abstractInsnNode4, value5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("(I)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter1.newValue(type8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter12 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type13 = null;
        org.mockito.asm.tree.analysis.Value value14 = basicInterpreter12.newValue(type13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter16.ternaryOperation(abstractInsnNode17, value22, value28, value34);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter39 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type40 = null;
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter12.ternaryOperation(abstractInsnNode15, value28, value41, value45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value51);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode54 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value71);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter53.ternaryOperation(abstractInsnNode54, value59, value65, value71);
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter10.ternaryOperation(abstractInsnNode11, value41, value51, value71);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean77 = type75.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass78 = type75.getClass();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        java.lang.String str80 = type79.toString();
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter10.newValue(type79);
        int int82 = type79.getSize();
        java.lang.String str83 = type79.getDescriptor();
        java.lang.String str84 = type79.getDescriptor();
        org.mockito.asm.Type type85 = type79.getElementType();
        java.lang.String str86 = type85.getInternalName();
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter1.newValue(type85);
        org.mockito.asm.tree.analysis.Value value88 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: LI)Lg/mockito/asm/Type;: expected 1, but found .", (java.lang.Object) value87, value88);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNull(value46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNull(value73);
        org.junit.Assert.assertNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str80, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str83, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str84, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "g/mockito/asm/Type" + "'", str86, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test11620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11620");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type66, type69, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.toString();
        int int78 = type76.getSort();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type76, type79, type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray81);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type64);
        int int86 = type64.getOpcode(148);
        int int88 = type64.getOpcode(121);
        java.lang.String str89 = type64.getDescriptor();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type90 = type64.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)J" + "'", str83, "(VVI)J");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 149 + "'", int86 == 149);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 122 + "'", int88 == 122);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "J" + "'", str89, "J");
    }

    @Test
    public void test11621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11621");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Z");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException7);
        java.lang.Class<?> wildcardClass9 = analyzerException7.getClass();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter23 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type24 = null;
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter23.newValue(type24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter10.copyOperation(abstractInsnNode22, value25);
        int int27 = value25.getSize();
        int int28 = value25.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;", (java.lang.Object) analyzerException7, value25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)L(I)Z;: expected class org.mockito.asm.Type, but found I");
        java.lang.Throwable[] throwableArray32 = analyzerException31.getSuppressed();
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable40 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable40);
        java.lang.Throwable[] throwableArray42 = analyzerException41.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException41);
        analyzerException37.addSuppressed((java.lang.Throwable) analyzerException41);
        java.lang.Throwable[] throwableArray45 = analyzerException41.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)V", (java.lang.Throwable) analyzerException41);
        java.lang.Throwable[] throwableArray47 = analyzerException41.getSuppressed();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str50 = type49.getClassName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str52 = type51.toString();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray54);
        java.lang.Class<?> wildcardClass56 = type51.getClass();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        boolean boolean59 = type49.equals((java.lang.Object) wildcardClass56);
        java.lang.String str60 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter61 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode62 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value79);
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter61.ternaryOperation(abstractInsnNode62, value67, value73, value79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str83 = type82.toString();
        int int84 = type82.getSort();
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter61.newValue(type82);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode86 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter87 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type88 = null;
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter87.newValue(type88);
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter61.copyOperation(abstractInsnNode86, value89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) str60, value90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("short", (java.lang.Object) analyzerException41, value90);
        analyzerException31.addSuppressed((java.lang.Throwable) analyzerException92);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "long" + "'", str50, "long");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "V" + "'", str52, "V");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(I)V" + "'", str55, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str60, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNull(value81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "V" + "'", str83, "V");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(value85);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
    }

    @Test
    public void test11622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11622");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int14 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.newValue(type13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray19);
        java.lang.Class<?> wildcardClass21 = type16.getClass();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type23 = type22.getElementType();
        java.lang.String str24 = type23.getInternalName();
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier0.newValue(type23);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S");
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier0.newValue(type27);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("B");
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier0.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        java.lang.String str36 = type33.getDescriptor();
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean40 = type38.equals((java.lang.Object) 180);
        java.lang.String str41 = type38.toString();
        java.lang.String str42 = type38.getDescriptor();
        int int43 = type38.getSort();
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier32.newValue(type38);
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier0.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type53, type56, type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter49.newValue(type51);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode61 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter62 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode63 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value74);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter62.ternaryOperation(abstractInsnNode63, value68, value74, value80);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str84 = type83.toString();
        int int85 = type83.getSort();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter62.newValue(type83);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode87 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter88 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type89 = null;
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter88.newValue(type89);
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter62.copyOperation(abstractInsnNode87, value90);
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter49.copyOperation(abstractInsnNode61, value91);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException93 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: V", value92);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = basicVerifier0.unaryOperation(abstractInsnNode46, value92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(I)V" + "'", str20, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "g/mockito/asm/Type" + "'", str24, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "C" + "'", str42, "C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "V" + "'", str84, "V");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(value86);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test11623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11623");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        boolean boolean5 = type1.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str11 = type10.toString();
        int int12 = type10.getSort();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type10, type13, type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str21 = type20.toString();
        int int22 = type20.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type20, type23, type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray25);
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray25);
        int int29 = type8.getOpcode((int) 'a');
        java.lang.String str30 = type8.getClassName();
        int int31 = type8.getSort();
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier0.newValue(type8);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean35 = type33.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass36 = type33.getClass();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        int int39 = type37.getOpcode(0);
        int int40 = type37.getSort();
        org.mockito.asm.Type type41 = type37.getElementType();
        java.lang.String str42 = type37.getDescriptor();
        int int44 = type37.getOpcode(9);
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier0.newValue(type37);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)J");
        java.lang.Throwable throwable53 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable53);
        java.lang.Throwable[] throwableArray55 = analyzerException54.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException54.addSuppressed((java.lang.Throwable) analyzerException58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J");
        analyzerException58.addSuppressed((java.lang.Throwable) analyzerException61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Throwable) analyzerException61);
        java.lang.Throwable[] throwableArray64 = analyzerException63.getSuppressed();
        analyzerException49.addSuppressed((java.lang.Throwable) analyzerException63);
        java.lang.Throwable[] throwableArray66 = analyzerException49.getSuppressed();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter67 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type68 = null;
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean72 = type70.equals((java.lang.Object) 180);
        java.lang.String str73 = type70.toString();
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter67.newValue(type70);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode75 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        int int81 = value80.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value80);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter67.copyOperation(abstractInsnNode75, value80);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode84 = null;
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray89 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type87, typeArray89);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter91 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type92 = null;
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter91.newValue(type92);
        int int94 = value93.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str90, value93);
        org.mockito.asm.tree.analysis.Value value96 = basicInterpreter67.copyOperation(abstractInsnNode84, value93);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException97 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)LI)Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Object) throwableArray66, value93);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value98 = basicVerifier0.copyOperation(abstractInsnNode46, value93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(VVI)J" + "'", str16, "(VVI)J");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "V" + "'", str21, "V");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(VVI)J" + "'", str26, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(VVI)J" + "'", str27, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 98 + "'", int29 == 98);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "long" + "'", str30, "long");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 13 + "'", int44 == 13);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "C" + "'", str73, "C");
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(I)Lchar;" + "'", str90, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(value96);
    }

    @Test
    public void test11624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11624");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean2 = type0.equals((java.lang.Object) 180);
        java.lang.String str3 = type0.toString();
        java.lang.String str4 = type0.getDescriptor();
        int int5 = type0.getSize();
        java.lang.String str6 = type0.getClassName();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value32);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str39 = type38.toString();
        int int40 = type38.getSort();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type38, type41, type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter34.newValue(type36);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter7.merge(value32, value45);
        java.lang.Class<?> wildcardClass47 = value45.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass47);
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass47);
        java.lang.String str50 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass47);
        java.lang.String str52 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass47);
        java.lang.String str53 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        boolean boolean54 = type0.equals((java.lang.Object) wildcardClass47);
        java.lang.Class<?> wildcardClass55 = type0.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        int int58 = type57.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "C" + "'", str3, "C");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "C" + "'", str4, "C");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "char" + "'", str6, "char");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(VVI)J" + "'", str44, "(VVI)J");
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str48, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str49, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str50, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str51, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str52, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str53, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/Type" + "'", str56, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test11625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11625");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        int int2 = type0.getSort();
        java.lang.String str3 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str9 = type8.toString();
        int int10 = type8.getSort();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type8, type11, type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter4.newValue(type6);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean19 = type17.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.String str26 = type23.toString();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type6, type16, type17, type21, type23, type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type33, type36, type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.toString();
        int int45 = type43.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type43, type46, type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray48);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray48);
        int int52 = type0.getSort();
        java.lang.String str53 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        int int57 = type55.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.toString();
        int int63 = type61.getSort();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type61, type64, type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        int int71 = type69.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str76 = type75.toString();
        int int77 = type75.getSort();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type75, type78, type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray80);
        boolean boolean83 = type59.equals((java.lang.Object) typeArray80);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray80);
        boolean boolean85 = type0.equals((java.lang.Object) str84);
        int int86 = type0.getSize();
        java.lang.String str87 = type0.getClassName();
        int int88 = type0.getSort();
        int int89 = type0.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(VVI)J" + "'", str14, "(VVI)J");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(JDCJCI)V" + "'", str29, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)J" + "'", str39, "(VVI)J");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VVI)J" + "'", str49, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)V" + "'", str51, "(VVI)V");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VVI)J" + "'", str67, "(VVI)J");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "V" + "'", str76, "V");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)J" + "'", str81, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(VVI)J" + "'", str84, "(VVI)J");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "void" + "'", str87, "void");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test11626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11626");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        int int31 = type30.getSort();
        java.lang.String str32 = type30.getDescriptor();
        java.lang.String str33 = type30.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type50 = null;
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter49.newValue(type50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter36.copyOperation(abstractInsnNode48, value51);
        int int53 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.copyOperation(abstractInsnNode35, value51);
        java.lang.Class<?> wildcardClass55 = basicInterpreter0.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass55);
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass55);
        java.lang.String str58 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str56, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str57, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str58, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type59);
    }

    @Test
    public void test11627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11627");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str10 = type9.toString();
        int int11 = type9.getSort();
        java.lang.String str12 = type9.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type17, type20, type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter13.newValue(type15);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean28 = type26.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean34 = type32.equals((java.lang.Object) 180);
        java.lang.String str35 = type32.toString();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type15, type25, type26, type30, type32, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.toString();
        int int44 = type42.getSort();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type42, type45, type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type52, type55, type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray57);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray57);
        int int61 = type9.getSort();
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier0.newValue(type9);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getObjectType("int");
        int int65 = type64.getSort();
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier0.newValue(type64);
        int int68 = type64.getOpcode(67);
        int int69 = type64.getDimensions();
        int int70 = type64.getSize();
        java.lang.String str71 = type64.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(JDCJCI)V" + "'", str38, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(VVI)J" + "'", str48, "(VVI)J");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)J" + "'", str58, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)V" + "'", str60, "(VVI)V");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 71 + "'", int68 == 71);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lint;" + "'", str71, "Lint;");
    }

    @Test
    public void test11628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11628");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        int int43 = type41.getOpcode(0);
        int int44 = type41.getSize();
        java.lang.String str45 = type41.toString();
        java.lang.Class<?> wildcardClass46 = type41.getClass();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        java.lang.String str48 = type47.getClassName();
        int int49 = type47.getDimensions();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("Lchar;");
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getObjectType("ckito.asm.Type");
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass55 = type54.getClass();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        java.lang.String str57 = type56.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.toString();
        int int63 = type61.getSort();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type61, type64, type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray66);
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray66);
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray66);
        boolean boolean71 = type47.equals((java.lang.Object) type51);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str45, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.mockito.asm.Type" + "'", str48, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.mockito.asm.Type" + "'", str57, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VVI)J" + "'", str67, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str68, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(VVI)Lckito.asm.Type;" + "'", str69, "(VVI)Lckito.asm.Type;");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VVI)Lchar;" + "'", str70, "(VVI)Lchar;");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test11629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11629");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass1 = basicInterpreter0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        int int8 = type7.getDimensions();
        java.lang.String str9 = type7.getClassName();
        java.lang.Class<?> wildcardClass10 = type7.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str2, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str4, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str6, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.mockito.asm.tree.analysis.BasicInterpreter" + "'", str9, "org.mockito.asm.tree.analysis.BasicInterpreter");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/Type" + "'", str11, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11630");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        java.lang.String str49 = type46.getClassName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str52 = type51.getClassName();
        org.mockito.asm.Type[] typeArray54 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray54);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray54);
        java.lang.Class<?> wildcardClass57 = typeArray54.getClass();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        int int62 = type61.getSort();
        java.lang.String str63 = type61.getClassName();
        int int64 = type61.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "char" + "'", str49, "char");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "void" + "'", str52, "void");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(I)V" + "'", str55, "(I)V");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(I)C" + "'", str56, "(I)C");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str60, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 9 + "'", int62 == 9);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.mockito.asm.Type[]" + "'", str63, "org.mockito.asm.Type[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test11631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11631");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        int int2 = type0.getSort();
        java.lang.String str3 = type0.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        java.lang.String str8 = type5.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str14 = type13.toString();
        int int15 = type13.getSort();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type13, type16, type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter9.newValue(type11);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean24 = type22.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean30 = type28.equals((java.lang.Object) 180);
        java.lang.String str31 = type28.toString();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type11, type21, type22, type26, type28, type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str39 = type38.toString();
        int int40 = type38.getSort();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type38, type41, type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type48, type51, type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray53);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray53);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray53);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray53);
        java.lang.String str59 = type0.getDescriptor();
        java.lang.String str60 = type0.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "void" + "'", str3, "void");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(VVI)J" + "'", str19, "(VVI)J");
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(JDCJCI)V" + "'", str34, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(VVI)J" + "'", str44, "(VVI)J");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VVI)J" + "'", str54, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(VVI)J" + "'", str55, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VVI)V" + "'", str56, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(VVI)I" + "'", str57, "(VVI)I");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)V" + "'", str58, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "V" + "'", str59, "V");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "void" + "'", str60, "void");
    }

    @Test
    public void test11632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11632");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter8.ternaryOperation(abstractInsnNode9, value14, value20, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str40 = type39.toString();
        int int41 = type39.getSort();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type39, type42, type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter35.newValue(type37);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter8.merge(value33, value46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean50 = type48.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass51 = type48.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter8.newValue(type52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str56 = type55.getClassName();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.newValue(type55);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getObjectType("C");
        int int60 = type59.getSize();
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter0.newValue(type59);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass63 = type62.getClass();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        int int65 = type64.getSort();
        java.lang.String str66 = type64.toString();
        int int67 = type64.getSort();
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter0.newValue(type64);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean72 = type70.equals((java.lang.Object) 88);
        java.lang.String str73 = type70.toString();
        boolean boolean75 = type70.equals((java.lang.Object) 0);
        int int77 = type70.getOpcode(116);
        java.lang.String str78 = type70.getDescriptor();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.newValue(type70);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getObjectType("(VVI)Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        java.lang.String str82 = type81.toString();
        java.lang.String str83 = type81.getDescriptor();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type81);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V;");
        int int87 = type86.getSort();
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.newValue(type86);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VVI)J" + "'", str45, "(VVI)J");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "long" + "'", str56, "long");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str66, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L(I)V;" + "'", str73, "L(I)V;");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 120 + "'", int77 == 120);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L(I)V;" + "'", str78, "L(I)V;");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L(VVI)Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;;" + "'", str82, "L(VVI)Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;;");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L(VVI)Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;;" + "'", str83, "L(VVI)Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;;");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 10 + "'", int87 == 10);
        org.junit.Assert.assertNotNull(value88);
    }

    @Test
    public void test11633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11633");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int3 = type1.getOpcode(83);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type6 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        java.lang.String str10 = type7.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.toString();
        int int17 = type15.getSort();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type15, type18, type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter11.newValue(type13);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean26 = type24.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean32 = type30.equals((java.lang.Object) 180);
        java.lang.String str33 = type30.toString();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type13, type23, type24, type28, type30, type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str51 = type50.toString();
        int int52 = type50.getSort();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type50, type53, type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray55);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray55);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray55);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray55);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray55);
        java.lang.Class<?> wildcardClass62 = typeArray55.getClass();
        java.lang.String str63 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass62);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 87 + "'", int3 == 87);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(VVI)J" + "'", str21, "(VVI)J");
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(JDCJCI)V" + "'", str36, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "V" + "'", str51, "V");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VVI)J" + "'", str56, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(VVI)J" + "'", str57, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)V" + "'", str58, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)I" + "'", str59, "(VVI)I");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)LLorg/mockito/asm/Type;;" + "'", str60, "(VVI)LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)L(I)Z;" + "'", str61, "(VVI)L(I)Z;");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str63, "[Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11634");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.merge(value8, value13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        int int19 = type16.getSort();
        java.lang.String str20 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier0.newValue(type16);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter23 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type27, type30, type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter23.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        int int38 = value37.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter23, value37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass41 = type40.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        int int43 = type42.getSort();
        int int44 = type42.getSize();
        int int45 = type42.getDimensions();
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter23.newValue(type42);
        java.lang.String str47 = type42.toString();
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier0.newValue(type42);
        java.lang.String str49 = type42.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "void" + "'", str20, "void");
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(VVI)J" + "'", str33, "(VVI)J");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.mockito.asm.Type" + "'", str49, "org.mockito.asm.Type");
    }

    @Test
    public void test11635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11635");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: L(VVI)Lorg/mockito/asm/Type;;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str9 = type8.toString();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray11);
        java.lang.Class<?> wildcardClass13 = type8.getClass();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type15 = type14.getElementType();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        java.lang.String str19 = type16.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter20 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type24, type27, type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter20.newValue(type22);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean35 = type33.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean41 = type39.equals((java.lang.Object) 180);
        java.lang.String str42 = type39.toString();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type22, type32, type33, type37, type39, type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray44);
        int int46 = type16.getSort();
        int int47 = type16.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str50 = type49.getClassName();
        org.mockito.asm.Type[] typeArray52 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray52);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray52);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray52);
        int int56 = type15.getDimensions();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        int int58 = type57.getSort();
        java.lang.String str59 = type57.getDescriptor();
        java.lang.String str60 = type57.getDescriptor();
        java.lang.String str61 = type57.getClassName();
        int int62 = type57.getSize();
        java.lang.String str63 = type57.getClassName();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass65 = type64.getClass();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        int int67 = type66.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.toString();
        int int73 = type71.getSort();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type71, type74, type75 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray76);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str82 = type81.toString();
        int int83 = type81.getSort();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type85 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray86 = new org.mockito.asm.Type[] { type81, type84, type85 };
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type79, typeArray86);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray86);
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray86);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray86);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray86);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray86);
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray86);
        java.lang.Class<?> wildcardClass94 = type1.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(I)V" + "'", str12, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "V" + "'", str19, "V");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VVI)J" + "'", str30, "(VVI)J");
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "C" + "'", str42, "C");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(JDCJCI)V" + "'", str45, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "void" + "'", str50, "void");
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(I)V" + "'", str53, "(I)V");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(I)V" + "'", str54, "(I)V");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(I)Lg/mockito/asm/Type;" + "'", str55, "(I)Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "C" + "'", str60, "C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "char" + "'", str61, "char");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "char" + "'", str63, "char");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(VVI)J" + "'", str77, "(VVI)J");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "V" + "'", str82, "V");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(VVI)J" + "'", str87, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(VVI)J" + "'", str88, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str89, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VVI)C" + "'", str90, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(VVI)Lg/mockito/asm/Type;" + "'", str91, "(VVI)Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str92, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(VVI)Lrg.mockito.asm.tree.analysis.AnalyzerException: L(VVI)Lorg/mockito/asm/Type;" + "'", str93, "(VVI)Lrg.mockito.asm.tree.analysis.AnalyzerException: L(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test11636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11636");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        java.lang.String str44 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type48 = type47.getElementType();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        int int51 = type49.getSort();
        java.lang.String str52 = type49.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str58 = type57.toString();
        int int59 = type57.getSort();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type57, type60, type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter53.newValue(type55);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean74 = type72.equals((java.lang.Object) 180);
        java.lang.String str75 = type72.toString();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type55, type65, type66, type70, type72, type76 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray77);
        int int79 = type49.getSort();
        int int80 = type49.getSort();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str83 = type82.getClassName();
        org.mockito.asm.Type[] typeArray85 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray85);
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray85);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray85);
        int int90 = type48.getOpcode(175);
        int int91 = type48.getDimensions();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str41, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str42, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str43, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str44, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str45, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str46, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "V" + "'", str52, "V");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "V" + "'", str58, "V");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)J" + "'", str63, "(VVI)J");
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "C" + "'", str75, "C");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(JDCJCI)V" + "'", str78, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "void" + "'", str83, "void");
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(I)V" + "'", str86, "(I)V");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(I)V" + "'", str87, "(I)V");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(I)Lg/mockito/asm/tree/analysis/BasicValue;" + "'", str88, "(I)Lg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 179 + "'", int90 == 179);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test11637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11637");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type32, type35, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter28.newValue(type30);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.merge(value26, value39);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.merge(value26, value43);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(VVI)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type47);
        java.lang.String str49 = type47.toString();
        int int50 = type47.getDimensions();
        int int51 = type47.getSize();
        int int52 = type47.getSort();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("L(I)V;");
        org.mockito.asm.Type type55 = type54.getElementType();
        int int56 = type54.getSize();
        java.lang.String str57 = type54.getDescriptor();
        int int58 = type54.getSort();
        boolean boolean59 = type47.equals((java.lang.Object) type54);
        java.lang.String str60 = type54.toString();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)J" + "'", str38, "(VVI)J");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "LL(I)V;;" + "'", str57, "LL(I)V;;");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "LL(I)V;;" + "'", str60, "LL(I)V;;");
    }

    @Test
    public void test11638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11638");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean2 = type0.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass3 = type0.getClass();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        int int6 = type4.getOpcode(0);
        int int7 = type4.getSort();
        org.mockito.asm.Type type8 = type4.getElementType();
        org.mockito.asm.Type type9 = type8.getElementType();
        java.lang.String str10 = type9.getClassName();
        int int11 = type9.getSize();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str13 = type12.toString();
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str21 = type20.toString();
        int int22 = type20.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type20, type23, type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter16.newValue(type18);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean31 = type29.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean37 = type35.equals((java.lang.Object) 180);
        java.lang.String str38 = type35.toString();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type18, type28, type29, type33, type35, type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type45, type48, type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        int int57 = type55.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type55, type58, type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray60);
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray60);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray60);
        org.mockito.asm.Type type65 = type9.getElementType();
        org.mockito.asm.Type type66 = type65.getElementType();
        java.lang.Class<?> wildcardClass67 = type66.getClass();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "mockito.asm.Type" + "'", str10, "mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "V" + "'", str21, "V");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(VVI)J" + "'", str26, "(VVI)J");
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(JDCJCI)V" + "'", str41, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)J" + "'", str61, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VVI)J" + "'", str62, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)V" + "'", str63, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VVI)Lmockito/asm/Type;" + "'", str64, "(VVI)Lmockito/asm/Type;");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test11639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11639");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        int int31 = type30.getSort();
        java.lang.String str32 = type30.getDescriptor();
        java.lang.String str33 = type30.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSort();
        boolean boolean40 = type36.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type45, type48, type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        int int57 = type55.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type55, type58, type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray60);
        int int64 = type43.getOpcode((int) 'a');
        java.lang.String str65 = type43.getClassName();
        int int66 = type43.getSort();
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier35.newValue(type43);
        int int69 = type43.getOpcode(195);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type43);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.toString();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray74);
        java.lang.Class<?> wildcardClass76 = type71.getClass();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        java.lang.String str78 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass76);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        java.lang.Object obj80 = null;
        boolean boolean81 = type79.equals(obj80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter0.newValue(type79);
        java.lang.String str83 = type79.getDescriptor();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)J" + "'", str61, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VVI)J" + "'", str62, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 98 + "'", int64 == 98);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "long" + "'", str65, "long");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 7 + "'", int66 == 7);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 196 + "'", int69 == 196);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(I)V" + "'", str75, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str78, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str83, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11640");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass31 = type30.getClass();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        int int33 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSort();
        java.lang.String str39 = type36.getDescriptor();
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean43 = type41.equals((java.lang.Object) 180);
        java.lang.String str44 = type41.toString();
        java.lang.String str45 = type41.getDescriptor();
        int int46 = type41.getSort();
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier35.newValue(type41);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type41);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type54 = null;
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter53.newValue(type54);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter57 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode58 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value75);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter57.ternaryOperation(abstractInsnNode58, value63, value69, value75);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter80 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type81 = null;
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter80.newValue(type81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value82);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter53.ternaryOperation(abstractInsnNode56, value69, value82, value86);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode88 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier91 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type92 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value93 = basicVerifier91.newValue(type92);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value93);
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter53.copyOperation(abstractInsnNode88, value93);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException96 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) type52, value93);
        int int97 = value93.getSize();
        org.mockito.asm.tree.analysis.Value value98 = basicInterpreter0.copyOperation(abstractInsnNode49, value93);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNull(value77);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNull(value87);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 2 + "'", int97 == 2);
        org.junit.Assert.assertNotNull(value98);
    }

    @Test
    public void test11641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11641");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type45 = null;
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter44.newValue(type45);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter48.ternaryOperation(abstractInsnNode49, value54, value60, value66);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter44.ternaryOperation(abstractInsnNode47, value60, value73, value77);
        org.mockito.asm.tree.analysis.Value value79 = null;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier0.merge(value60, value79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;");
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier0.newValue(type82);
        org.mockito.asm.Type type84 = type82.getElementType();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
    }

    @Test
    public void test11642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11642");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean29 = type27.equals((java.lang.Object) 180);
        java.lang.String str30 = type27.toString();
        int int31 = type27.getSort();
        java.lang.String str32 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter0.newValue(type27);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str39 = type38.toString();
        int int40 = type38.getSort();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type38, type41, type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter34.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.toString();
        int int49 = type47.getSort();
        java.lang.String str50 = type47.getDescriptor();
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean54 = type52.equals((java.lang.Object) 180);
        java.lang.String str55 = type52.toString();
        java.lang.String str56 = type52.getDescriptor();
        int int57 = type52.getSort();
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier46.newValue(type52);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int60 = type59.getSort();
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier46.newValue(type59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.merge(value45, value61);
        int int63 = value62.getSize();
        int int64 = value62.getSize();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(VVI)J" + "'", str44, "(VVI)J");
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "C" + "'", str56, "C");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test11643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11643");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray7 = analyzerException6.getSuppressed();
        java.lang.Throwable[] throwableArray8 = analyzerException6.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("[Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException6);
        java.lang.Throwable[] throwableArray10 = analyzerException6.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter16.ternaryOperation(abstractInsnNode17, value22, value28, value34);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter37.ternaryOperation(abstractInsnNode38, value43, value49, value55);
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier15.merge(value22, value57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) "void", value57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Throwable) analyzerException59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: void: expected 171, but found .", (java.lang.Throwable) analyzerException59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray65 = analyzerException64.getSuppressed();
        java.lang.Throwable[] throwableArray66 = analyzerException64.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("[Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException64);
        analyzerException59.addSuppressed((java.lang.Throwable) analyzerException64);
        java.lang.Throwable[] throwableArray69 = analyzerException59.getSuppressed();
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: hi!", (java.lang.Throwable) analyzerException59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("boolean", (java.lang.Throwable) analyzerException71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("(JDCJCI)LC;", (java.lang.Throwable) analyzerException71);
        java.lang.Throwable[] throwableArray74 = analyzerException73.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("()Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;", (java.lang.Throwable) analyzerException73);
        java.lang.String str76 = analyzerException75.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: ()Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;" + "'", str76, "org.mockito.asm.tree.analysis.AnalyzerException: ()Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;");
    }

    @Test
    public void test11644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11644");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Z");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)L(I)V;", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("()Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type10 = null;
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter9.newValue(type10);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value31);
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter13.ternaryOperation(abstractInsnNode14, value19, value25, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type37 = null;
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter9.ternaryOperation(abstractInsnNode12, value25, value38, value42);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter45 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value63);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter45.ternaryOperation(abstractInsnNode46, value51, value57, value63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value70);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter72 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.toString();
        int int78 = type76.getSort();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type76, type79, type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray81);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter72.newValue(type74);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter45.merge(value70, value83);
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter9.copyOperation(abstractInsnNode44, value83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("void", (java.lang.Object) 6, value85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: JDCJCI)Lorg.mockito.asm.Type", (java.lang.Object) analyzerException6, value85);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNull(value33);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value85);
    }

    @Test
    public void test11645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11645");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str31 = type30.toString();
        int int32 = type30.getSort();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type30, type33, type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        java.lang.Class<?> wildcardClass37 = typeArray35.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter0.newValue(type39);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.Value value42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.copyOperation(abstractInsnNode41, value42);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.Value value45 = null;
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter0.copyOperation(abstractInsnNode44, value45);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.toString();
        int int70 = type68.getSort();
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter47.newValue(type68);
        java.lang.Class<?> wildcardClass72 = type68.getClass();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass72);
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter0.newValue(type73);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.newOperation(abstractInsnNode75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "V" + "'", str31, "V");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VVI)J" + "'", str36, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str38, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNull(value46);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(value71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
    }

    @Test
    public void test11646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11646");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass1 = type0.getClass();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        int int3 = type2.getDimensions();
        org.mockito.asm.Type type4 = type2.getElementType();
        java.lang.String str5 = type4.getInternalName();
        org.mockito.asm.Type type6 = type4.getElementType();
        int int7 = type6.getSize();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = type11.getSort();
        boolean boolean15 = type11.equals((java.lang.Object) (-1.0d));
        int int16 = type11.getSort();
        java.lang.String str17 = type11.getClassName();
        java.lang.String str18 = type11.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("B");
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type23 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        java.lang.String str27 = type24.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type32, type35, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter28.newValue(type30);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean43 = type41.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean49 = type47.equals((java.lang.Object) 180);
        java.lang.String str50 = type47.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type30, type40, type41, type45, type47, type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str58 = type57.toString();
        int int59 = type57.getSort();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type57, type60, type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str68 = type67.toString();
        int int69 = type67.getSort();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type67, type70, type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray72);
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray72);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray72);
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray72);
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray72);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray72);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray72);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray72);
        java.lang.String str82 = type6.getDescriptor();
        java.lang.String str83 = type6.getInternalName();
        java.lang.String str84 = type6.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "g/mockito/asm/Type" + "'", str5, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7 + "'", int16 == 7);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "long" + "'", str17, "long");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "J" + "'", str18, "J");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)J" + "'", str38, "(VVI)J");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "C" + "'", str50, "C");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(JDCJCI)V" + "'", str53, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "V" + "'", str58, "V");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)J" + "'", str63, "(VVI)J");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "V" + "'", str68, "V");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)J" + "'", str73, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)J" + "'", str74, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(VVI)V" + "'", str75, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(VVI)I" + "'", str76, "(VVI)I");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(VVI)LLorg/mockito/asm/Type;;" + "'", str77, "(VVI)LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VVI)B" + "'", str78, "(VVI)B");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(VVI)J" + "'", str79, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str80, "(VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)Lmockito/asm/Type;" + "'", str81, "(VVI)Lmockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Lmockito/asm/Type;" + "'", str82, "Lmockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "mockito/asm/Type" + "'", str83, "mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Lmockito/asm/Type;" + "'", str84, "Lmockito/asm/Type;");
    }

    @Test
    public void test11647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11647");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass1 = basicInterpreter0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str2, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str4, "org/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str5, "org/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str6, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str7, "org/mockito/asm/tree/analysis/BasicInterpreter");
    }

    @Test
    public void test11648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11648");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("LI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.ternaryOperation(abstractInsnNode11, value16, value22, value28);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter6.ternaryOperation(abstractInsnNode9, value22, value35, value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value35, value45, value65);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean71 = type69.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass72 = type69.getClass();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass72);
        java.lang.String str74 = type73.toString();
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter4.newValue(type73);
        int int76 = type73.getSize();
        java.lang.String str77 = type73.getDescriptor();
        org.mockito.asm.Type type78 = type73.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str81 = type80.toString();
        int int82 = type80.getSort();
        java.lang.String str83 = type80.getDescriptor();
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier79.newValue(type80);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean87 = type85.equals((java.lang.Object) 180);
        java.lang.String str88 = type85.toString();
        java.lang.String str89 = type85.getDescriptor();
        int int90 = type85.getSort();
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier79.newValue(type85);
        int int92 = value91.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException93 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) type78, value91);
        java.lang.Throwable[] throwableArray94 = analyzerException93.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)C", (java.lang.Throwable) analyzerException93);
        java.lang.Throwable[] throwableArray96 = analyzerException93.getSuppressed();
        boolean boolean97 = type1.equals((java.lang.Object) analyzerException93);
        int int98 = type1.getDimensions();
        java.lang.String str99 = type1.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value30);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str74, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str77, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "V" + "'", str81, "V");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "V" + "'", str83, "V");
        org.junit.Assert.assertNull(value84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "C" + "'", str88, "C");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "C" + "'", str89, "C");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2 + "'", int90 == 2);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(throwableArray96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str99, "org/mockito/asm/tree/analysis/BasicInterpreter");
    }

    @Test
    public void test11649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11649");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("(JDCJCI)Lg/mockito/asm/Type;");
        java.lang.Class<?> wildcardClass3 = type2.getClass();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)I", (java.lang.Throwable) analyzerException7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str11 = type10.toString();
        int int12 = type10.getSort();
        java.lang.String str13 = type10.getDescriptor();
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str21 = type20.toString();
        int int22 = type20.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type20, type23, type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter16.newValue(type18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        int int31 = value30.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter16, value30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass34 = type33.getClass();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        int int36 = type35.getSort();
        int int37 = type35.getSize();
        int int38 = type35.getDimensions();
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter16.newValue(type35);
        java.lang.String str40 = type35.toString();
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier9.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.BasicValue", (java.lang.Object) analyzerException7, value41);
        int int43 = value41.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;", (java.lang.Object) wildcardClass3, value41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray48 = analyzerException47.getSuppressed();
        java.lang.Throwable[] throwableArray49 = analyzerException47.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException47);
        java.lang.Throwable[] throwableArray51 = analyzerException47.getSuppressed();
        analyzerException44.addSuppressed((java.lang.Throwable) analyzerException47);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertNull(value14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "V" + "'", str21, "V");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(VVI)J" + "'", str26, "(VVI)J");
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str40, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test11650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11650");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        java.lang.Class<?> wildcardClass10 = typeArray8.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        java.lang.String str13 = type12.toString();
        int int14 = type12.getDimensions();
        int int15 = type12.getDimensions();
        int int17 = type12.getOpcode(171);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str11, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str13, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 175 + "'", int17 == 175);
    }

    @Test
    public void test11651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11651");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(VVI)C");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.Value value4 = basicInterpreter2.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter2.ternaryOperation(abstractInsnNode5, value18, value31, value35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter2.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value66);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter68 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str73 = type72.toString();
        int int74 = type72.getSort();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type72, type75, type76 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray77);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter68.newValue(type70);
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter41.merge(value66, value79);
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter2.copyOperation(abstractInsnNode40, value79);
        boolean boolean82 = type1.equals((java.lang.Object) value81);
        org.mockito.asm.Type type83 = type1.getElementType();
        int int84 = type83.getSort();
        int int85 = type83.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "V" + "'", str73, "V");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VVI)J" + "'", str78, "(VVI)J");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test11652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11652");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        java.lang.String str30 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str36 = type35.toString();
        int int37 = type35.getSort();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type35, type38, type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter31.newValue(type33);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean46 = type44.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean52 = type50.equals((java.lang.Object) 180);
        java.lang.String str53 = type50.toString();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type33, type43, type44, type48, type50, type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray55);
        int int57 = type27.getSort();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int63 = type61.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier59.newValue(type61);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type61);
        org.mockito.asm.Type type66 = null;
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter0.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean70 = type68.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass71 = type68.getClass();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass71);
        int int74 = type72.getOpcode(0);
        java.lang.String str75 = type72.getInternalName();
        org.mockito.asm.Type type76 = type72.getElementType();
        int int77 = type72.getSort();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter0.newValue(type72);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode79 = null;
        org.mockito.asm.tree.analysis.Value value80 = null;
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter0.copyOperation(abstractInsnNode79, value80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str83 = type82.toString();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray85 = new org.mockito.asm.Type[] { type84 };
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray85);
        java.lang.Class<?> wildcardClass87 = type82.getClass();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        java.lang.String str89 = type88.toString();
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter0.newValue(type88);
        int int92 = type88.getOpcode(175);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(VVI)J" + "'", str41, "(VVI)J");
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "C" + "'", str53, "C");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(JDCJCI)V" + "'", str56, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(value58);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 87 + "'", int63 == 87);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/asm/Type" + "'", str75, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNull(value81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "V" + "'", str83, "V");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(I)V" + "'", str86, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str89, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 179 + "'", int92 == 179);
    }

    @Test
    public void test11653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11653");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter28.ternaryOperation(abstractInsnNode29, value34, value40, value46);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter49.ternaryOperation(abstractInsnNode50, value55, value61, value67);
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier27.merge(value34, value69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter6.merge(value70, value73);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("I", (java.lang.Object) 9, value70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: S", (java.lang.Throwable) analyzerException75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.Type;", (java.lang.Throwable) analyzerException77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lg/mockito/asm/tree/analysis/BasicInterpreter;", (java.lang.Throwable) analyzerException77);
        java.lang.Throwable[] throwableArray80 = analyzerException77.getSuppressed();
        java.lang.Throwable[] throwableArray81 = analyzerException77.getSuppressed();
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNull(value48);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(throwableArray81);
    }

    @Test
    public void test11654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11654");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray4 = new org.mockito.asm.Type[] { type3 };
        java.lang.String str5 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray4);
        java.lang.Class<?> wildcardClass6 = type1.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int9 = type7.getOpcode(141);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str12 = type11.getClassName();
        org.mockito.asm.Type[] typeArray14 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = type18.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type24, type27, type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray29);
        boolean boolean32 = type7.equals((java.lang.Object) str31);
        org.mockito.asm.Type type33 = type7.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str36 = type35.toString();
        int int37 = type35.getSort();
        java.lang.String str38 = type35.getDescriptor();
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type45, type48, type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter41.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter41, value55);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass59 = type58.getClass();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        int int61 = type60.getSort();
        int int62 = type60.getSize();
        int int63 = type60.getDimensions();
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter41.newValue(type60);
        java.lang.String str65 = type60.toString();
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier34.newValue(type60);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter67 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode68 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier83 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier83.newValue(type84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value85);
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter67.ternaryOperation(abstractInsnNode68, value73, value79, value85);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter67.newValue(type88);
        int int91 = type88.getOpcode(54);
        org.mockito.asm.tree.analysis.Value value92 = basicVerifier34.newValue(type88);
        int int93 = value92.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Object) type7, value92);
        int int95 = type7.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(typeArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(I)V" + "'", str5, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 145 + "'", int9 == 145);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "void" + "'", str12, "void");
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(I)V" + "'", str15, "(I)V");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str16, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VVI)J" + "'", str30, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(VVI)J" + "'", str31, "(VVI)J");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "V" + "'", str38, "V");
        org.junit.Assert.assertNull(value39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str65, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNull(value87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 56 + "'", int91 == 56);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test11655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11655");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        int int39 = type38.getSort();
        java.lang.String str40 = type38.getDescriptor();
        java.lang.String str41 = type38.getDescriptor();
        int int42 = type38.getSort();
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.newValue(type38);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("Lg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter0.newValue(type45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        boolean boolean52 = type48.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier47.newValue(type48);
        int int54 = type48.getSort();
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter0.newValue(type48);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int59 = type57.getOpcode((int) (byte) 1);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter0.newValue(type57);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        int int62 = type61.getSort();
        java.lang.String str63 = type61.getDescriptor();
        java.lang.String str64 = type61.getDescriptor();
        java.lang.String str65 = type61.getClassName();
        int int66 = type61.getSize();
        java.lang.Object obj67 = null;
        boolean boolean68 = type61.equals(obj67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter0.newValue(type61);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode70 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        int int76 = value75.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value75);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter0.copyOperation(abstractInsnNode70, value75);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value80 = basicInterpreter0.newOperation(abstractInsnNode79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "C" + "'", str63, "C");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "C" + "'", str64, "C");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "char" + "'", str65, "char");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNotNull(value78);
    }

    @Test
    public void test11656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11656");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode4 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter3.ternaryOperation(abstractInsnNode4, value9, value15, value21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter3.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter3.copyOperation(abstractInsnNode28, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter34.ternaryOperation(abstractInsnNode35, value40, value46, value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter61 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str66 = type65.toString();
        int int67 = type65.getSort();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type65, type68, type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter61.newValue(type63);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter34.merge(value59, value72);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter74 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type75 = null;
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter33.merge(value59, value76);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.merge(value31, value59);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getObjectType("L(I)V;");
        org.mockito.asm.Type type82 = type81.getElementType();
        int int83 = type81.getDimensions();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type81);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicVerifier;");
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.newValue(type86);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getReturnType("(I)V");
        int int90 = type89.getSize();
        int int91 = type89.getSize();
        java.lang.String str92 = type89.getClassName();
        java.lang.String str93 = type89.getDescriptor();
        int int94 = type89.getSize();
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter0.newValue(type89);
        java.lang.Object obj96 = null;
        boolean boolean97 = type89.equals(obj96);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNull(value54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)J" + "'", str71, "(VVI)J");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "void" + "'", str92, "void");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "V" + "'", str93, "V");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNull(value95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test11657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11657");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)L(I)V;");
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str30 = type29.toString();
        int int31 = type29.getSort();
        java.lang.String str32 = type29.getDescriptor();
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type35 = null;
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter34.newValue(type35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value41);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier28.merge(value36, value41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        int int47 = type44.getSort();
        java.lang.String str48 = type44.getClassName();
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier28.newValue(type44);
        java.lang.String str50 = type44.getClassName();
        java.lang.String str51 = type44.getClassName();
        java.lang.String str52 = type44.getClassName();
        int int54 = type44.getOpcode(181);
        int int55 = type44.getSize();
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter0.newValue(type44);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type57 = type44.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertNull(value33);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "void" + "'", str48, "void");
        org.junit.Assert.assertNull(value49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "void" + "'", str50, "void");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "void" + "'", str51, "void");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "void" + "'", str52, "void");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 186 + "'", int54 == 186);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNull(value56);
    }

    @Test
    public void test11658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11658");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type32, type35, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter28.newValue(type30);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.merge(value26, value39);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.merge(value26, value43);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter46 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value64);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter46.ternaryOperation(abstractInsnNode47, value52, value58, value64);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter67 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.toString();
        int int73 = type71.getSort();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type71, type74, type75 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter67.newValue(type69);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.merge(value58, value78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean82 = type80.equals((java.lang.Object) 180);
        java.lang.String str83 = type80.toString();
        int int84 = type80.getSort();
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter0.newValue(type80);
        org.mockito.asm.Type type86 = null;
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.newValue(type86);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode88 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter91 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type92 = null;
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter91.newValue(type92);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value93);
        int int95 = value93.getSize();
        org.mockito.asm.tree.analysis.Value value96 = basicInterpreter0.copyOperation(abstractInsnNode88, value93);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)J" + "'", str38, "(VVI)J");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNull(value66);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(VVI)J" + "'", str77, "(VVI)J");
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "C" + "'", str83, "C");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertNotNull(value96);
    }

    @Test
    public void test11659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11659");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type7, type10, type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray12);
        int int15 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type17 = null;
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter16.newValue(type17);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        org.mockito.asm.tree.analysis.Value value20 = null;
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter16.copyOperation(abstractInsnNode19, value20);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        int int30 = type28.getSort();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type28, type31, type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter24.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter24, value38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass42 = type41.getClass();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        int int44 = type43.getSort();
        int int45 = type43.getSize();
        int int46 = type43.getDimensions();
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter24.newValue(type43);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean50 = type48.equals((java.lang.Object) 180);
        java.lang.String str51 = type48.toString();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter24.newValue(type48);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter16.copyOperation(abstractInsnNode22, value52);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode54 = null;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type60 = type59.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int65 = type63.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier61.newValue(type63);
        int int67 = value66.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Object) type59, value66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)D", (java.lang.Object) 61, value66);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter16.copyOperation(abstractInsnNode54, value66);
        boolean boolean71 = type1.equals((java.lang.Object) basicInterpreter16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode72 = null;
        java.util.List list73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value74 = basicInterpreter16.naryOperation(abstractInsnNode72, list73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 7 + "'", int3 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(VVI)J" + "'", str13, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(VVI)J" + "'", str14, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VVI)J" + "'", str34, "(VVI)J");
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 87 + "'", int65 == 87);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test11660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11660");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str3 = type2.toString();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray5 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str6 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray5);
        java.lang.Class<?> wildcardClass7 = type2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int10 = type9.getSize();
        org.mockito.asm.Type type11 = type9.getElementType();
        java.lang.String str12 = type11.getClassName();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str14 = type13.toString();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray16);
        java.lang.Class<?> wildcardClass18 = type13.getClass();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        org.mockito.asm.Type type20 = type19.getElementType();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        java.lang.String str24 = type21.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter25 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str30 = type29.toString();
        int int31 = type29.getSort();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type29, type32, type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter25.newValue(type27);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean40 = type38.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean46 = type44.equals((java.lang.Object) 180);
        java.lang.String str47 = type44.toString();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type27, type37, type38, type42, type44, type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray49);
        int int51 = type21.getSort();
        int int52 = type21.getSort();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str55 = type54.getClassName();
        org.mockito.asm.Type[] typeArray57 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray57);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray57);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray57);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray57);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray57);
        org.mockito.asm.Type type63 = type1.getElementType();
        int int64 = type63.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(I)V" + "'", str6, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "g.mockito.asm.Type" + "'", str12, "g.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(I)V" + "'", str17, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VVI)J" + "'", str35, "(VVI)J");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "C" + "'", str47, "C");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(JDCJCI)V" + "'", str50, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "void" + "'", str55, "void");
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(I)V" + "'", str58, "(I)V");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(I)V" + "'", str59, "(I)V");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(I)Lg/mockito/asm/Type;" + "'", str60, "(I)Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(I)Lg/mockito/asm/Type;" + "'", str61, "(I)Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(I)Lorg.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;;" + "'", str62, "(I)Lorg.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;;");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test11661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11661");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str31 = type30.toString();
        int int32 = type30.getSort();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type30, type33, type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        java.lang.Class<?> wildcardClass37 = typeArray35.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter0.newValue(type39);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.Value value42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.copyOperation(abstractInsnNode41, value42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getObjectType("(VVI)C");
        java.lang.String str46 = type45.toString();
        java.lang.String str47 = type45.getInternalName();
        int int48 = type45.getDimensions();
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter0.newValue(type45);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("mockito.asm.Type");
        int int52 = type51.getDimensions();
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter0.newValue(type51);
        java.lang.Throwable throwable57 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable57);
        java.lang.Throwable[] throwableArray59 = analyzerException58.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException58.addSuppressed((java.lang.Throwable) analyzerException62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J");
        analyzerException62.addSuppressed((java.lang.Throwable) analyzerException65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Throwable) analyzerException65);
        java.lang.Throwable[] throwableArray68 = analyzerException67.getSuppressed();
        java.lang.Class<?> wildcardClass69 = throwableArray68.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter0.newValue(type70);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode72 = null;
        java.util.List list73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value74 = basicInterpreter0.naryOperation(abstractInsnNode72, list73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "V" + "'", str31, "V");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VVI)J" + "'", str36, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str38, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L(VVI)C;" + "'", str46, "L(VVI)C;");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(VVI)C" + "'", str47, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
    }

    @Test
    public void test11662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11662");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int4 = type3.getDimensions();
        org.mockito.asm.Type type5 = type3.getElementType();
        java.lang.String str6 = type5.getInternalName();
        int int8 = type5.getOpcode(21);
        int int10 = type5.getOpcode((-1));
        org.mockito.asm.Type type11 = type5.getElementType();
        java.lang.String str12 = type11.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type14 = null;
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean18 = type16.equals((java.lang.Object) 180);
        java.lang.String str19 = type16.toString();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter13.newValue(type16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        int int27 = value26.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value26);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter13.copyOperation(abstractInsnNode21, value26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray35 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray35);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type38 = null;
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter37.newValue(type38);
        int int40 = value39.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str36, value39);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter13.copyOperation(abstractInsnNode30, value39);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        java.lang.String str48 = type45.getDescriptor();
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type51 = null;
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter50.newValue(type51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value57);
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier44.merge(value52, value57);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter13.copyOperation(abstractInsnNode43, value57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) type11, value60);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "g/mockito/asm/Type" + "'", str6, "g/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 25 + "'", int8 == 25);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lmockito/asm/Type;" + "'", str12, "Lmockito/asm/Type;");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(I)Lchar;" + "'", str36, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertNull(value49);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(value60);
    }

    @Test
    public void test11663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11663");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        int int10 = type7.getOpcode(512);
        int int11 = type7.getSize();
        int int12 = type7.getDimensions();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str14 = type13.toString();
        int int15 = type13.getSort();
        java.lang.String str16 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type25 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type21, type24, type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter17.newValue(type19);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean32 = type30.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean38 = type36.equals((java.lang.Object) 180);
        java.lang.String str39 = type36.toString();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type19, type29, type30, type34, type36, type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str47 = type46.toString();
        int int48 = type46.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type46, type49, type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str57 = type56.toString();
        int int58 = type56.getSort();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type56, type59, type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray61);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray61);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray61);
        int int67 = type7.getOpcode(160);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 516 + "'", int10 == 516);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(VVI)J" + "'", str27, "(VVI)J");
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "C" + "'", str39, "C");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(JDCJCI)V" + "'", str42, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VVI)J" + "'", str52, "(VVI)J");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "V" + "'", str57, "V");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VVI)J" + "'", str62, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)J" + "'", str63, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VVI)V" + "'", str64, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VVI)L(I)Z;" + "'", str65, "(VVI)L(I)Z;");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 164 + "'", int67 == 164);
    }

    @Test
    public void test11664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11664");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.merge(value8, value13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        int int19 = type16.getSort();
        java.lang.String str20 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier0.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        java.lang.String str27 = type24.getDescriptor();
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier23.newValue(type24);
        java.lang.String str29 = type24.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type33 = null;
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type24, value34);
        java.lang.String str37 = type24.toString();
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier0.newValue(type24);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        java.lang.String str43 = type40.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type48, type51, type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter44.newValue(type46);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean59 = type57.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean65 = type63.equals((java.lang.Object) 180);
        java.lang.String str66 = type63.toString();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type46, type56, type57, type61, type63, type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str74 = type73.toString();
        int int75 = type73.getSort();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type77 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray78 = new org.mockito.asm.Type[] { type73, type76, type77 };
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str84 = type83.toString();
        int int85 = type83.getSort();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type87 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray88 = new org.mockito.asm.Type[] { type83, type86, type87 };
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type81, typeArray88);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray88);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray88);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray88);
        org.mockito.asm.tree.analysis.Value value93 = basicVerifier0.newValue(type39);
        org.mockito.asm.Type type94 = null;
        org.mockito.asm.tree.analysis.Value value95 = basicVerifier0.newValue(type94);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode96 = null;
        java.util.List list97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value98 = basicVerifier0.naryOperation(abstractInsnNode96, list97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "void" + "'", str20, "void");
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VVI)J" + "'", str54, "(VVI)J");
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "C" + "'", str66, "C");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(JDCJCI)V" + "'", str69, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "V" + "'", str74, "V");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(VVI)J" + "'", str79, "(VVI)J");
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "V" + "'", str84, "V");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(VVI)J" + "'", str89, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VVI)J" + "'", str90, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(VVI)V" + "'", str91, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(VVI)I" + "'", str92, "(VVI)I");
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertNotNull(value95);
    }

    @Test
    public void test11665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11665");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean32 = type30.equals((java.lang.Object) 180);
        java.lang.String str33 = type30.toString();
        java.lang.String str34 = type30.getDescriptor();
        int int35 = type30.getSort();
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter0.newValue(type30);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        int int38 = type37.getSort();
        java.lang.String str39 = type37.getDescriptor();
        java.lang.String str40 = type37.getDescriptor();
        java.lang.String str41 = type37.getClassName();
        java.lang.String str42 = type37.getClassName();
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.newValue(type37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = type37.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "C" + "'", str39, "C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "char" + "'", str41, "char");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "char" + "'", str42, "char");
        org.junit.Assert.assertNotNull(value43);
    }

    @Test
    public void test11666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11666");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str42 = type41.getInternalName();
        org.mockito.asm.Type type43 = type41.getElementType();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter44.ternaryOperation(abstractInsnNode45, value50, value56, value62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value69);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str76 = type75.toString();
        int int77 = type75.getSort();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type75, type78, type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter71.newValue(type73);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter44.merge(value69, value82);
        java.lang.Class<?> wildcardClass84 = value82.getClass();
        java.lang.String str85 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass84);
        boolean boolean86 = type43.equals((java.lang.Object) wildcardClass84);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass84);
        int int88 = type87.getSort();
        java.lang.String str89 = type87.getClassName();
        java.lang.String str90 = type87.getClassName();
        int int92 = type87.getOpcode(22);
        org.mockito.asm.Type[] typeArray94 = org.mockito.asm.Type.getArgumentTypes("(I)Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;");
        java.lang.String str95 = org.mockito.asm.Type.getMethodDescriptor(type87, typeArray94);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str42, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "V" + "'", str76, "V");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)J" + "'", str81, "(VVI)J");
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str85, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org.mockito.asm.tree.analysis.BasicValue" + "'", str89, "org.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.mockito.asm.tree.analysis.BasicValue" + "'", str90, "org.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 26 + "'", int92 == 26);
        org.junit.Assert.assertNotNull(typeArray94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str95, "(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
    }

    @Test
    public void test11667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11667");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter0.newValue(type46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("(I)V");
        int int50 = type49.getSize();
        int int51 = type49.getSize();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter0.newValue(type49);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter57 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.toString();
        int int63 = type61.getSort();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type61, type64, type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter57.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter57, value71);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass75 = type74.getClass();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        int int77 = type76.getSort();
        int int78 = type76.getSize();
        int int79 = type76.getDimensions();
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter57.newValue(type76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("LC;", (java.lang.Object) "Lorg/mockito/asm/tree/analysis/BasicValue;", value80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter0.copyOperation(abstractInsnNode53, value80);
        org.mockito.asm.Type type83 = null;
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type83);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode85 = null;
        org.mockito.asm.tree.analysis.Value value86 = null;
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.copyOperation(abstractInsnNode85, value86);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType("(VVI)Lg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter0.newValue(type89);
        org.mockito.asm.Type type91 = null;
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter0.newValue(type91);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VVI)J" + "'", str67, "(VVI)J");
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test11668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11668");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        int int51 = type49.getSort();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type49, type52, type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        int int56 = type47.getSize();
        int int58 = type47.getOpcode(159);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.Type[] typeArray62 = org.mockito.asm.Type.getArgumentTypes("(VVI)B");
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray62);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray62);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type47);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass69 = type66.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        int int72 = type70.getOpcode(0);
        java.lang.String str73 = type70.getInternalName();
        org.mockito.asm.Type type74 = type70.getElementType();
        int int75 = type70.getSize();
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.newValue(type70);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass78 = type77.getClass();
        java.lang.String str79 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass78);
        java.lang.String str80 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass78);
        java.lang.String str81 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass78);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        java.lang.String str83 = type82.getClassName();
        java.lang.String str84 = type82.toString();
        int int85 = type82.getDimensions();
        int int86 = type82.getSize();
        int int87 = type82.getSize();
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.newValue(type82);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode89 = null;
        java.util.List list90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = basicInterpreter0.naryOperation(abstractInsnNode89, list90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(VVI)J" + "'", str55, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 160 + "'", int58 == 160);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;" + "'", str63, "(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VVI)J" + "'", str64, "(VVI)J");
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "org/mockito/asm/Type" + "'", str73, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str79, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str80, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org/mockito/asm/Type" + "'", str81, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.mockito.asm.Type" + "'", str83, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str84, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(value88);
    }

    @Test
    public void test11669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11669");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass31 = type30.getClass();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        int int33 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type32);
        java.lang.Throwable throwable37 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable37);
        java.lang.Throwable[] throwableArray39 = analyzerException38.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException38.addSuppressed((java.lang.Throwable) analyzerException42);
        java.lang.Throwable throwable46 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException47);
        analyzerException42.addSuppressed((java.lang.Throwable) analyzerException48);
        java.lang.Class<?> wildcardClass50 = analyzerException42.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        int int53 = type52.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = type56.getSort();
        boolean boolean60 = type56.equals((java.lang.Object) (-1.0d));
        int int61 = type56.getSort();
        java.lang.String str62 = type56.getClassName();
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter0.newValue(type56);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getObjectType("(I)LLorg/mockito/asm/tree/analysis/AnalyzerException;;");
        org.mockito.asm.Type type66 = type65.getElementType();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter0.newValue(type65);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value69 = basicInterpreter0.newOperation(abstractInsnNode68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str51, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 7 + "'", int61 == 7);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "long" + "'", str62, "long");
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
    }

    @Test
    public void test11670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11670");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean3 = type1.equals((java.lang.Object) 180);
        java.lang.String str4 = type1.toString();
        int int5 = type1.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str38 = type37.toString();
        int int39 = type37.getSort();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type37, type40, type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter33.newValue(type35);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter6.merge(value31, value44);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter6.copyOperation(abstractInsnNode46, value65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type1, value68);
        java.lang.Class<?> wildcardClass70 = value68.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass70);
        java.lang.String str73 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass70);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "C" + "'", str4, "C");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "V" + "'", str38, "V");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VVI)J" + "'", str43, "(VVI)J");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str71, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str73, "Lorg/mockito/asm/tree/analysis/BasicValue;");
    }

    @Test
    public void test11671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11671");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        int int4 = type2.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str9 = type8.toString();
        int int10 = type8.getSort();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type8, type11, type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = type16.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str23 = type22.toString();
        int int24 = type22.getSort();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type22, type25, type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray27);
        boolean boolean30 = type6.equals((java.lang.Object) typeArray27);
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray27);
        int int33 = type2.getOpcode(127);
        org.mockito.asm.tree.analysis.Value value34 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Object) int33, value34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        analyzerException38.addSuppressed((java.lang.Throwable) analyzerException40);
        java.lang.Throwable throwable44 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        java.lang.Throwable throwable51 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException52);
        analyzerException48.addSuppressed((java.lang.Throwable) analyzerException52);
        analyzerException46.addSuppressed((java.lang.Throwable) analyzerException52);
        analyzerException40.addSuppressed((java.lang.Throwable) analyzerException46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)V", (java.lang.Throwable) analyzerException46);
        java.lang.Throwable[] throwableArray58 = analyzerException46.getSuppressed();
        java.lang.Throwable[] throwableArray59 = analyzerException46.getSuppressed();
        analyzerException35.addSuppressed((java.lang.Throwable) analyzerException46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J");
        java.lang.Throwable throwable66 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException67);
        analyzerException63.addSuppressed((java.lang.Throwable) analyzerException67);
        java.lang.Throwable[] throwableArray70 = analyzerException67.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        analyzerException72.addSuppressed((java.lang.Throwable) analyzerException74);
        java.lang.Throwable throwable78 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        java.lang.Throwable throwable85 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException86);
        analyzerException82.addSuppressed((java.lang.Throwable) analyzerException86);
        analyzerException80.addSuppressed((java.lang.Throwable) analyzerException86);
        analyzerException74.addSuppressed((java.lang.Throwable) analyzerException80);
        analyzerException67.addSuppressed((java.lang.Throwable) analyzerException74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException67);
        analyzerException46.addSuppressed((java.lang.Throwable) analyzerException67);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(VVI)J" + "'", str14, "(VVI)J");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7 + "'", int18 == 7);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "V" + "'", str23, "V");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VVI)J" + "'", str28, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(VVI)J" + "'", str29, "(VVI)J");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(VVI)J" + "'", str31, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 128 + "'", int33 == 128);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test11672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11672");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        int int51 = type49.getSort();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type49, type52, type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        int int56 = type47.getSize();
        int int58 = type47.getOpcode(159);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.Type[] typeArray62 = org.mockito.asm.Type.getArgumentTypes("(VVI)B");
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray62);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray62);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type47);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode66 = null;
        org.mockito.asm.tree.analysis.Value value67 = null;
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter0.copyOperation(abstractInsnNode66, value67);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getObjectType("VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter0.newValue(type70);
        int int73 = type70.getOpcode(51);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(VVI)J" + "'", str55, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 160 + "'", int58 == 160);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;" + "'", str63, "(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VVI)J" + "'", str64, "(VVI)J");
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 55 + "'", int73 == 55);
    }

    @Test
    public void test11673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11673");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter3.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter3.ternaryOperation(abstractInsnNode6, value19, value32, value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter44.ternaryOperation(abstractInsnNode45, value50, value56, value62);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value32, value42, value62);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass69 = type66.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        java.lang.String str71 = type70.toString();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter1.newValue(type70);
        int int73 = type70.getSize();
        java.lang.String str74 = type70.getDescriptor();
        org.mockito.asm.Type type75 = type70.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str78 = type77.toString();
        int int79 = type77.getSort();
        java.lang.String str80 = type77.getDescriptor();
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean84 = type82.equals((java.lang.Object) 180);
        java.lang.String str85 = type82.toString();
        java.lang.String str86 = type82.getDescriptor();
        int int87 = type82.getSort();
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier76.newValue(type82);
        int int89 = value88.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) type75, value88);
        org.mockito.asm.Type type91 = type75.getElementType();
        java.lang.Class<?> wildcardClass92 = type91.getClass();
        java.lang.String str93 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass92);
        org.mockito.asm.Type type94 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass92);
        java.lang.String str95 = type94.toString();
        java.lang.Class<?> wildcardClass96 = type94.getClass();
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str71, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str74, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "V" + "'", str78, "V");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "V" + "'", str80, "V");
        org.junit.Assert.assertNull(value81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org/mockito/asm/Type" + "'", str93, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str95, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test11674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11674");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type4, type7, type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type2);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter12 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode13 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value30);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter12.ternaryOperation(abstractInsnNode13, value18, value24, value30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value37);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter39 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.toString();
        int int45 = type43.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type43, type46, type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter39.newValue(type41);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter12.merge(value37, value50);
        java.lang.Class<?> wildcardClass52 = value50.getClass();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = null;
        boolean boolean55 = type53.equals(obj54);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int58 = type57.getDimensions();
        org.mockito.asm.Type[] typeArray60 = org.mockito.asm.Type.getArgumentTypes("(JDCJCI)LC;");
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter0.newValue(type53);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newOperation(abstractInsnNode64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(VVI)J" + "'", str10, "(VVI)J");
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNull(value32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VVI)J" + "'", str49, "(VVI)J");
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(JDCJCI)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str61, "(JDCJCI)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(JDCJCI)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str62, "(JDCJCI)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(value63);
    }

    @Test
    public void test11675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11675");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter8.ternaryOperation(abstractInsnNode9, value14, value20, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str40 = type39.toString();
        int int41 = type39.getSort();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type39, type42, type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter35.newValue(type37);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter8.merge(value33, value46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean50 = type48.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass51 = type48.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter8.newValue(type52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        java.lang.String str58 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass56);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass56);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        java.lang.String str63 = type62.getInternalName();
        org.mockito.asm.Type type64 = type62.getElementType();
        int int65 = type62.getSort();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray69);
        java.lang.Class<?> wildcardClass71 = type66.getClass();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass71);
        org.mockito.asm.Type type73 = type72.getElementType();
        java.lang.String str74 = type73.getInternalName();
        org.mockito.asm.Type type75 = type73.getElementType();
        boolean boolean76 = type62.equals((java.lang.Object) type75);
        org.mockito.asm.Type type77 = type75.getElementType();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter0.newValue(type77);
        org.mockito.asm.Type type79 = null;
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter0.newValue(type79);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VVI)J" + "'", str45, "(VVI)J");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str58, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/Type" + "'", str59, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/Type" + "'", str61, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org/mockito/asm/Type" + "'", str63, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(I)V" + "'", str70, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "g/mockito/asm/Type" + "'", str74, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value80);
    }

    @Test
    public void test11676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11676");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter23 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value41);
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter23.ternaryOperation(abstractInsnNode24, value29, value35, value41);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter44.ternaryOperation(abstractInsnNode45, value50, value56, value62);
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier22.merge(value29, value64);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter1.merge(value65, value68);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter70 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str75 = type74.toString();
        int int76 = type74.getSort();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type74, type77, type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter70.newValue(type72);
        int int82 = value81.getSize();
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier0.merge(value65, value81);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str85 = type84.toString();
        int int86 = type84.getSort();
        java.lang.String str87 = type84.getClassName();
        int int88 = type84.getSort();
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier0.newValue(type84);
        java.lang.String str90 = type84.toString();
        java.lang.Class<?> wildcardClass91 = type84.getClass();
        java.lang.String str92 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass91);
        java.lang.String str93 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass91);
        java.lang.String str94 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass91);
        java.lang.String str95 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass91);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VVI)J" + "'", str80, "(VVI)J");
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "V" + "'", str85, "V");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "void" + "'", str87, "void");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNull(value89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "V" + "'", str90, "V");
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org/mockito/asm/Type" + "'", str92, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str93, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org/mockito/asm/Type" + "'", str94, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "org/mockito/asm/Type" + "'", str95, "org/mockito/asm/Type");
    }

    @Test
    public void test11677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11677");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass67 = type66.getClass();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter0.newValue(type68);
        int int70 = type68.getSort();
        org.mockito.asm.Type type71 = type68.getElementType();
        java.lang.String str72 = type68.getInternalName();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org/mockito/asm/Type" + "'", str72, "org/mockito/asm/Type");
    }

    @Test
    public void test11678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11678");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("(I)Lchar;");
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter0.newValue(type29);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode31 = null;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type35 = type34.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int40 = type38.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier36.newValue(type38);
        int int42 = value41.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Object) type34, value41);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter0.copyOperation(abstractInsnNode31, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = type46.getSort();
        int int49 = type46.getSize();
        java.lang.String str50 = type46.getClassName();
        int int51 = type46.getSize();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter0.newValue(type46);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 87 + "'", int40 == 87);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 7 + "'", int48 == 7);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "long" + "'", str50, "long");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertNotNull(value52);
    }

    @Test
    public void test11679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11679");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.Value value4 = basicInterpreter2.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter2.ternaryOperation(abstractInsnNode5, value18, value31, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value41);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter43.ternaryOperation(abstractInsnNode44, value49, value55, value61);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value31, value41, value61);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.INT_TYPE;
        int int66 = type65.getSort();
        java.lang.String str67 = type65.getDescriptor();
        int int69 = type65.getOpcode(7);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type65);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value72 = basicInterpreter0.newOperation(abstractInsnNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNull(value63);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "I" + "'", str67, "I");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 7 + "'", int69 == 7);
        org.junit.Assert.assertNotNull(value70);
    }

    @Test
    public void test11680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11680");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type32, type35, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter28.newValue(type30);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.merge(value26, value39);
        java.lang.Class<?> wildcardClass41 = value39.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.Object obj43 = null;
        boolean boolean44 = type42.equals(obj43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray48);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray48);
        org.mockito.asm.Type type51 = type42.getElementType();
        java.lang.String str52 = type51.getInternalName();
        java.lang.String str53 = type51.getInternalName();
        java.lang.String str54 = type51.getInternalName();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter56 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str61 = type60.toString();
        int int62 = type60.getSort();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type60, type63, type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter56.newValue(type58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        int int71 = value70.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter56, value70);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass74 = type73.getClass();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        int int76 = type75.getSort();
        int int77 = type75.getSize();
        int int78 = type75.getDimensions();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter56.newValue(type75);
        int int80 = value79.getSize();
        int int81 = value79.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.Type;", (java.lang.Object) str54, value79);
        int int83 = value79.getSize();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)J" + "'", str38, "(VVI)J");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(I)V" + "'", str49, "(I)V");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str50, "(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "g/mockito/asm/tree/analysis/BasicValue" + "'", str52, "g/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "g/mockito/asm/tree/analysis/BasicValue" + "'", str53, "g/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "g/mockito/asm/tree/analysis/BasicValue" + "'", str54, "g/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "V" + "'", str61, "V");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(VVI)J" + "'", str66, "(VVI)J");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test11681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11681");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type32, type35, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter28.newValue(type30);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.merge(value26, value39);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.merge(value26, value43);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter46 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value64);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter46.ternaryOperation(abstractInsnNode47, value52, value58, value64);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter67 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.toString();
        int int73 = type71.getSort();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type71, type74, type75 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter67.newValue(type69);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.merge(value58, value78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean83 = type81.equals((java.lang.Object) 88);
        int int84 = type81.getSize();
        java.lang.String str85 = type81.getDescriptor();
        java.lang.String str86 = type81.toString();
        java.lang.String str87 = type81.getDescriptor();
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.newValue(type81);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.INT_TYPE;
        int int90 = type89.getSort();
        java.lang.String str91 = type89.getDescriptor();
        int int92 = type89.getSort();
        int int94 = type89.getOpcode(7);
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter0.newValue(type89);
        org.mockito.asm.Type type97 = org.mockito.asm.Type.getType("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V;");
        org.mockito.asm.tree.analysis.Value value98 = basicInterpreter0.newValue(type97);
        int int99 = type97.getSize();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)J" + "'", str38, "(VVI)J");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNull(value66);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(VVI)J" + "'", str77, "(VVI)J");
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L(I)V;" + "'", str85, "L(I)V;");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "L(I)V;" + "'", str86, "L(I)V;");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L(I)V;" + "'", str87, "L(I)V;");
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 5 + "'", int90 == 5);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "I" + "'", str91, "I");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 5 + "'", int92 == 5);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 7 + "'", int94 == 7);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertNotNull(value98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test11682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11682");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode4 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter3.ternaryOperation(abstractInsnNode4, value9, value15, value21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter3.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter3.copyOperation(abstractInsnNode28, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter34.ternaryOperation(abstractInsnNode35, value40, value46, value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter61 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str66 = type65.toString();
        int int67 = type65.getSort();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type65, type68, type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter61.newValue(type63);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter34.merge(value59, value72);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter74 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type75 = null;
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter33.merge(value59, value76);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.merge(value31, value59);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getObjectType("L(I)V;");
        org.mockito.asm.Type type82 = type81.getElementType();
        int int83 = type81.getDimensions();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type81);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.newValue(type86);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value89 = basicInterpreter0.newOperation(abstractInsnNode88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNull(value54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)J" + "'", str71, "(VVI)J");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test11683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11683");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type5 = null;
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter4.newValue(type5);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter8.ternaryOperation(abstractInsnNode9, value14, value20, value26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type32 = null;
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter4.ternaryOperation(abstractInsnNode7, value20, value33, value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value43);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter45 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value63);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter45.ternaryOperation(abstractInsnNode46, value51, value57, value63);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter2.ternaryOperation(abstractInsnNode3, value33, value43, value63);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean69 = type67.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass70 = type67.getClass();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass70);
        java.lang.String str72 = type71.toString();
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter2.newValue(type71);
        int int74 = type71.getSize();
        java.lang.String str75 = type71.getDescriptor();
        org.mockito.asm.Type type76 = type71.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str79 = type78.toString();
        int int80 = type78.getSort();
        java.lang.String str81 = type78.getDescriptor();
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier77.newValue(type78);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean85 = type83.equals((java.lang.Object) 180);
        java.lang.String str86 = type83.toString();
        java.lang.String str87 = type83.getDescriptor();
        int int88 = type83.getSort();
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier77.newValue(type83);
        int int90 = value89.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) type76, value89);
        java.lang.Throwable[] throwableArray92 = analyzerException91.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException93 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)C", (java.lang.Throwable) analyzerException91);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.BasicValue;");
        java.lang.Throwable[] throwableArray96 = analyzerException95.getSuppressed();
        analyzerException91.addSuppressed((java.lang.Throwable) analyzerException95);
        java.lang.String str98 = analyzerException91.toString();
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNull(value38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str72, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str75, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "V" + "'", str79, "V");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "V" + "'", str81, "V");
        org.junit.Assert.assertNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "C" + "'", str87, "C");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(throwableArray96);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: V: expected Lg/mockito/asm/Type;, but found I" + "'", str98, "org.mockito.asm.tree.analysis.AnalyzerException: V: expected Lg/mockito/asm/Type;, but found I");
    }

    @Test
    public void test11684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11684");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str3 = type2.toString();
        int int4 = type2.getSort();
        java.lang.String str5 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier1.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int14 = type12.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier10.newValue(type12);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter17.ternaryOperation(abstractInsnNode18, value23, value29, value35);
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier1.merge(value15, value35);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass40 = type39.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        int int42 = type41.getSort();
        java.lang.String str43 = type41.toString();
        java.lang.String str44 = type41.toString();
        java.lang.String str45 = type41.getClassName();
        java.lang.String str46 = type41.toString();
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier1.newValue(type41);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier1.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        java.lang.String str55 = type52.getDescriptor();
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier51.newValue(type58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int64 = type62.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier60.newValue(type62);
        int int66 = value65.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter67 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode68 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier83 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier83.newValue(type84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value85);
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter67.ternaryOperation(abstractInsnNode68, value73, value79, value85);
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier51.merge(value65, value85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: I)Lorg.mockito.asm.tree.analysis.BasicInterpreter", (java.lang.Object) type49, value85);
        int int90 = value85.getSize();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 87 + "'", int14 == 87);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str44, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.mockito.asm.Type" + "'", str45, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertNull(value56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 87 + "'", int64 == 87);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNull(value87);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2 + "'", int90 == 2);
    }

    @Test
    public void test11685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11685");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter0.newValue(type46);
        java.lang.Class<?> wildcardClass48 = type46.getClass();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        java.lang.String str50 = type49.getClassName();
        int int51 = type49.getDimensions();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter52 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str54 = type53.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str59 = type58.toString();
        int int60 = type58.getSort();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type58, type61, type62 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.toString();
        int int70 = type68.getSort();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type68, type71, type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray73);
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray73);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray73);
        int int77 = type53.getSize();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str83 = type82.toString();
        int int84 = type82.getSort();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type86 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray87 = new org.mockito.asm.Type[] { type82, type85, type86 };
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type80, typeArray87);
        java.lang.Class<?> wildcardClass89 = typeArray87.getClass();
        java.lang.String str90 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass89);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter52.newValue(type91);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode93 = null;
        org.mockito.asm.tree.analysis.Value value94 = null;
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter52.copyOperation(abstractInsnNode93, value94);
        org.mockito.asm.Type type96 = null;
        org.mockito.asm.tree.analysis.Value value97 = basicInterpreter52.newValue(type96);
        boolean boolean98 = type49.equals((java.lang.Object) value97);
        java.lang.String str99 = type49.getInternalName();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.mockito.asm.Type" + "'", str50, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "char" + "'", str54, "char");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "V" + "'", str59, "V");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VVI)J" + "'", str64, "(VVI)J");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)J" + "'", str74, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(VVI)J" + "'", str75, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(VVI)C" + "'", str76, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "V" + "'", str83, "V");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(VVI)J" + "'", str88, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str90, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNull(value95);
        org.junit.Assert.assertNotNull(value97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "org/mockito/asm/Type" + "'", str99, "org/mockito/asm/Type");
    }

    @Test
    public void test11686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11686");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter23 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type24 = null;
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter23.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter27.ternaryOperation(abstractInsnNode28, value33, value39, value45);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type51 = null;
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter23.ternaryOperation(abstractInsnNode26, value39, value52, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter23.newValue(type59);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter62 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type63 = null;
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter62.newValue(type63);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode65 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter66 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode67 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value84);
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter66.ternaryOperation(abstractInsnNode67, value72, value78, value84);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter89 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type90 = null;
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter89.newValue(type90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value91);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier93 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type94 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value95 = basicVerifier93.newValue(type94);
        org.mockito.asm.tree.analysis.Value value96 = basicInterpreter62.ternaryOperation(abstractInsnNode65, value78, value91, value95);
        org.mockito.asm.tree.analysis.Value value97 = basicInterpreter0.merge(value61, value78);
        int int98 = value61.getSize();
        int int99 = value61.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNull(value86);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertNull(value96);
        org.junit.Assert.assertNotNull(value97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 2 + "'", int98 == 2);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 2 + "'", int99 == 2);
    }

    @Test
    public void test11687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11687");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value23);
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter5.ternaryOperation(abstractInsnNode6, value11, value17, value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter27.ternaryOperation(abstractInsnNode28, value33, value39, value45);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter48.ternaryOperation(abstractInsnNode49, value54, value60, value66);
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier26.merge(value33, value68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter5.merge(value69, value72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("I", (java.lang.Object) 9, value69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("int", (java.lang.Throwable) analyzerException78);
        analyzerException75.addSuppressed((java.lang.Throwable) analyzerException79);
        org.mockito.asm.tree.analysis.Value value81 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) analyzerException79, value81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type[]: expected 147, but found I", (java.lang.Throwable) analyzerException82);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNull(value25);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(value73);
    }

    @Test
    public void test11688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11688");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        int int43 = type41.getOpcode(0);
        int int44 = type41.getSize();
        java.lang.String str45 = type41.toString();
        java.lang.Class<?> wildcardClass46 = type41.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str45, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/Type" + "'", str47, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str50, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11689");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str3 = type2.toString();
        int int4 = type2.getSort();
        java.lang.String str5 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean9 = type7.equals((java.lang.Object) 180);
        java.lang.String str10 = type7.toString();
        java.lang.String str11 = type7.getDescriptor();
        int int12 = type7.getSort();
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier1.newValue(type7);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int15 = type14.getSort();
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier1.newValue(type14);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray20);
        java.lang.Class<?> wildcardClass22 = type17.getClass();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass22);
        org.mockito.asm.Type type24 = type23.getElementType();
        java.lang.String str25 = type24.getInternalName();
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier1.newValue(type24);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type29 = null;
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter28.newValue(type29);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode31 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter32.ternaryOperation(abstractInsnNode33, value38, value44, value50);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter55 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type56 = null;
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter28.ternaryOperation(abstractInsnNode31, value44, value57, value61);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter28.newValue(type64);
        java.lang.Class<?> wildcardClass66 = type64.getClass();
        java.lang.String str67 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str70 = type69.toString();
        int int71 = type69.getSort();
        java.lang.String str72 = type69.getDescriptor();
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean76 = type74.equals((java.lang.Object) 180);
        java.lang.String str77 = type74.toString();
        java.lang.String str78 = type74.getDescriptor();
        int int79 = type74.getSort();
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier68.newValue(type74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;: expected J, but found null", (java.lang.Object) str67, value80);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)D", (java.lang.Object) basicVerifier1, value80);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V: expected  , but found J: expected V, but found null");
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier1.newValue(type84);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value87 = basicVerifier1.newOperation(abstractInsnNode86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(I)V" + "'", str21, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "g/mockito/asm/Type" + "'", str25, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org/mockito/asm/Type" + "'", str67, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "V" + "'", str70, "V");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "C" + "'", str78, "C");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
    }

    @Test
    public void test11690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11690");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter20 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter20.ternaryOperation(abstractInsnNode21, value26, value32, value38);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier19.merge(value26, value61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter1.copyOperation(abstractInsnNode18, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        int int67 = type65.getSort();
        java.lang.String str68 = type65.getDescriptor();
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter1.newValue(type65);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode70 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str73 = type72.toString();
        int int74 = type72.getSort();
        java.lang.String str75 = type72.getDescriptor();
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean79 = type77.equals((java.lang.Object) 180);
        java.lang.String str80 = type77.toString();
        java.lang.String str81 = type77.getDescriptor();
        int int82 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier71.newValue(type77);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int85 = type84.getSort();
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier71.newValue(type84);
        int int87 = value86.getSize();
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter1.copyOperation(abstractInsnNode70, value86);
        org.mockito.asm.Type type89 = null;
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter1.newValue(type89);
        java.lang.Class<?> wildcardClass91 = value90.getClass();
        java.lang.String str92 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass91);
        java.lang.String str93 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass91);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 7 + "'", int67 == 7);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "J" + "'", str68, "J");
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "V" + "'", str73, "V");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "C" + "'", str80, "C");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str92, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str93, "Lorg/mockito/asm/tree/analysis/BasicValue;");
    }

    @Test
    public void test11691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11691");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray3 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str4 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray3);
        java.lang.Class<?> wildcardClass5 = type0.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = type6.getElementType();
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter12 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type13 = null;
        org.mockito.asm.tree.analysis.Value value14 = basicInterpreter12.newValue(type13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter16.ternaryOperation(abstractInsnNode17, value22, value28, value34);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter39 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type40 = null;
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter12.ternaryOperation(abstractInsnNode15, value28, value41, value45);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter12.newValue(type48);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter51 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode52 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value69);
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter51.ternaryOperation(abstractInsnNode52, value57, value63, value69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value76);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter78 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str83 = type82.toString();
        int int84 = type82.getSort();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type86 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray87 = new org.mockito.asm.Type[] { type82, type85, type86 };
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type80, typeArray87);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter78.newValue(type80);
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter51.merge(value76, value89);
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter12.copyOperation(abstractInsnNode50, value89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Object) "L(I)V;", value91);
        boolean boolean93 = type7.equals((java.lang.Object) "L(I)V;");
        int int94 = type7.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(I)V" + "'", str4, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lg/mockito/asm/Type;" + "'", str8, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNull(value71);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "V" + "'", str83, "V");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(VVI)J" + "'", str88, "(VVI)J");
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 10 + "'", int94 == 10);
    }

    @Test
    public void test11692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11692");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter0.newValue(type36);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode39 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter40 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type44, type47, type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter40.newValue(type42);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        java.lang.String str55 = type52.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter56 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str61 = type60.toString();
        int int62 = type60.getSort();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type60, type63, type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter56.newValue(type58);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean71 = type69.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean77 = type75.equals((java.lang.Object) 180);
        java.lang.String str78 = type75.toString();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type58, type68, type69, type73, type75, type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray80);
        int int82 = type52.getSort();
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter40.newValue(type52);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray87 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type85, typeArray87);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter40.newValue(type85);
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter0.copyOperation(abstractInsnNode39, value89);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str93 = type92.getClassName();
        org.mockito.asm.tree.analysis.Value value94 = basicInterpreter0.newValue(type92);
        org.mockito.asm.Type[] typeArray96 = org.mockito.asm.Type.getArgumentTypes("(JDCJCI)LC;");
        java.lang.String str97 = org.mockito.asm.Type.getMethodDescriptor(type92, typeArray96);
        java.lang.String str98 = type92.getDescriptor();
        java.lang.String str99 = type92.getClassName();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "V" + "'", str61, "V");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(VVI)J" + "'", str66, "(VVI)J");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "C" + "'", str78, "C");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(JDCJCI)V" + "'", str81, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(value83);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(I)Lchar;" + "'", str88, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "void" + "'", str93, "void");
        org.junit.Assert.assertNull(value94);
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "(JDCJCI)V" + "'", str97, "(JDCJCI)V");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "V" + "'", str98, "V");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "void" + "'", str99, "void");
    }

    @Test
    public void test11693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11693");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        int int43 = type41.getOpcode(0);
        int int44 = type41.getSize();
        int int45 = type41.getDimensions();
        org.mockito.asm.Type[] typeArray47 = org.mockito.asm.Type.getArgumentTypes("(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray47);
        java.lang.String str49 = type41.getDescriptor();
        java.lang.String str50 = type41.getClassName();
        org.mockito.asm.Type type51 = type41.getElementType();
        int int52 = type51.getDimensions();
        org.mockito.asm.Type type53 = type51.getElementType();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str48, "(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str49, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.mockito.asm.tree.analysis.BasicValue" + "'", str50, "org.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(type53);
    }

    @Test
    public void test11694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11694");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.newValue(type36);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str40 = type39.getClassName();
        boolean boolean41 = type36.equals((java.lang.Object) str40);
        org.mockito.asm.Type type42 = type36.getElementType();
        int int43 = type42.getSort();
        int int45 = type42.getOpcode(25);
        java.lang.String str46 = type42.getInternalName();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "void" + "'", str40, "void");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 29 + "'", int45 == 29);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "rg/mockito/asm/Type" + "'", str46, "rg/mockito/asm/Type");
    }

    @Test
    public void test11695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11695");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.BasicValue;");
        java.lang.Throwable[] throwableArray2 = analyzerException1.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lmockito/asm/Type;");
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass7 = type6.getClass();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int9 = type8.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str14 = type13.toString();
        int int15 = type13.getSort();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type13, type16, type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.toString();
        int int25 = type23.getSort();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type23, type26, type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray28);
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray28);
        org.mockito.asm.Type type32 = type8.getElementType();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter33.newValue(type34);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode36 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter37.ternaryOperation(abstractInsnNode38, value43, value49, value55);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter60 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type61 = null;
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter33.ternaryOperation(abstractInsnNode36, value49, value62, value66);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode68 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter33.copyOperation(abstractInsnNode68, value73);
        boolean boolean76 = type32.equals((java.lang.Object) basicInterpreter33);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode77 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter78 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type79 = null;
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter78.newValue(type79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str83 = type82.getDescriptor();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter78.newValue(type82);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        int int88 = type86.getOpcode(116);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter78.newValue(type86);
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter33.copyOperation(abstractInsnNode77, value89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)LL(I)V;;", (java.lang.Object) analyzerException5, value89);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException5);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(VVI)J" + "'", str19, "(VVI)J");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(VVI)J" + "'", str29, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VVI)J" + "'", str30, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str31, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNull(value57);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "B" + "'", str83, "B");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 120 + "'", int88 == 120);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
    }

    @Test
    public void test11696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11696");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter0.newValue(type36);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode39 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter40 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type44, type47, type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter40.newValue(type42);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        java.lang.String str55 = type52.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter56 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str61 = type60.toString();
        int int62 = type60.getSort();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type60, type63, type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter56.newValue(type58);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean71 = type69.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean77 = type75.equals((java.lang.Object) 180);
        java.lang.String str78 = type75.toString();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type58, type68, type69, type73, type75, type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray80);
        int int82 = type52.getSort();
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter40.newValue(type52);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray87 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type85, typeArray87);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter40.newValue(type85);
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter0.copyOperation(abstractInsnNode39, value89);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str93 = type92.getClassName();
        org.mockito.asm.tree.analysis.Value value94 = basicInterpreter0.newValue(type92);
        org.mockito.asm.Type[] typeArray96 = org.mockito.asm.Type.getArgumentTypes("(JDCJCI)LC;");
        java.lang.String str97 = org.mockito.asm.Type.getMethodDescriptor(type92, typeArray96);
        java.lang.Class<?> wildcardClass98 = type92.getClass();
        org.mockito.asm.Type type99 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass98);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "V" + "'", str61, "V");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(VVI)J" + "'", str66, "(VVI)J");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "C" + "'", str78, "C");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(JDCJCI)V" + "'", str81, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(value83);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(I)Lchar;" + "'", str88, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "void" + "'", str93, "void");
        org.junit.Assert.assertNull(value94);
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "(JDCJCI)V" + "'", str97, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(type99);
    }

    @Test
    public void test11697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11697");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(VVI)L(I)V;");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.ternaryOperation(abstractInsnNode3, value8, value14, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value27);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type33, type36, type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter29.newValue(type31);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter2.merge(value27, value40);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter43.ternaryOperation(abstractInsnNode44, value49, value55, value61);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter2.copyOperation(abstractInsnNode42, value61);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BYTE_TYPE;
        int int66 = type65.getSize();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter2.newValue(type65);
        java.lang.Class<?> wildcardClass68 = basicInterpreter2.getClass();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        int int71 = type69.getOpcode(512);
        java.lang.String str72 = type69.toString();
        boolean boolean73 = type1.equals((java.lang.Object) str72);
        java.lang.String str74 = type1.toString();
        int int75 = type1.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNull(value22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)J" + "'", str39, "(VVI)J");
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNull(value63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 516 + "'", int71 == 516);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str72, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "LVVI)L(I)V;" + "'", str74, "LVVI)L(I)V;");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
    }

    @Test
    public void test11698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11698");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        java.lang.Class<?> wildcardClass10 = typeArray8.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        int int14 = type13.getSize();
        int int16 = type13.getOpcode(115);
        int int17 = type13.getDimensions();
        java.lang.Class<?> wildcardClass18 = type13.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str11, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 119 + "'", int16 == 119);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test11699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11699");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type2 = null;
        org.mockito.asm.tree.analysis.Value value3 = basicInterpreter1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean6 = type4.equals((java.lang.Object) 180);
        java.lang.String str7 = type4.toString();
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter1.newValue(type4);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter9.ternaryOperation(abstractInsnNode10, value15, value21, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter9.merge(value34, value47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean51 = type49.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass52 = type49.getClass();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter9.newValue(type53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter1.newValue(type53);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str58 = type57.getDescriptor();
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter1.newValue(type57);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str61 = type60.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str66 = type65.toString();
        int int67 = type65.getSort();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type65, type68, type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str76 = type75.toString();
        int int77 = type75.getSort();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type75, type78, type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray80);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray80);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "B" + "'", str58, "B");
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "char" + "'", str61, "char");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)J" + "'", str71, "(VVI)J");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "V" + "'", str76, "V");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)J" + "'", str81, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)C" + "'", str83, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(VVI)B" + "'", str84, "(VVI)B");
    }

    @Test
    public void test11700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11700");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str31 = type30.toString();
        int int32 = type30.getSort();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type30, type33, type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        java.lang.Class<?> wildcardClass37 = typeArray35.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter0.newValue(type39);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.Value value42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.copyOperation(abstractInsnNode41, value42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType("(VVI)Lorg/mockito/asm/Type;");
        java.lang.String str46 = type45.getInternalName();
        int int48 = type45.getOpcode(8);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter0.newValue(type45);
        int int50 = value49.getSize();
        int int51 = value49.getSize();
        int int52 = value49.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "V" + "'", str31, "V");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VVI)J" + "'", str36, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str38, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "VVI)Lorg/mockito/asm/Type" + "'", str46, "VVI)Lorg/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 12 + "'", int48 == 12);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test11701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11701");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("(JDCJCI)LC;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: F", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray7 = analyzerException6.getSuppressed();
        java.lang.Throwable[] throwableArray8 = analyzerException6.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str12 = type11.toString();
        int int13 = type11.getSort();
        java.lang.String str14 = type11.getDescriptor();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean18 = type16.equals((java.lang.Object) 180);
        java.lang.String str19 = type16.toString();
        java.lang.String str20 = type16.getDescriptor();
        int int21 = type16.getSort();
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier10.newValue(type16);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int24 = type23.getSort();
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier10.newValue(type23);
        java.lang.String str26 = type23.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode32 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter31.ternaryOperation(abstractInsnNode32, value37, value43, value49);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter54 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type55 = null;
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter27.ternaryOperation(abstractInsnNode30, value43, value56, value60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter27.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue", (java.lang.Object) type23, value64);
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException65);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("LC;", (java.lang.Throwable) analyzerException65);
        java.lang.Throwable[] throwableArray69 = analyzerException65.getSuppressed();
        java.lang.Throwable[] throwableArray70 = analyzerException65.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Z" + "'", str26, "Z");
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test11702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11702");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type45 = null;
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter44.newValue(type45);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter48.ternaryOperation(abstractInsnNode49, value54, value60, value66);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter44.ternaryOperation(abstractInsnNode47, value60, value73, value77);
        org.mockito.asm.tree.analysis.Value value79 = null;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier0.merge(value60, value79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean83 = type81.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier0.newValue(type81);
        int int86 = type81.getOpcode(199);
        int int87 = type81.getSize();
        // The following exception was thrown during execution in test generation
        try {
            int int88 = type81.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 199 + "'", int86 == 199);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test11703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11703");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass1 = basicInterpreter0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str2, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str4, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
    }

    @Test
    public void test11704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11704");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        boolean boolean7 = type1.equals((java.lang.Object) 101);
        int int9 = type1.getOpcode(16397);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 16402 + "'", int9 == 16402);
    }

    @Test
    public void test11705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11705");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        int int31 = type30.getSort();
        java.lang.String str32 = type30.getDescriptor();
        java.lang.String str33 = type30.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSort();
        boolean boolean40 = type36.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type45, type48, type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        int int57 = type55.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type55, type58, type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray60);
        int int64 = type43.getOpcode((int) 'a');
        java.lang.String str65 = type43.getClassName();
        int int66 = type43.getSort();
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier35.newValue(type43);
        int int69 = type43.getOpcode(195);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type43);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass72 = type71.getClass();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass72);
        java.lang.String str74 = type73.getClassName();
        java.lang.String str75 = type73.getDescriptor();
        int int77 = type73.getOpcode(149);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter0.newValue(type73);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getReturnType("Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter0.newValue(type80);
        int int82 = type80.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)J" + "'", str61, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VVI)J" + "'", str62, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 98 + "'", int64 == 98);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "long" + "'", str65, "long");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 7 + "'", int66 == 7);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 196 + "'", int69 == 196);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.mockito.asm.Type" + "'", str74, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str75, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 153 + "'", int77 == 153);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
    }

    @Test
    public void test11706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11706");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        int int21 = type20.getSort();
        int int22 = type20.getSize();
        int int23 = type20.getDimensions();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter1.newValue(type20);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getObjectType("mockito.asm.Type");
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter1.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        java.lang.String str34 = type31.getDescriptor();
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier30.newValue(type31);
        java.lang.String str36 = type31.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter39 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type40 = null;
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type31, value41);
        java.lang.String str44 = type31.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter46 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str51 = type50.toString();
        int int52 = type50.getSort();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type50, type53, type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter46.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        int int61 = value60.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter46, value60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass64 = type63.getClass();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        int int66 = type65.getSort();
        int int67 = type65.getSize();
        int int68 = type65.getDimensions();
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter46.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) str44, value69);
        org.mockito.asm.tree.analysis.Value value71 = null;
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter1.merge(value69, value71);
        org.mockito.asm.Type type73 = null;
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter1.newValue(type73);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode75 = null;
        java.util.List list76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value77 = basicInterpreter1.naryOperation(abstractInsnNode75, list76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertNull(value35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "V" + "'", str51, "V");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VVI)J" + "'", str56, "(VVI)J");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(value74);
    }

    @Test
    public void test11707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11707");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean3 = type1.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass4 = type1.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        int int7 = type5.getOpcode(0);
        int int8 = type5.getSort();
        org.mockito.asm.Type type9 = type5.getElementType();
        org.mockito.asm.Type type10 = type9.getElementType();
        java.lang.String str11 = type10.getClassName();
        int int12 = type10.getSize();
        java.lang.String str13 = type10.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter15 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.toString();
        int int21 = type19.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type19, type22, type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter15.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        int int30 = value29.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter15, value29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass33 = type32.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        int int35 = type34.getSort();
        int int36 = type34.getSize();
        int int37 = type34.getDimensions();
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter15.newValue(type34);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) type10, value38);
        int int41 = value38.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "mockito.asm.Type" + "'", str11, "mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lmockito/asm/Type;" + "'", str13, "Lmockito/asm/Type;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VVI)J" + "'", str25, "(VVI)J");
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test11708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11708");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.toString();
        int int25 = type23.getSort();
        java.lang.String str26 = type23.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean42 = type40.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean48 = type46.equals((java.lang.Object) 180);
        java.lang.String str49 = type46.toString();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type29, type39, type40, type44, type46, type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str57 = type56.toString();
        int int58 = type56.getSort();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type56, type59, type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type66, type69, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray71);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray71);
        int int75 = type23.getSort();
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.newValue(type23);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode77 = null;
        org.mockito.asm.tree.analysis.Value value78 = null;
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.copyOperation(abstractInsnNode77, value78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType("(I)L(VVI)I;");
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter0.newValue(type81);
        int int83 = value82.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "V" + "'", str26, "V");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "C" + "'", str49, "C");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(JDCJCI)V" + "'", str52, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "V" + "'", str57, "V");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VVI)J" + "'", str62, "(VVI)J");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)J" + "'", str73, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)V" + "'", str74, "(VVI)V");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNull(value76);
        org.junit.Assert.assertNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test11709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11709");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int14 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.newValue(type13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray19);
        java.lang.Class<?> wildcardClass21 = type16.getClass();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type23 = type22.getElementType();
        java.lang.String str24 = type23.getInternalName();
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier0.newValue(type23);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S");
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier0.newValue(type27);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str31 = type30.getInternalName();
        java.lang.String str32 = type30.getInternalName();
        java.lang.String str33 = type30.getInternalName();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        int int35 = type34.getSort();
        java.lang.String str36 = type34.getClassName();
        int int38 = type34.getOpcode(96);
        boolean boolean39 = type30.equals((java.lang.Object) 96);
        org.mockito.asm.Type type40 = type30.getElementType();
        int int41 = type40.getDimensions();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter42 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value60);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter42.ternaryOperation(abstractInsnNode43, value48, value54, value60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter42.newValue(type63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        int int68 = type66.getSize();
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter42.newValue(type66);
        java.lang.Class<?> wildcardClass70 = type66.getClass();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass70);
        int int73 = type72.getDimensions();
        java.lang.String str74 = type72.getInternalName();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected Z, but found J");
        org.mockito.asm.Type[] typeArray79 = org.mockito.asm.Type.getArgumentTypes("I)Lchar");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter80 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type81 = null;
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter80.newValue(type81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass84 = type83.getClass();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass84);
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter80.newValue(type85);
        int int87 = value86.getSize();
        int int88 = value86.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("LI)V;", (java.lang.Object) typeArray79, value86);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray79);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray79);
        org.mockito.asm.tree.analysis.Value value93 = basicVerifier0.newValue(type40);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(I)V" + "'", str20, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "g/mockito/asm/Type" + "'", str24, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str31, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str32, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str33, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 7 + "'", int35 == 7);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "long" + "'", str36, "long");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 97 + "'", int38 == 97);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org/mockito/asm/Type" + "'", str74, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "()Lorg.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected Z, but found J;" + "'", str90, "()Lorg.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected Z, but found J;");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "()Lorg/mockito/asm/Type;" + "'", str91, "()Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "()Lg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str92, "()Lg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(value93);
    }

    @Test
    public void test11710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11710");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        int int2 = type0.getSort();
        java.lang.String str3 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str9 = type8.toString();
        int int10 = type8.getSort();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type8, type11, type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter4.newValue(type6);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean19 = type17.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.String str26 = type23.toString();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type6, type16, type17, type21, type23, type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type33, type36, type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.toString();
        int int45 = type43.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type43, type46, type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray48);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray48);
        java.lang.String str52 = type0.getClassName();
        int int54 = type0.getOpcode(1024);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        int int57 = type56.getSort();
        java.lang.String str58 = type56.getInternalName();
        java.lang.String str59 = type56.getInternalName();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str62 = type61.getInternalName();
        org.mockito.asm.Type type63 = type61.getElementType();
        boolean boolean64 = type56.equals((java.lang.Object) type61);
        org.mockito.asm.Type[] typeArray66 = org.mockito.asm.Type.getArgumentTypes("(VVI)Lorg.mockito.asm.Type;");
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray66);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray66);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(VVI)J" + "'", str14, "(VVI)J");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(JDCJCI)V" + "'", str29, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)J" + "'", str39, "(VVI)J");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VVI)J" + "'", str49, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)V" + "'", str51, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "void" + "'", str52, "void");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1029 + "'", int54 == 1029);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found ." + "'", str58, "org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found ." + "'", str59, "org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str62, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;" + "'", str67, "(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VVI)V" + "'", str68, "(VVI)V");
    }

    @Test
    public void test11711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11711");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int14 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.newValue(type13);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.BasicValue;");
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier0.newValue(type17);
        org.mockito.asm.Type type19 = null;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier0.newValue(type19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value22 = basicVerifier0.newOperation(abstractInsnNode21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value20);
    }

    @Test
    public void test11712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11712");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type32, type35, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter28.newValue(type30);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.merge(value26, value39);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.merge(value26, value43);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter46 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value64);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter46.ternaryOperation(abstractInsnNode47, value52, value58, value64);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter67 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.toString();
        int int73 = type71.getSort();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type71, type74, type75 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter67.newValue(type69);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.merge(value58, value78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean83 = type81.equals((java.lang.Object) 88);
        int int84 = type81.getSize();
        java.lang.String str85 = type81.getDescriptor();
        java.lang.String str86 = type81.toString();
        java.lang.String str87 = type81.getDescriptor();
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.newValue(type81);
        java.lang.String str89 = type81.getDescriptor();
        java.lang.Class<?> wildcardClass90 = type81.getClass();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass90);
        java.lang.String str92 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass90);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)J" + "'", str38, "(VVI)J");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNull(value66);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(VVI)J" + "'", str77, "(VVI)J");
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L(I)V;" + "'", str85, "L(I)V;");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "L(I)V;" + "'", str86, "L(I)V;");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L(I)V;" + "'", str87, "L(I)V;");
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L(I)V;" + "'", str89, "L(I)V;");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org/mockito/asm/Type" + "'", str92, "org/mockito/asm/Type");
    }

    @Test
    public void test11713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11713");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.Value value4 = basicInterpreter2.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter2.ternaryOperation(abstractInsnNode5, value18, value31, value35);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter39 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value57);
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter39.ternaryOperation(abstractInsnNode40, value45, value51, value57);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter60 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode61 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value78);
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter60.ternaryOperation(abstractInsnNode61, value66, value72, value78);
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier38.merge(value45, value80);
        int int82 = value81.getSize();
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter2.copyOperation(abstractInsnNode37, value81);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.copyOperation(abstractInsnNode1, value83);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType("(VVI)LLorg/mockito/asm/Type;;");
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.newValue(type86);
        org.mockito.asm.Type type88 = type86.getElementType();
        int int89 = type86.getSize();
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNull(value59);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNull(value80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
    }

    @Test
    public void test11714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11714");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter8.ternaryOperation(abstractInsnNode9, value14, value20, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str40 = type39.toString();
        int int41 = type39.getSort();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type39, type42, type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter35.newValue(type37);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter8.merge(value33, value46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean50 = type48.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass51 = type48.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter8.newValue(type52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str56 = type55.getClassName();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.newValue(type55);
        org.mockito.asm.Type type58 = null;
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter0.newValue(type58);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.BasicValue");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter63 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type64 = null;
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.String str69 = type66.toString();
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter63.newValue(type66);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value76);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter63.copyOperation(abstractInsnNode71, value76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) type62, value79);
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter0.newValue(type62);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 139, but found null");
        java.lang.String str84 = type83.getDescriptor();
        int int86 = type83.getOpcode((int) 'a');
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.newValue(type83);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VVI)J" + "'", str45, "(VVI)J");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "long" + "'", str56, "long");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 139, but found null;" + "'", str84, "Lorg.mockito.asm.tree.analysis.AnalyzerException: VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 139, but found null;");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 101 + "'", int86 == 101);
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test11715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11715");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (JDCJCI)LC;");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.ternaryOperation(abstractInsnNode3, value8, value14, value20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.toString();
        int int25 = type23.getSort();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter2.newValue(type23);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type29 = null;
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter28.newValue(type29);
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter2.copyOperation(abstractInsnNode27, value30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        int int33 = type32.getSort();
        java.lang.String str34 = type32.getDescriptor();
        java.lang.String str35 = type32.getDescriptor();
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter2.newValue(type32);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type38 = null;
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter37.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter64 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type65 = null;
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter37.ternaryOperation(abstractInsnNode40, value53, value66, value70);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter37.newValue(type73);
        java.lang.Class<?> wildcardClass75 = type73.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        java.lang.String str77 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter2.newValue(type78);
        int int80 = type78.getSize();
        org.mockito.asm.Type type81 = type78.getElementType();
        int int82 = type78.getSort();
        int int84 = type78.getOpcode(198);
        boolean boolean85 = type1.equals((java.lang.Object) int84);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass87 = type86.getClass();
        java.lang.String str88 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        java.lang.String str89 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        java.lang.String str90 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        java.lang.String str92 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        boolean boolean93 = type1.equals((java.lang.Object) wildcardClass87);
        java.lang.String str94 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type95 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        java.lang.String str96 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass87);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNull(value71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/Type" + "'", str76, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str77, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 202 + "'", int84 == 202);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str88, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str89, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str90, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str92, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str94, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org/mockito/asm/Type" + "'", str96, "org/mockito/asm/Type");
    }

    @Test
    public void test11716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11716");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.Type type6 = type4.getElementType();
        java.lang.String str7 = type4.getDescriptor();
        int int8 = type4.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type12 = null;
        org.mockito.asm.tree.analysis.Value value13 = basicInterpreter11.newValue(type12);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter15 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter15.ternaryOperation(abstractInsnNode16, value21, value27, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter38 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type39 = null;
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter11.ternaryOperation(abstractInsnNode14, value27, value40, value44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter11.newValue(type47);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode51 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value68);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter50.ternaryOperation(abstractInsnNode51, value56, value62, value68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value75);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter77 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str82 = type81.toString();
        int int83 = type81.getSort();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type85 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray86 = new org.mockito.asm.Type[] { type81, type84, type85 };
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type79, typeArray86);
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter77.newValue(type79);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter50.merge(value75, value88);
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter11.copyOperation(abstractInsnNode49, value88);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Object) "L(I)V;", value90);
        boolean boolean92 = type4.equals((java.lang.Object) "L(I)V;");
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/Type" + "'", str3, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value35);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "V" + "'", str82, "V");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(VVI)J" + "'", str87, "(VVI)J");
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test11717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11717");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type64);
        java.lang.String str66 = type64.getInternalName();
        int int67 = type64.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "rg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type" + "'", str66, "rg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test11718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11718");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        int int50 = type49.getSort();
        java.lang.String str51 = type49.getDescriptor();
        java.lang.String str52 = type49.getDescriptor();
        int int53 = type49.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type49);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean57 = type55.equals((java.lang.Object) 180);
        java.lang.String str58 = type55.toString();
        java.lang.String str59 = type55.getDescriptor();
        java.lang.String str60 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter0.newValue(type55);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        java.lang.String str64 = type63.getDescriptor();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type63);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str67 = type66.getClassName();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.toString();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray71);
        java.lang.Class<?> wildcardClass73 = type68.getClass();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        boolean boolean76 = type66.equals((java.lang.Object) wildcardClass73);
        java.lang.String str77 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass73);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.newValue(type78);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode80 = null;
        org.mockito.asm.tree.analysis.Value value81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value82 = basicInterpreter0.unaryOperation(abstractInsnNode80, value81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "C" + "'", str60, "C");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;" + "'", str64, "Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;");
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "long" + "'", str67, "long");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(I)V" + "'", str72, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str77, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
    }

    @Test
    public void test11719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11719");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean3 = type1.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass4 = type1.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        java.lang.String str6 = type5.toString();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str8 = type7.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str13 = type12.toString();
        int int14 = type12.getSort();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type12, type15, type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str23 = type22.toString();
        int int24 = type22.getSort();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type22, type25, type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray27);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray27);
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray27);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray27);
        int int33 = type0.getSize();
        java.lang.Class<?> wildcardClass34 = type0.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        int int37 = type36.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "char" + "'", str8, "char");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(VVI)J" + "'", str18, "(VVI)J");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "V" + "'", str23, "V");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VVI)J" + "'", str28, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(VVI)J" + "'", str29, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VVI)C" + "'", str30, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str31, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(VVI)B" + "'", str32, "(VVI)B");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/Type" + "'", str35, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
    }

    @Test
    public void test11720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11720");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        int int24 = type22.getSort();
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter0.newValue(type22);
        int int26 = type22.getSort();
        java.lang.String str27 = type22.getDescriptor();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type28 = type22.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 7 + "'", int24 == 7);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7 + "'", int26 == 7);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "J" + "'", str27, "J");
    }

    @Test
    public void test11721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11721");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter0.copyOperation(abstractInsnNode35, value40);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getReturnType("(VVI)C");
        java.lang.String str45 = type44.toString();
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter0.newValue(type44);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newOperation(abstractInsnNode47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertNotNull(value46);
    }

    @Test
    public void test11722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11722");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str42 = type41.getInternalName();
        int int43 = type41.getDimensions();
        int int44 = type41.getSort();
        java.lang.String str45 = type41.getClassName();
        int int46 = type41.getSort();
        boolean boolean48 = type41.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: (VVI)LJ;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str42, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.mockito.asm.tree.analysis.BasicValue" + "'", str45, "org.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test11723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11723");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        int int21 = type20.getSort();
        int int22 = type20.getSize();
        int int23 = type20.getDimensions();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter1.newValue(type20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean34 = type32.equals((java.lang.Object) 180);
        java.lang.String str35 = type32.toString();
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter29.newValue(type32);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter37.ternaryOperation(abstractInsnNode38, value43, value49, value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value62);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter64 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.toString();
        int int70 = type68.getSort();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type68, type71, type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter64.newValue(type66);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter37.merge(value62, value75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean79 = type77.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass80 = type77.getClass();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter37.newValue(type81);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter29.newValue(type81);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str85 = type84.getClassName();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter29.newValue(type84);
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter1.merge(value27, value86);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getObjectType("(I)V");
        java.lang.String str90 = type89.getClassName();
        java.lang.String str91 = type89.getInternalName();
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter1.newValue(type89);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = basicInterpreter1.newOperation(abstractInsnNode93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNull(value57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)J" + "'", str74, "(VVI)J");
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "long" + "'", str85, "long");
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(I)V" + "'", str90, "(I)V");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(I)V" + "'", str91, "(I)V");
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test11724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11724");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray3 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str4 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray3);
        java.lang.Class<?> wildcardClass5 = type0.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = type6.getElementType();
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.ternaryOperation(abstractInsnNode11, value16, value22, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter32.ternaryOperation(abstractInsnNode33, value38, value44, value50);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode54 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value71);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter53.ternaryOperation(abstractInsnNode54, value59, value65, value71);
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier31.merge(value38, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter10.merge(value74, value77);
        boolean boolean79 = type7.equals((java.lang.Object) value78);
        java.lang.String str80 = type7.getClassName();
        java.lang.String str81 = type7.toString();
        java.lang.String str82 = type7.toString();
        java.lang.Class<?> wildcardClass83 = type7.getClass();
        java.lang.String str84 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass83);
        java.lang.String str85 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass83);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(I)V" + "'", str4, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lg/mockito/asm/Type;" + "'", str8, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value30);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNull(value73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "g.mockito.asm.Type" + "'", str80, "g.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Lg/mockito/asm/Type;" + "'", str81, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Lg/mockito/asm/Type;" + "'", str82, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str84, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str85, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11725");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray6 = analyzerException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = analyzerException5.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("L(I)V;", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: LI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type12 = null;
        org.mockito.asm.tree.analysis.Value value13 = basicInterpreter11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean16 = type14.equals((java.lang.Object) 180);
        java.lang.String str17 = type14.toString();
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter11.newValue(type14);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        int int25 = value24.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value24);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter11.copyOperation(abstractInsnNode19, value24);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("C");
        int int30 = type29.getSort();
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter11.newValue(type29);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int35 = type33.getOpcode((int) (byte) 1);
        int int36 = type33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter11.newValue(type33);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type40 = type39.getElementType();
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter11.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;", (java.lang.Object) analyzerException5, value41);
        java.lang.Throwable[] throwableArray43 = analyzerException42.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test11726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11726");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str1 = type0.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.Value value4 = basicInterpreter2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean7 = type5.equals((java.lang.Object) 180);
        java.lang.String str8 = type5.toString();
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter2.newValue(type5);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.ternaryOperation(abstractInsnNode11, value16, value22, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value35);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str42 = type41.toString();
        int int43 = type41.getSort();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type41, type44, type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter37.newValue(type39);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter10.merge(value35, value48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean52 = type50.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass53 = type50.getClass();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter10.newValue(type54);
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter2.newValue(type54);
        boolean boolean57 = type0.equals((java.lang.Object) value56);
        int int58 = type0.getSort();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("Lg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str61 = type60.toString();
        boolean boolean62 = type0.equals((java.lang.Object) type60);
        java.lang.String str63 = type60.toString();
        int int65 = type60.getOpcode(3);
        int int66 = type60.getDimensions();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "S" + "'", str1, "S");
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "C" + "'", str8, "C");
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "V" + "'", str42, "V");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(VVI)J" + "'", str47, "(VVI)J");
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lg/mockito/asm/tree/analysis/BasicValue;" + "'", str61, "Lg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Lg/mockito/asm/tree/analysis/BasicValue;" + "'", str63, "Lg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 7 + "'", int65 == 7);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
    }

    @Test
    public void test11727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11727");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        int int2 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.ternaryOperation(abstractInsnNode11, value16, value22, value28);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter6.ternaryOperation(abstractInsnNode9, value22, value35, value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value35, value45, value65);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean71 = type69.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass72 = type69.getClass();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass72);
        java.lang.String str74 = type73.toString();
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter4.newValue(type73);
        int int76 = type73.getSize();
        java.lang.String str77 = type73.getDescriptor();
        org.mockito.asm.Type type78 = type73.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str81 = type80.toString();
        int int82 = type80.getSort();
        java.lang.String str83 = type80.getDescriptor();
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier79.newValue(type80);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean87 = type85.equals((java.lang.Object) 180);
        java.lang.String str88 = type85.toString();
        java.lang.String str89 = type85.getDescriptor();
        int int90 = type85.getSort();
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier79.newValue(type85);
        int int92 = value91.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException93 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) type78, value91);
        boolean boolean94 = type1.equals((java.lang.Object) type78);
        int int95 = type78.getDimensions();
        java.lang.String str96 = type78.getClassName();
        java.lang.Class<?> wildcardClass97 = type78.getClass();
        org.mockito.asm.Type type98 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass97);
        org.mockito.asm.Type type99 = type98.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value30);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str74, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str77, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "V" + "'", str81, "V");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "V" + "'", str83, "V");
        org.junit.Assert.assertNull(value84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "C" + "'", str88, "C");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "C" + "'", str89, "C");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2 + "'", int90 == 2);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "g.mockito.asm.Type" + "'", str96, "g.mockito.asm.Type");
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(type98);
        org.junit.Assert.assertNotNull(type99);
    }

    @Test
    public void test11728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11728");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        java.lang.String str8 = type5.getDescriptor();
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier4.newValue(type5);
        java.lang.String str10 = type5.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type14 = null;
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type5, value15);
        java.lang.String str18 = type5.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter20 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type24, type27, type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter20.newValue(type22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        int int35 = value34.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter20, value34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass38 = type37.getClass();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        int int40 = type39.getSort();
        int int41 = type39.getSize();
        int int42 = type39.getDimensions();
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter20.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) str18, value43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)Lhi!;", obj1, value43);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertNull(value9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VVI)J" + "'", str30, "(VVI)J");
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
    }

    @Test
    public void test11729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11729");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass20 = type19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass20);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter1.newValue(type22);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        java.lang.String str30 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier26.newValue(type27);
        java.lang.String str32 = type27.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type36 = null;
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type27, value37);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.copyOperation(abstractInsnNode24, value37);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter42 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str47 = type46.toString();
        int int48 = type46.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type46, type49, type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter42.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        int int57 = value56.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter42, value56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass60 = type59.getClass();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        int int62 = type61.getSort();
        int int63 = type61.getSize();
        int int64 = type61.getDimensions();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter42.newValue(type61);
        int int66 = value65.getSize();
        org.mockito.asm.tree.analysis.Value value67 = null;
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter1.merge(value65, value67);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode69 = null;
        java.util.List list70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value71 = basicInterpreter1.naryOperation(abstractInsnNode69, list70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/Type" + "'", str21, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VVI)J" + "'", str52, "(VVI)J");
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test11730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11730");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter36.ternaryOperation(abstractInsnNode37, value42, value48, value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value61);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter63 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str68 = type67.toString();
        int int69 = type67.getSort();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type67, type70, type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter63.newValue(type65);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter36.merge(value61, value74);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.copyOperation(abstractInsnNode35, value74);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value78 = basicInterpreter0.newOperation(abstractInsnNode77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNull(value56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "V" + "'", str68, "V");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)J" + "'", str73, "(VVI)J");
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
    }

    @Test
    public void test11731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11731");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str26 = type25.toString();
        int int27 = type25.getSort();
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter4.newValue(type25);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter4.copyOperation(abstractInsnNode29, value32);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type35 = null;
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter34.newValue(type35);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter38 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode39 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter38.ternaryOperation(abstractInsnNode39, value44, value50, value56);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter61 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type62 = null;
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter34.ternaryOperation(abstractInsnNode37, value50, value63, value67);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value32, value68, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        int int79 = type77.getSize();
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter0.newValue(type77);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("(I)L(I)Z;");
        int int83 = type82.getDimensions();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type82);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "V" + "'", str26, "V");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNull(value58);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(value84);
    }

    @Test
    public void test11732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11732");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        java.lang.String str49 = type46.getClassName();
        java.lang.String str50 = type46.getDescriptor();
        int int52 = type46.getOpcode(138);
        int int54 = type46.getOpcode(15);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "char" + "'", str49, "char");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "C" + "'", str50, "C");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 138 + "'", int52 == 138);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 15 + "'", int54 == 15);
    }

    @Test
    public void test11733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11733");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        int int50 = type49.getSort();
        java.lang.String str51 = type49.getDescriptor();
        java.lang.String str52 = type49.getDescriptor();
        int int53 = type49.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type49);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        boolean boolean57 = type49.equals((java.lang.Object) type55);
        java.lang.String str58 = type49.getClassName();
        int int60 = type49.getOpcode(90);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = type49.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "char" + "'", str58, "char");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 90 + "'", int60 == 90);
    }

    @Test
    public void test11734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11734");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.merge(value8, value13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        int int19 = type16.getSort();
        java.lang.String str20 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier0.newValue(type16);
        java.lang.String str22 = type16.getClassName();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.toString();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray26);
        java.lang.Class<?> wildcardClass28 = type23.getClass();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        boolean boolean30 = type16.equals((java.lang.Object) type29);
        int int32 = type16.getOpcode(8194);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;", (java.lang.Throwable) analyzerException41);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.toString();
        int int49 = type47.getSort();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type47, type50, type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter43.newValue(type45);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter56 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type57 = null;
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter56.newValue(type57);
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter43.copyOperation(abstractInsnNode55, value58);
        int int60 = value58.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("LI)Lg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Object) analyzerException41, value58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("()Lckito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException61);
        boolean boolean63 = type16.equals((java.lang.Object) analyzerException61);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "void" + "'", str20, "void");
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "void" + "'", str22, "void");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(I)V" + "'", str27, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8199 + "'", int32 == 8199);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(VVI)J" + "'", str53, "(VVI)J");
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test11735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11735");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.ternaryOperation(abstractInsnNode3, value8, value14, value20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter2.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = type26.getSize();
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter2.newValue(type26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSort();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type36, type39, type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter32.newValue(type34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter32, value46);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass51 = type50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter32.newValue(type53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter2.copyOperation(abstractInsnNode30, value54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) 99, value55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        java.lang.Throwable throwable63 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException64);
        analyzerException60.addSuppressed((java.lang.Throwable) analyzerException64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J: expected C, but found J", (java.lang.Throwable) analyzerException64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("g.mockito.asm.Type", (java.lang.Throwable) analyzerException64);
        analyzerException56.addSuppressed((java.lang.Throwable) analyzerException64);
        java.lang.Throwable[] throwableArray70 = analyzerException56.getSuppressed();
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(VVI)J" + "'", str42, "(VVI)J");
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/Type" + "'", str52, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test11736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11736");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean51 = type49.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass52 = type49.getClass();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        int int55 = type53.getOpcode(0);
        java.lang.String str56 = type53.getInternalName();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.newValue(type53);
        int int59 = type53.getOpcode(81);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean62 = type60.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass63 = type60.getClass();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        int int66 = type64.getOpcode(0);
        int int67 = type64.getSort();
        boolean boolean68 = type53.equals((java.lang.Object) type64);
        int int69 = type64.getSort();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/Type" + "'", str56, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 85 + "'", int59 == 85);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
    }

    @Test
    public void test11737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11737");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str42 = type41.toString();
        int int43 = type41.getSort();
        java.lang.String str44 = type41.toString();
        java.lang.String str45 = type41.getDescriptor();
        java.lang.String str46 = type41.getClassName();
        java.lang.String str47 = type41.getDescriptor();
        int int48 = type41.getDimensions();
        int int49 = type41.getSize();
        java.lang.String str50 = type41.getInternalName();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str42, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str44, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str45, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.mockito.asm.tree.analysis.BasicValue" + "'", str46, "org.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str47, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str50, "org/mockito/asm/tree/analysis/BasicValue");
    }

    @Test
    public void test11738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11738");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass1 = type0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.Type type7 = type5.getElementType();
        org.mockito.asm.Type type8 = type5.getElementType();
        java.lang.String str9 = type8.getDescriptor();
        int int10 = type8.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value29);
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter11.ternaryOperation(abstractInsnNode12, value17, value23, value29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter11.newValue(type32);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode36 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type38 = null;
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter37.newValue(type38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter11.copyOperation(abstractInsnNode36, value39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean43 = type41.equals((java.lang.Object) 180);
        java.lang.String str44 = type41.toString();
        java.lang.String str45 = type41.getDescriptor();
        int int46 = type41.getSort();
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter11.newValue(type41);
        java.lang.Class<?> wildcardClass48 = basicInterpreter11.getClass();
        boolean boolean49 = type8.equals((java.lang.Object) wildcardClass48);
        java.lang.String str50 = type8.toString();
        int int51 = type8.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str2, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/Type" + "'", str3, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lg/mockito/asm/Type;" + "'", str9, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(value35);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lg/mockito/asm/Type;" + "'", str50, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test11739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11739");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter0.newValue(type4);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        int int10 = type8.getOpcode(116);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type8);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter15 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.toString();
        int int21 = type19.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type19, type22, type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter15.newValue(type17);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter28.ternaryOperation(abstractInsnNode29, value34, value40, value46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        int int51 = type49.getSort();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter28.newValue(type49);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter54 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type55 = null;
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter54.newValue(type55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter28.copyOperation(abstractInsnNode53, value56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter15.copyOperation(abstractInsnNode27, value57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: V", value58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter0.copyOperation(abstractInsnNode12, value58);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J: expected C, but found J");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable67 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable67);
        java.lang.Throwable[] throwableArray69 = analyzerException68.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException68);
        analyzerException64.addSuppressed((java.lang.Throwable) analyzerException68);
        boolean boolean72 = type62.equals((java.lang.Object) analyzerException64);
        int int73 = type62.getSort();
        java.lang.String str74 = type62.getClassName();
        java.lang.String str75 = type62.getClassName();
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str79 = type78.toString();
        int int80 = type78.getSort();
        java.lang.String str81 = type78.getDescriptor();
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier77.newValue(type78);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean85 = type83.equals((java.lang.Object) 180);
        java.lang.String str86 = type83.toString();
        java.lang.String str87 = type83.getDescriptor();
        int int88 = type83.getSort();
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier77.newValue(type83);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int91 = type90.getSort();
        org.mockito.asm.tree.analysis.Value value92 = basicVerifier77.newValue(type90);
        java.lang.String str93 = type90.getClassName();
        org.mockito.asm.tree.analysis.Value value94 = basicInterpreter0.newValue(type90);
        java.lang.String str95 = type90.getClassName();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "B" + "'", str5, "B");
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 120 + "'", int10 == 120);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VVI)J" + "'", str25, "(VVI)J");
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 7 + "'", int73 == 7);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "long" + "'", str74, "long");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "long" + "'", str75, "long");
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "V" + "'", str79, "V");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "V" + "'", str81, "V");
        org.junit.Assert.assertNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "C" + "'", str87, "C");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "boolean" + "'", str93, "boolean");
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "boolean" + "'", str95, "boolean");
    }

    @Test
    public void test11740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11740");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass45 = type44.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        java.lang.String str50 = type49.getClassName();
        java.lang.String str51 = type49.getClassName();
        org.mockito.asm.Type type52 = type49.getElementType();
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier0.newValue(type49);
        org.mockito.asm.Type type54 = null;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier0.newValue(type54);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        java.util.List list57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value58 = basicVerifier0.naryOperation(abstractInsnNode56, list57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/Type" + "'", str48, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.mockito.asm.Type" + "'", str50, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.mockito.asm.Type" + "'", str51, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value55);
    }

    @Test
    public void test11741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11741");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type8 = type7.getElementType();
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier2.newValue(type8);
        boolean boolean10 = type1.equals((java.lang.Object) basicVerifier2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        java.lang.Class<?> wildcardClass21 = typeArray19.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.lang.String str24 = type23.toString();
        int int25 = type23.getDimensions();
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier2.newValue(type23);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter38 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.toString();
        int int44 = type42.getSort();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type42, type45, type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter38.newValue(type40);
        boolean boolean50 = type29.equals((java.lang.Object) basicInterpreter38);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean53 = type51.equals((java.lang.Object) 180);
        java.lang.String str54 = type51.toString();
        java.lang.String str55 = type51.getDescriptor();
        int int56 = type51.getSize();
        java.lang.String str57 = type51.getClassName();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter38.newValue(type51);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode59 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter60 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str62 = type61.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type66, type69, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.toString();
        int int78 = type76.getSort();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type76, type79, type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray81);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray81);
        int int85 = type61.getSize();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter60.newValue(type61);
        org.mockito.asm.Type type87 = null;
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter60.newValue(type87);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter38.copyOperation(abstractInsnNode59, value88);
        int int90 = value89.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = basicVerifier2.unaryOperation(abstractInsnNode27, value89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str22, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str24, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(VVI)J" + "'", str48, "(VVI)J");
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "C" + "'", str54, "C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "char" + "'", str57, "char");
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "char" + "'", str62, "char");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)J" + "'", str83, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(VVI)C" + "'", str84, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
    }

    @Test
    public void test11742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11742");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter9.ternaryOperation(abstractInsnNode10, value15, value21, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter9.merge(value34, value47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter9.newValue(type49);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        int int56 = type55.getSort();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter9.newValue(type55);
        java.lang.String str58 = type55.getClassName();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str61 = type60.getClassName();
        org.mockito.asm.Type[] typeArray63 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray63);
        java.lang.String str66 = type55.toString();
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier0.newValue(type55);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass69 = type68.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        int int71 = type70.getDimensions();
        org.mockito.asm.Type type72 = type70.getElementType();
        int int73 = type72.getDimensions();
        java.lang.String str74 = type72.toString();
        int int75 = type72.getSize();
        int int76 = type72.getDimensions();
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier0.newValue(type72);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode78 = null;
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getObjectType("rg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.BasicValue");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass84 = type83.getClass();
        java.lang.String str85 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass84);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass84);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass84);
        org.mockito.asm.Type type88 = type87.getElementType();
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier82.newValue(type88);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("ckito/asm/Type", (java.lang.Object) type81, value89);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = basicVerifier0.copyOperation(abstractInsnNode78, value89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(I)V" + "'", str53, "(I)V");
        org.junit.Assert.assertNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "char" + "'", str58, "char");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "void" + "'", str61, "void");
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(I)V" + "'", str64, "(I)V");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(I)C" + "'", str65, "(I)C");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "C" + "'", str66, "C");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lg/mockito/asm/Type;" + "'", str74, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str85, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
    }

    @Test
    public void test11743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11743");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter0.newValue(type27);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.Value value30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter0.copyOperation(abstractInsnNode29, value30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass33 = type32.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        java.lang.String str35 = type34.getClassName();
        java.lang.String str36 = type34.getDescriptor();
        int int38 = type34.getOpcode(149);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.newValue(type34);
        java.lang.String str40 = type34.getInternalName();
        int int42 = type34.getOpcode(130);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.mockito.asm.Type" + "'", str35, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str36, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 153 + "'", int38 == 153);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/asm/Type" + "'", str40, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 134 + "'", int42 == 134);
    }

    @Test
    public void test11744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11744");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray22 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type25 = null;
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter24.newValue(type25);
        int int27 = value26.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str23, value26);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode17, value26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode32 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter31.ternaryOperation(abstractInsnNode32, value37, value43, value49);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter31.newValue(type52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        int int57 = type55.getSize();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter31.newValue(type55);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("(I)Lchar;");
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter31.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean64 = type62.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass65 = type62.getClass();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = type66.getClass();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str70 = type69.toString();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray72);
        java.lang.Class<?> wildcardClass74 = type69.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        int int77 = type76.getSize();
        org.mockito.asm.Type type78 = type76.getElementType();
        boolean boolean79 = type68.equals((java.lang.Object) type76);
        java.lang.String str80 = type76.getInternalName();
        java.lang.Throwable throwable82 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J", throwable82);
        boolean boolean84 = type76.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter31.newValue(type76);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value86 = basicInterpreter0.unaryOperation(abstractInsnNode30, value85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(I)Lchar;" + "'", str23, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "V" + "'", str70, "V");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(I)V" + "'", str73, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str75, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org/mockito/asm/Type" + "'", str80, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(value85);
    }

    @Test
    public void test11745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11745");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type47);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getReturnType("(I)V");
        int int51 = type50.getSize();
        int int52 = type50.getSize();
        int int53 = type50.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type50);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter55 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type56 = null;
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter55.newValue(type56);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode58 = null;
        org.mockito.asm.tree.analysis.Value value59 = null;
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter55.copyOperation(abstractInsnNode58, value59);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getReturnType("(I)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter55.newValue(type62);
        org.mockito.asm.Type type64 = type62.getElementType();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type64);
        java.lang.String str66 = type64.getClassName();
        int int67 = type64.getSort();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(value54);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "g.mockito.asm.Type" + "'", str66, "g.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
    }

    @Test
    public void test11746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11746");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        int int50 = type49.getSort();
        java.lang.String str51 = type49.getDescriptor();
        java.lang.String str52 = type49.getDescriptor();
        int int53 = type49.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type49);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray58);
        java.lang.Class<?> wildcardClass60 = type55.getClass();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        org.mockito.asm.Type type62 = type61.getElementType();
        org.mockito.asm.Type type63 = type62.getElementType();
        int int65 = type63.getOpcode(121);
        boolean boolean66 = type49.equals((java.lang.Object) int65);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = type49.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(I)V" + "'", str59, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 125 + "'", int65 == 125);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test11747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11747");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type29 = type28.getElementType();
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter0.newValue(type28);
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter0.newValue(type31);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        java.lang.Object obj35 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type37 = null;
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter36.newValue(type37);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode39 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter40 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter40.ternaryOperation(abstractInsnNode41, value46, value52, value58);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter63 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type64 = null;
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter36.ternaryOperation(abstractInsnNode39, value52, value65, value69);
        int int71 = value69.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("ckito.asm.tree.analysis.BasicValue", obj35, value69);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter0.copyOperation(abstractInsnNode33, value69);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.newValue(type75);
        int int77 = type75.getDimensions();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNull(value60);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test11748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11748");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str10 = type9.toString();
        int int11 = type9.getSort();
        java.lang.String str12 = type9.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type17, type20, type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter13.newValue(type15);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean28 = type26.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean34 = type32.equals((java.lang.Object) 180);
        java.lang.String str35 = type32.toString();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type15, type25, type26, type30, type32, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.toString();
        int int44 = type42.getSort();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type42, type45, type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type52, type55, type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray57);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray57);
        int int61 = type9.getSort();
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier0.newValue(type9);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean66 = type64.equals((java.lang.Object) 88);
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier0.newValue(type64);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode68 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter70 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str75 = type74.toString();
        int int76 = type74.getSort();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type74, type77, type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter70.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        int int85 = value84.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter70, value84);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass89 = type88.getClass();
        java.lang.String str90 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass89);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter70.newValue(type91);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = basicVerifier0.copyOperation(abstractInsnNode68, value92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(JDCJCI)V" + "'", str38, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(VVI)J" + "'", str48, "(VVI)J");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)J" + "'", str58, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)V" + "'", str60, "(VVI)V");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VVI)J" + "'", str80, "(VVI)J");
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org/mockito/asm/Type" + "'", str90, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test11749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11749");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J");
        java.lang.Throwable[] throwableArray2 = analyzerException1.getSuppressed();
        java.lang.Class<?> wildcardClass3 = analyzerException1.getClass();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.ternaryOperation(abstractInsnNode11, value16, value22, value28);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter6.ternaryOperation(abstractInsnNode9, value22, value35, value39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter6.newValue(type42);
        org.mockito.asm.Type type44 = type42.getElementType();
        boolean boolean46 = type42.equals((java.lang.Object) 95);
        java.lang.String str47 = type42.getDescriptor();
        int int48 = type42.getSort();
        java.lang.Class<?> wildcardClass49 = type42.getClass();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass49);
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass49);
        boolean boolean52 = type5.equals((java.lang.Object) wildcardClass49);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value30);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "LLorg/mockito/asm/Type;;" + "'", str47, "LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/Type" + "'", str51, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test11750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11750");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray4 = new org.mockito.asm.Type[] { type3 };
        java.lang.String str5 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray4);
        java.lang.Class<?> wildcardClass6 = type1.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int9 = type7.getOpcode(141);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str13 = type12.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type17, type20, type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type27, type30, type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray32);
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray32);
        int int36 = type12.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter38 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str40 = type39.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type44, type47, type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.toString();
        int int56 = type54.getSort();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type54, type57, type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray59);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray59);
        int int63 = type39.getSize();
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) basicInterpreter11, value64);
        boolean boolean66 = type7.equals((java.lang.Object) analyzerException65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lg/mockito/asm/tree/analysis/BasicInterpreter;", (java.lang.Throwable) analyzerException65);
        java.lang.Throwable[] throwableArray68 = analyzerException65.getSuppressed();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(typeArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(I)V" + "'", str5, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 145 + "'", int9 == 145);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "char" + "'", str13, "char");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(VVI)J" + "'", str33, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VVI)J" + "'", str34, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VVI)C" + "'", str35, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "char" + "'", str40, "char");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)J" + "'", str60, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)J" + "'", str61, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VVI)C" + "'", str62, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test11751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11751");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass31 = type30.getClass();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        int int33 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type32);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter0.copyOperation(abstractInsnNode35, value38);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType("C");
        java.lang.String str43 = type42.getDescriptor();
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter0.newValue(type42);
        int int45 = type42.getSort();
        java.lang.String str46 = type42.getClassName();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getObjectType("hi!");
        java.lang.String str49 = type48.getInternalName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.Type[] typeArray53 = org.mockito.asm.Type.getArgumentTypes("(VVI)B");
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray53);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray53);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray53);
        java.lang.Class<?> wildcardClass57 = type42.getClass();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "C" + "'", str43, "C");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "char" + "'", str46, "char");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;" + "'", str54, "(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(VVI)Lhi!;" + "'", str55, "(VVI)Lhi!;");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VVI)C" + "'", str56, "(VVI)C");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test11752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11752");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.merge(value8, value13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        int int19 = type16.getSort();
        java.lang.String str20 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier0.newValue(type16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter23 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type24 = null;
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean28 = type26.equals((java.lang.Object) 180);
        java.lang.String str29 = type26.toString();
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter23.newValue(type26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode31 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        int int37 = value36.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value36);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter23.copyOperation(abstractInsnNode31, value36);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray45 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray45);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type48 = null;
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter47.newValue(type48);
        int int50 = value49.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str46, value49);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter23.copyOperation(abstractInsnNode40, value49);
        org.mockito.asm.Type type53 = null;
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter23.newValue(type53);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value55 = basicVerifier0.copyOperation(abstractInsnNode22, value54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "void" + "'", str20, "void");
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(I)Lchar;" + "'", str46, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(value54);
    }

    @Test
    public void test11753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11753");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        int int10 = type7.getOpcode(512);
        int int11 = type7.getSize();
        int int12 = type7.getDimensions();
        java.lang.String str13 = type7.getClassName();
        java.lang.String str14 = type7.getInternalName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        java.lang.String str19 = type16.getDescriptor();
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter21 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type22 = null;
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter21.newValue(type22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value28);
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier15.merge(value23, value28);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray34);
        java.lang.Class<?> wildcardClass36 = type31.getClass();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type38 = type37.getElementType();
        org.mockito.asm.Type type39 = type38.getElementType();
        int int41 = type39.getOpcode(121);
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier15.newValue(type39);
        int int44 = type39.getOpcode(56);
        java.lang.String str45 = type39.toString();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getObjectType("(VVI)I");
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        int int49 = type48.getSort();
        java.lang.String str50 = type48.getDescriptor();
        java.lang.String str51 = type48.getDescriptor();
        java.lang.String str52 = type48.getClassName();
        int int53 = type48.getSize();
        java.lang.String str54 = type48.getClassName();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        int int58 = type57.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str63 = type62.toString();
        int int64 = type62.getSort();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type62, type65, type66 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str73 = type72.toString();
        int int74 = type72.getSort();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type72, type75, type76 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray77);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray77);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray77);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray77);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray77);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray77);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray77);
        java.lang.String str85 = type7.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 516 + "'", int10 == 516);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(I)Z" + "'", str13, "(I)Z");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(I)Z" + "'", str14, "(I)Z");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "V" + "'", str19, "V");
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(I)V" + "'", str35, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 125 + "'", int41 == 125);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 60 + "'", int44 == 60);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lmockito/asm/Type;" + "'", str45, "Lmockito/asm/Type;");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "C" + "'", str50, "C");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "char" + "'", str52, "char");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "char" + "'", str54, "char");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VVI)J" + "'", str68, "(VVI)J");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "V" + "'", str73, "V");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VVI)J" + "'", str78, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(VVI)J" + "'", str79, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str80, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)C" + "'", str81, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)L(VVI)I;" + "'", str82, "(VVI)L(VVI)I;");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)Lmockito/asm/Type;" + "'", str83, "(VVI)Lmockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(VVI)L(I)Z;" + "'", str84, "(VVI)L(I)Z;");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(I)Z" + "'", str85, "(I)Z");
    }

    @Test
    public void test11754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11754");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str35 = type34.toString();
        int int36 = type34.getSort();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type34, type37, type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter30.newValue(type32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        int int45 = value44.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter30, value44);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass49 = type48.getClass();
        java.lang.String str50 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass49);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter30.newValue(type51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter0.copyOperation(abstractInsnNode28, value52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.Type type56 = type55.getElementType();
        int int57 = type55.getSize();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.newValue(type55);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type61 = type60.getElementType();
        java.lang.String str62 = type61.getInternalName();
        org.mockito.asm.Type type63 = type61.getElementType();
        org.mockito.asm.Type type64 = type63.getElementType();
        int int65 = type63.getSort();
        int int66 = type63.getSort();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter0.newValue(type63);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value69 = basicInterpreter0.newOperation(abstractInsnNode68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "V" + "'", str35, "V");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(VVI)J" + "'", str40, "(VVI)J");
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/asm/Type" + "'", str50, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "g/mockito/asm/tree/analysis/BasicInterpreter" + "'", str62, "g/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertNotNull(value67);
    }

    @Test
    public void test11755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11755");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)V", (java.lang.Throwable) analyzerException8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable17 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable17);
        java.lang.Throwable[] throwableArray19 = analyzerException18.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException18);
        analyzerException14.addSuppressed((java.lang.Throwable) analyzerException18);
        java.lang.Throwable[] throwableArray22 = analyzerException18.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)V", (java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J", (java.lang.Throwable) analyzerException18);
        analyzerException8.addSuppressed((java.lang.Throwable) analyzerException24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("Z", (java.lang.Throwable) analyzerException8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean32 = type30.equals((java.lang.Object) 180);
        java.lang.String str33 = type30.toString();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter27.newValue(type30);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = value40.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value40);
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter27.copyOperation(abstractInsnNode35, value40);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getObjectType("C");
        int int46 = type45.getSort();
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter27.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("[Ljava/lang/Throwable;", (java.lang.Object) analyzerException8, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)LI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;", (java.lang.Throwable) analyzerException48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char: expected S, but found J", (java.lang.Throwable) analyzerException49);
        java.lang.String str51 = analyzerException49.toString();
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (VVI)LI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str51, "org.mockito.asm.tree.analysis.AnalyzerException: (VVI)LI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
    }

    @Test
    public void test11756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11756");
        java.lang.Throwable throwable2 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable2);
        java.lang.Throwable[] throwableArray4 = analyzerException3.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J");
        analyzerException7.addSuppressed((java.lang.Throwable) analyzerException10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("g/mockito/asm/Type", (java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)I", (java.lang.Throwable) analyzerException22);
        analyzerException19.addSuppressed((java.lang.Throwable) analyzerException23);
        java.lang.Throwable[] throwableArray25 = analyzerException23.getSuppressed();
        analyzerException10.addSuppressed((java.lang.Throwable) analyzerException23);
        java.lang.Throwable[] throwableArray27 = analyzerException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test11757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11757");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type45, type48, type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter41.newValue(type43);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter54 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type55 = null;
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter54.newValue(type55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter41.copyOperation(abstractInsnNode53, value56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.copyOperation(abstractInsnNode40, value56);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (JDCJCI)V");
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter0.newValue(type60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean65 = type63.equals((java.lang.Object) 88);
        int int66 = type63.getSize();
        int int67 = type63.getSort();
        java.lang.String str68 = type63.toString();
        int int69 = type63.getSize();
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type63);
        java.lang.String str71 = type63.getClassName();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "L(I)V;" + "'", str68, "L(I)V;");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(I)V" + "'", str71, "(I)V");
    }

    @Test
    public void test11758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11758");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.Value value4 = basicInterpreter2.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter2.ternaryOperation(abstractInsnNode5, value18, value31, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value41);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter43.ternaryOperation(abstractInsnNode44, value49, value55, value61);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value31, value41, value61);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean67 = type65.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass68 = type65.getClass();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        java.lang.String str70 = type69.toString();
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter0.newValue(type69);
        int int73 = type69.getOpcode(107);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNull(value63);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str70, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 111 + "'", int73 == 111);
    }

    @Test
    public void test11759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11759");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        int int31 = type30.getSort();
        java.lang.String str32 = type30.getDescriptor();
        java.lang.String str33 = type30.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSort();
        boolean boolean40 = type36.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type45, type48, type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        int int57 = type55.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type55, type58, type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray60);
        int int64 = type43.getOpcode((int) 'a');
        java.lang.String str65 = type43.getClassName();
        int int66 = type43.getSort();
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier35.newValue(type43);
        int int69 = type43.getOpcode(195);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type43);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.toString();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray74);
        java.lang.Class<?> wildcardClass76 = type71.getClass();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        java.lang.String str78 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass76);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        java.lang.Object obj80 = null;
        boolean boolean81 = type79.equals(obj80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter0.newValue(type79);
        int int83 = type79.getSort();
        org.mockito.asm.Type type84 = type79.getElementType();
        java.lang.String str85 = type79.getClassName();
        int int86 = type79.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)J" + "'", str61, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VVI)J" + "'", str62, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 98 + "'", int64 == 98);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "long" + "'", str65, "long");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 7 + "'", int66 == 7);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 196 + "'", int69 == 196);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(I)V" + "'", str75, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str78, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.mockito.asm.Type" + "'", str85, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test11760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11760");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        int int22 = type21.getSort();
        java.lang.String str23 = type21.getDescriptor();
        java.lang.String str24 = type21.getDescriptor();
        java.lang.String str25 = type21.getClassName();
        org.mockito.asm.Type[] typeArray27 = org.mockito.asm.Type.getArgumentTypes("(VVI)B");
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("(I)V");
        int int32 = type31.getSize();
        java.lang.String str33 = type31.getDescriptor();
        java.lang.Class<?> wildcardClass34 = type31.getClass();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.newValue(type36);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getObjectType("(I)V");
        java.lang.String str40 = type39.getClassName();
        java.lang.String str41 = type39.toString();
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter0.newValue(type39);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "C" + "'", str24, "C");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "char" + "'", str25, "char");
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VVI)C" + "'", str28, "(VVI)C");
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(I)V" + "'", str40, "(I)V");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L(I)V;" + "'", str41, "L(I)V;");
        org.junit.Assert.assertNotNull(value42);
    }

    @Test
    public void test11761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11761");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: V: expected  , but found J");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter28.ternaryOperation(abstractInsnNode29, value34, value40, value46);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter49.ternaryOperation(abstractInsnNode50, value55, value61, value67);
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier27.merge(value34, value69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter6.merge(value70, value73);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("void", (java.lang.Object) 171, value74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)V");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)C", (java.lang.Throwable) analyzerException78);
        analyzerException75.addSuppressed((java.lang.Throwable) analyzerException78);
        boolean boolean81 = type1.equals((java.lang.Object) analyzerException75);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: V: expected  , but found J;" + "'", str2, "Lorg.mockito.asm.tree.analysis.AnalyzerException: V: expected  , but found J;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: V: expected  , but found J;" + "'", str3, "Lorg.mockito.asm.tree.analysis.AnalyzerException: V: expected  , but found J;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNull(value48);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test11762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11762");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BYTE_TYPE;
        int int64 = type63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type63);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass69 = type66.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        java.lang.String str71 = type70.toString();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str73 = type72.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str78 = type77.toString();
        int int79 = type77.getSort();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type81 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray82 = new org.mockito.asm.Type[] { type77, type80, type81 };
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type75, typeArray82);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str88 = type87.toString();
        int int89 = type87.getSort();
        org.mockito.asm.Type type90 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type91 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray92 = new org.mockito.asm.Type[] { type87, type90, type91 };
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type85, typeArray92);
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type75, typeArray92);
        java.lang.String str95 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray92);
        java.lang.String str96 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray92);
        org.mockito.asm.tree.analysis.Value value97 = basicInterpreter0.newValue(type70);
        java.lang.Class<?> wildcardClass98 = type70.getClass();
        java.lang.String str99 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass98);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str71, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "char" + "'", str73, "char");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "V" + "'", str78, "V");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)J" + "'", str83, "(VVI)J");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "V" + "'", str88, "V");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(VVI)J" + "'", str93, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(VVI)J" + "'", str94, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(VVI)C" + "'", str95, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str96, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value97);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str99, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11763");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        int int29 = type24.getOpcode(4096);
        java.lang.String str30 = type24.getClassName();
        int int31 = type24.getSize();
        java.lang.String str32 = type24.toString();
        int int33 = type24.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4097 + "'", int29 == 4097);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "long" + "'", str30, "long");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "J" + "'", str32, "J");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
    }

    @Test
    public void test11764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11764");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type");
        java.lang.Throwable[] throwableArray4 = analyzerException3.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException11);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J");
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException15);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter19 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type20 = null;
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value21);
        java.lang.Throwable throwable25 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable25);
        java.lang.Throwable[] throwableArray27 = analyzerException26.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException26.addSuppressed((java.lang.Throwable) analyzerException30);
        java.lang.Throwable throwable34 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException35);
        analyzerException30.addSuppressed((java.lang.Throwable) analyzerException36);
        analyzerException22.addSuppressed((java.lang.Throwable) analyzerException36);
        analyzerException15.addSuppressed((java.lang.Throwable) analyzerException36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("F", (java.lang.Throwable) analyzerException15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Z");
        java.lang.Throwable throwable44 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable44);
        java.lang.Throwable[] throwableArray46 = analyzerException45.getSuppressed();
        analyzerException42.addSuppressed((java.lang.Throwable) analyzerException45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type");
        java.lang.Throwable[] throwableArray50 = analyzerException49.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException57);
        analyzerException49.addSuppressed((java.lang.Throwable) analyzerException57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J");
        analyzerException49.addSuppressed((java.lang.Throwable) analyzerException61);
        analyzerException45.addSuppressed((java.lang.Throwable) analyzerException61);
        analyzerException15.addSuppressed((java.lang.Throwable) analyzerException61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value71);
        java.lang.Throwable[] throwableArray73 = analyzerException72.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException72);
        java.lang.Throwable[] throwableArray75 = analyzerException74.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)V", (java.lang.Throwable) analyzerException74);
        analyzerException15.addSuppressed((java.lang.Throwable) analyzerException76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("()J", (java.lang.Throwable) analyzerException76);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray75);
    }

    @Test
    public void test11765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11765");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        int int24 = type22.getSort();
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter0.newValue(type22);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 55, but found J");
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter0.newValue(type27);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter32.ternaryOperation(abstractInsnNode33, value38, value44, value50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter32.newValue(type53);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter58.newValue(type59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter32.copyOperation(abstractInsnNode57, value60);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter62 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode63 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value74);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter62.ternaryOperation(abstractInsnNode63, value68, value74, value80);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter62.newValue(type83);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier85 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier85.newValue(type86);
        int int88 = type86.getSize();
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter62.newValue(type86);
        java.lang.Class<?> wildcardClass90 = type86.getClass();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass90);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass90);
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter32.newValue(type92);
        org.mockito.asm.tree.analysis.Value value94 = null;
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter0.merge(value93, value94);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 7 + "'", int24 == 7);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(value56);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertNotNull(value95);
    }

    @Test
    public void test11766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11766");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter28.ternaryOperation(abstractInsnNode29, value34, value40, value46);
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier6.merge(value13, value48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) "void", value48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Throwable) analyzerException50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: void: expected 171, but found .", (java.lang.Throwable) analyzerException50);
        java.lang.Throwable[] throwableArray53 = analyzerException50.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        analyzerException55.addSuppressed((java.lang.Throwable) analyzerException57);
        java.lang.Throwable throwable61 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        java.lang.Throwable throwable68 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException69);
        analyzerException65.addSuppressed((java.lang.Throwable) analyzerException69);
        analyzerException63.addSuppressed((java.lang.Throwable) analyzerException69);
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException63);
        analyzerException50.addSuppressed((java.lang.Throwable) analyzerException57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("L(I)Lorg/mockito/asm/Type;;", (java.lang.Throwable) analyzerException50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("L(JDCJCI)C;", (java.lang.Throwable) analyzerException50);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNull(value48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test11767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11767");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type48 = null;
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean52 = type50.equals((java.lang.Object) 180);
        java.lang.String str53 = type50.toString();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter47.newValue(type50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        int int61 = value60.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value60);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter47.copyOperation(abstractInsnNode55, value60);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getObjectType("C");
        int int66 = type65.getSort();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.newValue(type65);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int71 = type69.getOpcode((int) (byte) 1);
        int int72 = type69.getSize();
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter47.newValue(type69);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter0.copyOperation(abstractInsnNode46, value73);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "C" + "'", str53, "C");
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 5 + "'", int71 == 5);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
    }

    @Test
    public void test11768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11768");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        int int21 = type20.getSort();
        int int22 = type20.getSize();
        int int23 = type20.getDimensions();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter1.newValue(type20);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getObjectType("mockito.asm.Type");
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter1.newValue(type26);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type31 = type30.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int36 = type34.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier32.newValue(type34);
        int int38 = value37.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Object) type30, value37);
        java.lang.String str40 = type30.getDescriptor();
        int int41 = type30.getSize();
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter1.newValue(type30);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter44.ternaryOperation(abstractInsnNode45, value50, value56, value62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value69);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str76 = type75.toString();
        int int77 = type75.getSort();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type75, type78, type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter71.newValue(type73);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter44.merge(value69, value82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str85 = type84.toString();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray87 = new org.mockito.asm.Type[] { type86 };
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type84, typeArray87);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter44.newValue(type84);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter44.newValue(type90);
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter1.copyOperation(abstractInsnNode43, value91);
        org.mockito.asm.Type type94 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;;");
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter1.newValue(type94);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode96 = null;
        java.util.List list97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value98 = basicInterpreter1.naryOperation(abstractInsnNode96, list97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 87 + "'", int36 == 87);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str40, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "V" + "'", str76, "V");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)J" + "'", str81, "(VVI)J");
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "V" + "'", str85, "V");
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(I)V" + "'", str88, "(I)V");
        org.junit.Assert.assertNull(value89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNotNull(value95);
    }

    @Test
    public void test11769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11769");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value4);
        java.lang.Class<?> wildcardClass6 = analyzerException5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type[] typeArray9 = org.mockito.asm.Type.getArgumentTypes("(JDCJCI)Lg/mockito/asm/Type;");
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray9);
        java.lang.Class<?> wildcardClass11 = type7.getClass();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(JDCJCI)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str10, "(JDCJCI)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test11770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11770");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter8.ternaryOperation(abstractInsnNode9, value14, value20, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str40 = type39.toString();
        int int41 = type39.getSort();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type39, type42, type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter35.newValue(type37);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter8.merge(value33, value46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean50 = type48.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass51 = type48.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter8.newValue(type52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str56 = type55.getClassName();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.newValue(type55);
        org.mockito.asm.Type type58 = null;
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter0.newValue(type58);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode60 = null;
        java.util.List list61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.naryOperation(abstractInsnNode60, list61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VVI)J" + "'", str45, "(VVI)J");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "long" + "'", str56, "long");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value59);
    }

    @Test
    public void test11771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11771");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int14 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.newValue(type13);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("Lg/mockito/asm/Type;");
        int int18 = type17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier0.newValue(type17);
        int int21 = type17.getOpcode(104);
        int int22 = type17.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 108 + "'", int21 == 108);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test11772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11772");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int4 = type2.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        int int12 = value10.getSize();
        int int13 = value10.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter14 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type15 = null;
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter14.newValue(type15);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter18 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter18.ternaryOperation(abstractInsnNode19, value24, value30, value36);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter14.ternaryOperation(abstractInsnNode17, value30, value43, value47);
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier0.merge(value10, value48);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        java.util.List list51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value52 = basicVerifier0.naryOperation(abstractInsnNode50, list51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 87 + "'", int4 == 87);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNull(value38);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNull(value48);
        org.junit.Assert.assertNotNull(value49);
    }

    @Test
    public void test11773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11773");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("Z");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value23);
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter5.ternaryOperation(abstractInsnNode6, value11, value17, value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value30);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSort();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type36, type39, type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter32.newValue(type34);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter5.merge(value30, value43);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter45 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type46 = null;
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter45.newValue(type46);
        int int48 = value47.getSize();
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter4.merge(value30, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("g.mockito.asm.Type", (java.lang.Object) "Z", value30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("g/mockito/asm/Type", (java.lang.Throwable) analyzerException50);
        java.lang.Throwable throwable54 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable54);
        java.lang.Throwable[] throwableArray56 = analyzerException55.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException55.addSuppressed((java.lang.Throwable) analyzerException59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J");
        analyzerException59.addSuppressed((java.lang.Throwable) analyzerException62);
        java.lang.Throwable throwable67 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable67);
        java.lang.Throwable[] throwableArray69 = analyzerException68.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException68.addSuppressed((java.lang.Throwable) analyzerException72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J");
        analyzerException72.addSuppressed((java.lang.Throwable) analyzerException75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Throwable) analyzerException75);
        analyzerException59.addSuppressed((java.lang.Throwable) analyzerException75);
        java.lang.Throwable[] throwableArray79 = analyzerException59.getSuppressed();
        analyzerException51.addSuppressed((java.lang.Throwable) analyzerException59);
        java.lang.Class<?> wildcardClass81 = analyzerException51.getClass();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(VVI)J" + "'", str42, "(VVI)J");
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test11774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11774");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str42 = type41.getInternalName();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.toString();
        int int45 = type43.getSort();
        java.lang.String str46 = type43.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str52 = type51.toString();
        int int53 = type51.getSort();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type51, type54, type55 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter47.newValue(type49);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean62 = type60.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.String str69 = type66.toString();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type49, type59, type60, type64, type66, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray71);
        int int73 = type43.getSort();
        int int74 = type43.getSort();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str77 = type76.getClassName();
        org.mockito.asm.Type[] typeArray79 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray79);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray79);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray79);
        int int83 = type41.getDimensions();
        java.lang.String str84 = type41.getClassName();
        java.lang.String str85 = type41.getClassName();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str42, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "V" + "'", str52, "V");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(VVI)J" + "'", str57, "(VVI)J");
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(JDCJCI)V" + "'", str72, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "void" + "'", str77, "void");
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(I)V" + "'", str80, "(I)V");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(I)V" + "'", str81, "(I)V");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str82, "(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.mockito.asm.tree.analysis.BasicValue" + "'", str84, "org.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.mockito.asm.tree.analysis.BasicValue" + "'", str85, "org.mockito.asm.tree.analysis.BasicValue");
    }

    @Test
    public void test11775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11775");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean2 = type0.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass3 = type0.getClass();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        java.lang.String str5 = type4.toString();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str12 = type11.toString();
        int int13 = type11.getSort();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type11, type14, type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type25 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type21, type24, type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray26);
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray26);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray26);
        org.mockito.asm.Type type31 = type4.getElementType();
        org.mockito.asm.Type type32 = type4.getElementType();
        java.lang.String str33 = type4.getInternalName();
        java.lang.String str34 = type4.getInternalName();
        int int35 = type4.getSize();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean39 = type37.equals((java.lang.Object) 88);
        int int40 = type37.getSort();
        org.mockito.asm.Type type41 = type37.getElementType();
        java.lang.Class<?> wildcardClass42 = type41.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        int int45 = type44.getSize();
        boolean boolean46 = type4.equals((java.lang.Object) type44);
        int int47 = type44.getSort();
        org.mockito.asm.Type type48 = type44.getElementType();
        int int49 = type48.getSort();
        java.lang.String str50 = type48.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "char" + "'", str7, "char");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(VVI)J" + "'", str17, "(VVI)J");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(VVI)J" + "'", str27, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VVI)J" + "'", str28, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(VVI)C" + "'", str29, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str30, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/asm/Type" + "'", str33, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/Type" + "'", str34, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "g.mockito.asm.Type" + "'", str50, "g.mockito.asm.Type");
    }

    @Test
    public void test11776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11776");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.Value value28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode27, value28);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value29);
    }

    @Test
    public void test11777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11777");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable5 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable5);
        java.lang.Throwable[] throwableArray7 = analyzerException6.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException6);
        analyzerException2.addSuppressed((java.lang.Throwable) analyzerException6);
        java.lang.Throwable[] throwableArray10 = analyzerException6.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)V", (java.lang.Throwable) analyzerException6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable16 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable16);
        java.lang.Throwable[] throwableArray18 = analyzerException17.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException17);
        analyzerException13.addSuppressed((java.lang.Throwable) analyzerException17);
        java.lang.Throwable[] throwableArray21 = analyzerException13.getSuppressed();
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException13);
        java.lang.Class<?> wildcardClass23 = analyzerException6.getClass();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        int int26 = type25.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        java.lang.Throwable[] throwableArray35 = analyzerException34.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException34);
        java.lang.Throwable throwable39 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable39);
        java.lang.Throwable[] throwableArray41 = analyzerException40.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException40.addSuppressed((java.lang.Throwable) analyzerException44);
        java.lang.Throwable throwable48 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException49);
        analyzerException44.addSuppressed((java.lang.Throwable) analyzerException50);
        java.lang.Throwable[] throwableArray52 = analyzerException44.getSuppressed();
        analyzerException36.addSuppressed((java.lang.Throwable) analyzerException44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("I", (java.lang.Throwable) analyzerException44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("B");
        analyzerException44.addSuppressed((java.lang.Throwable) analyzerException56);
        java.lang.Throwable[] throwableArray58 = analyzerException56.getSuppressed();
        boolean boolean59 = type25.equals((java.lang.Object) analyzerException56);
        int int60 = type25.getSort();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
    }

    @Test
    public void test11778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11778");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        java.lang.String str6 = type3.getDescriptor();
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean10 = type8.equals((java.lang.Object) 180);
        java.lang.String str11 = type8.toString();
        java.lang.String str12 = type8.getDescriptor();
        int int13 = type8.getSort();
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier2.newValue(type8);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int16 = type15.getSort();
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier2.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)L(I)V;", obj1, value17);
        java.lang.Throwable[] throwableArray19 = analyzerException18.getSuppressed();
        java.lang.Throwable[] throwableArray20 = analyzerException18.getSuppressed();
        java.lang.Class<?> wildcardClass21 = throwableArray20.getClass();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test11779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11779");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicVerifier");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter3.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter3.ternaryOperation(abstractInsnNode6, value19, value32, value36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: void: expected 171, but found .", (java.lang.Object) "org/mockito/asm/tree/analysis/BasicVerifier", value32);
        int int39 = value32.getSize();
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test11780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11780");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type45 = null;
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter44.newValue(type45);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter48.ternaryOperation(abstractInsnNode49, value54, value60, value66);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter44.ternaryOperation(abstractInsnNode47, value60, value73, value77);
        org.mockito.asm.tree.analysis.Value value79 = null;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier0.merge(value60, value79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean83 = type81.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier0.newValue(type81);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode85 = null;
        org.mockito.asm.tree.analysis.Value value86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value87 = basicVerifier0.copyOperation(abstractInsnNode85, value86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(value84);
    }

    @Test
    public void test11781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11781");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.Value value28 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter29.ternaryOperation(abstractInsnNode30, value35, value41, value47);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type51 = null;
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter50.newValue(type51);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter54 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value72);
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter54.ternaryOperation(abstractInsnNode55, value60, value66, value72);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter77 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type78 = null;
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter77.newValue(type78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter50.ternaryOperation(abstractInsnNode53, value66, value79, value83);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter50.newValue(type86);
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.ternaryOperation(abstractInsnNode27, value28, value35, value87);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter0.newValue(type90);
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getObjectType("(VVI)Z");
        java.lang.String str94 = type93.toString();
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter0.newValue(type93);
        java.lang.String str96 = type93.getDescriptor();
        int int98 = type93.getOpcode(93);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNull(value49);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNull(value74);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNull(value88);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "L(VVI)Z;" + "'", str94, "L(VVI)Z;");
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "L(VVI)Z;" + "'", str96, "L(VVI)Z;");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 97 + "'", int98 == 97);
    }

    @Test
    public void test11782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11782");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("L(JDCJCI)LC;;");
        java.lang.Throwable[] throwableArray3 = analyzerException2.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)V");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)B", (java.lang.Throwable) analyzerException6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray11 = analyzerException10.getSuppressed();
        java.lang.Throwable[] throwableArray12 = analyzerException10.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.toString();
        int int17 = type15.getSort();
        java.lang.String str18 = type15.getDescriptor();
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean22 = type20.equals((java.lang.Object) 180);
        java.lang.String str23 = type20.toString();
        java.lang.String str24 = type20.getDescriptor();
        int int25 = type20.getSort();
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier14.newValue(type20);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int28 = type27.getSort();
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier14.newValue(type27);
        java.lang.String str30 = type27.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type32 = null;
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter31.newValue(type32);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode34 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode36 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter35.ternaryOperation(abstractInsnNode36, value41, value47, value53);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter31.ternaryOperation(abstractInsnNode34, value47, value60, value64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter31.newValue(type67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue", (java.lang.Object) type27, value68);
        analyzerException10.addSuppressed((java.lang.Throwable) analyzerException69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("Z", (java.lang.Throwable) analyzerException69);
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException69);
        analyzerException2.addSuppressed((java.lang.Throwable) analyzerException69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (I)Lmockito/asm/Type;", (java.lang.Throwable) analyzerException69);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "C" + "'", str24, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Z" + "'", str30, "Z");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test11783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11783");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean2 = type0.equals((java.lang.Object) 180);
        int int3 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type5 = null;
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass8 = type7.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.tree.analysis.Value value10 = basicInterpreter4.newValue(type9);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type12 = null;
        org.mockito.asm.tree.analysis.Value value13 = basicInterpreter11.newValue(type12);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter15 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter15.ternaryOperation(abstractInsnNode16, value21, value27, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter38 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type39 = null;
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter11.ternaryOperation(abstractInsnNode14, value27, value40, value44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter11.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        int int50 = type49.getSort();
        java.lang.String str51 = type49.getDescriptor();
        java.lang.String str52 = type49.getDescriptor();
        int int53 = type49.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter11.newValue(type49);
        int int56 = type49.getOpcode(6);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter4.newValue(type49);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg/mockito/asm/tree/analysis/BasicValue;: expected byte, but found R");
        java.lang.String str60 = type59.getClassName();
        java.lang.String str61 = type59.getClassName();
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter4.newValue(type59);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getReturnType("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: void: expected 171, but found .;");
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter4.newValue(type64);
        boolean boolean66 = type0.equals((java.lang.Object) basicInterpreter4);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value35);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 6 + "'", int56 == 6);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "rg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.BasicValue" + "'", str60, "rg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "rg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.BasicValue" + "'", str61, "rg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test11784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11784");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        boolean boolean3 = type0.equals((java.lang.Object) 87);
        int int4 = type0.getSize();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type[] typeArray12 = org.mockito.asm.Type.getArgumentTypes("(VVI)L(I)Z;");
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray12);
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = type0.equals(obj15);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter17.ternaryOperation(abstractInsnNode18, value23, value29, value35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str39 = type38.toString();
        int int40 = type38.getSort();
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter17.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter43.newValue(type44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter17.copyOperation(abstractInsnNode42, value45);
        int int47 = value45.getSize();
        java.lang.Class<?> wildcardClass48 = value45.getClass();
        boolean boolean49 = type0.equals((java.lang.Object) value45);
        org.mockito.asm.Type[] typeArray51 = org.mockito.asm.Type.getArgumentTypes("()LLorg.mockito.asm.tree.analysis.AnalyzerException: (I)L(I)V;;;");
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray51);
        int int54 = type0.getOpcode(1028);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str13, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(VVI)V" + "'", str14, "(VVI)V");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(value41);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "()V" + "'", str52, "()V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1033 + "'", int54 == 1033);
    }

    @Test
    public void test11785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11785");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean46 = type44.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass47 = type44.getClass();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        java.lang.String str49 = type48.toString();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        int int57 = type55.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type55, type58, type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str66 = type65.toString();
        int int67 = type65.getSort();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type65, type68, type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray70);
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray70);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray70);
        org.mockito.asm.Type type75 = type48.getElementType();
        org.mockito.asm.Type type76 = type48.getElementType();
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier0.newValue(type48);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean80 = type78.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass81 = type78.getClass();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass81);
        java.lang.Class<?> wildcardClass83 = type82.getClass();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        int int85 = type84.getSort();
        int int86 = type84.getDimensions();
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier0.newValue(type84);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass89 = type88.getClass();
        java.lang.String str90 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass89);
        java.lang.String str91 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass89);
        java.lang.String str92 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass89);
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        org.mockito.asm.tree.analysis.Value value94 = basicVerifier0.newValue(type93);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "char" + "'", str51, "char");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)J" + "'", str61, "(VVI)J");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)J" + "'", str71, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)C" + "'", str73, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str74, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str90, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org/mockito/asm/Type" + "'", str91, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org/mockito/asm/Type" + "'", str92, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(value94);
    }

    @Test
    public void test11786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11786");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str3 = type2.toString();
        int int4 = type2.getSort();
        java.lang.String str5 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean9 = type7.equals((java.lang.Object) 180);
        java.lang.String str10 = type7.toString();
        java.lang.String str11 = type7.getDescriptor();
        int int12 = type7.getSort();
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier1.newValue(type7);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int15 = type14.getSort();
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier1.newValue(type14);
        java.lang.String str17 = type14.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter18 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type19 = null;
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter18.newValue(type19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter45 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type46 = null;
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter18.ternaryOperation(abstractInsnNode21, value34, value47, value51);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter18.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue", (java.lang.Object) type14, value55);
        java.lang.Throwable[] throwableArray57 = analyzerException56.getSuppressed();
        java.lang.Throwable[] throwableArray58 = analyzerException56.getSuppressed();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Z" + "'", str17, "Z");
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test11787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11787");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("(JDCJCI)C");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Throwable) analyzerException2);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)V");
        java.lang.Throwable[] throwableArray6 = analyzerException5.getSuppressed();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter9.ternaryOperation(abstractInsnNode10, value15, value21, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode32 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter31.ternaryOperation(abstractInsnNode32, value37, value43, value49);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter52 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value64);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter52.ternaryOperation(abstractInsnNode53, value58, value64, value70);
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier30.merge(value37, value72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter9.merge(value73, value76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("void", (java.lang.Object) 171, value77);
        java.lang.Throwable throwable80 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", throwable80);
        java.lang.Throwable throwable85 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException86);
        java.lang.Throwable throwable90 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException91);
        analyzerException86.addSuppressed((java.lang.Throwable) analyzerException91);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Throwable) analyzerException86);
        analyzerException81.addSuppressed((java.lang.Throwable) analyzerException86);
        analyzerException78.addSuppressed((java.lang.Throwable) analyzerException86);
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException78);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException78);
        java.lang.Class<?> wildcardClass99 = analyzerException78.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNull(value72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test11788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11788");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("LLorg/mockito/asm/tree/analysis/BasicValue;;");
        int int2 = type1.getSort();
        org.mockito.asm.Type type3 = type1.getElementType();
        org.mockito.asm.Type type4 = type1.getElementType();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType("(VVI)Lorg/mockito/asm/Type;");
        int int7 = type6.getSort();
        int int8 = type6.getDimensions();
        org.mockito.asm.Type[] typeArray10 = org.mockito.asm.Type.getArgumentTypes("(I)Lorg/mockito/asm/Type;");
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray10);
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray10);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.toString();
        int int21 = type19.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type19, type22, type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str30 = type29.toString();
        int int31 = type29.getSort();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type29, type32, type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray34);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray34);
        int int38 = type14.getSize();
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.toString();
        int int45 = type43.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type43, type46, type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        java.lang.Class<?> wildcardClass50 = typeArray48.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter13.newValue(type52);
        int int54 = type52.getSize();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int57 = type56.getDimensions();
        org.mockito.asm.Type type58 = type56.getElementType();
        boolean boolean59 = type52.equals((java.lang.Object) type56);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getReturnType("Z");
        java.lang.String str62 = type61.toString();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: F");
        int int65 = type64.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        int int69 = type67.getSort();
        boolean boolean71 = type67.equals((java.lang.Object) (-1.0d));
        int int72 = type67.getSort();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str75 = type74.getClassName();
        org.mockito.asm.Type[] typeArray77 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray77);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray77);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray77);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray77);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray77);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray77);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(I)LVVI)Lorg/mockito/asm/Type;" + "'", str11, "(I)LVVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(I)Lrg/mockito/asm/tree/analysis/BasicValue;" + "'", str12, "(I)Lrg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "char" + "'", str15, "char");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VVI)J" + "'", str25, "(VVI)J");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VVI)J" + "'", str35, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VVI)J" + "'", str36, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)C" + "'", str37, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VVI)J" + "'", str49, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str51, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Z" + "'", str62, "Z");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 7 + "'", int69 == 7);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 7 + "'", int72 == 7);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "void" + "'", str75, "void");
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(I)V" + "'", str78, "(I)V");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(I)J" + "'", str79, "(I)J");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(I)Lorg.mockito.asm.tree.analysis.AnalyzerException: F;" + "'", str80, "(I)Lorg.mockito.asm.tree.analysis.AnalyzerException: F;");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(I)Z" + "'", str81, "(I)Z");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(I)[Lorg/mockito/asm/Type;" + "'", str82, "(I)[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(I)Lrg/mockito/asm/tree/analysis/BasicValue;" + "'", str83, "(I)Lrg/mockito/asm/tree/analysis/BasicValue;");
    }

    @Test
    public void test11789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11789");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray4 = analyzerException3.getSuppressed();
        java.lang.Throwable[] throwableArray5 = analyzerException3.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException3);
        java.lang.Throwable[] throwableArray7 = analyzerException6.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("LLorg/mockito/asm/Type;;", (java.lang.Throwable) analyzerException6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J: expected C, but found J");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter14 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter14.ternaryOperation(abstractInsnNode15, value20, value26, value32);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter14.newValue(type35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        int int40 = type38.getSize();
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter14.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type48, type51, type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter44.newValue(type46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter44, value58);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass63 = type62.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter44.newValue(type65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter14.copyOperation(abstractInsnNode42, value66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J", (java.lang.Object) type13, value67);
        java.lang.Throwable[] throwableArray69 = analyzerException68.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("Lckito/asm/Type;", (java.lang.Throwable) analyzerException68);
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException71);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VVI)J" + "'", str54, "(VVI)J");
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org/mockito/asm/Type" + "'", str64, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(throwableArray69);
    }

    @Test
    public void test11790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11790");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        int int1 = type0.getSort();
        java.lang.String str2 = type0.getDescriptor();
        java.lang.String str3 = type0.getDescriptor();
        int int4 = type0.getSort();
        java.lang.String str5 = type0.getDescriptor();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("C");
        int int8 = type7.getSort();
        java.lang.String str9 = type7.getInternalName();
        java.lang.String str10 = type7.toString();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str12 = type11.toString();
        int int13 = type11.getSort();
        java.lang.String str14 = type11.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter15 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.toString();
        int int21 = type19.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type19, type22, type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter15.newValue(type17);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean30 = type28.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean36 = type34.equals((java.lang.Object) 180);
        java.lang.String str37 = type34.toString();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type17, type27, type28, type32, type34, type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray39);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray39);
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray39);
        int int43 = type0.getSize();
        java.lang.String str44 = type0.getDescriptor();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "C" + "'", str2, "C");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "C" + "'", str3, "C");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "C" + "'", str5, "C");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LC;" + "'", str10, "LC;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VVI)J" + "'", str25, "(VVI)J");
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "C" + "'", str37, "C");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(JDCJCI)V" + "'", str40, "(JDCJCI)V");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(JDCJCI)LC;" + "'", str41, "(JDCJCI)LC;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(JDCJCI)C" + "'", str42, "(JDCJCI)C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
    }

    @Test
    public void test11791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11791");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        boolean boolean5 = type1.equals((java.lang.Object) (-1.0d));
        java.lang.Class<?> wildcardClass6 = type1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str8 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 7 + "'", int3 == 7);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/Type" + "'", str8, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str11, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11792");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray22 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type25 = null;
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter24.newValue(type25);
        int int27 = value26.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str23, value26);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode17, value26);
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode32 = null;
        org.mockito.asm.tree.analysis.Value value33 = null;
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.copyOperation(abstractInsnNode32, value33);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value36 = basicInterpreter0.newOperation(abstractInsnNode35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(I)Lchar;" + "'", str23, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNull(value34);
    }

    @Test
    public void test11793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11793");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean29 = type27.equals((java.lang.Object) 180);
        java.lang.String str30 = type27.toString();
        int int31 = type27.getSort();
        java.lang.String str32 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter0.newValue(type27);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode34 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type36 = null;
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean40 = type38.equals((java.lang.Object) 180);
        java.lang.String str41 = type38.toString();
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter35.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        int int49 = value48.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value48);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter35.copyOperation(abstractInsnNode43, value48);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode52 = null;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray57 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray57);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter59 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type60 = null;
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter59.newValue(type60);
        int int62 = value61.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str58, value61);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter35.copyOperation(abstractInsnNode52, value61);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.copyOperation(abstractInsnNode34, value61);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getObjectType("(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter0.newValue(type67);
        java.lang.String str69 = type67.toString();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(I)Lchar;" + "'", str58, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;;" + "'", str69, "L(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;;");
    }

    @Test
    public void test11794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11794");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = null;
        boolean boolean43 = type41.equals(obj42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray47);
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray47);
        org.mockito.asm.Type type50 = type41.getElementType();
        java.lang.String str51 = type50.getInternalName();
        org.mockito.asm.Type type52 = type50.getElementType();
        java.lang.String str53 = type50.toString();
        org.mockito.asm.Type type54 = type50.getElementType();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(I)V" + "'", str48, "(I)V");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str49, "(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "g/mockito/asm/tree/analysis/BasicValue" + "'", str51, "g/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lg/mockito/asm/tree/analysis/BasicValue;" + "'", str53, "Lg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type54);
    }

    @Test
    public void test11795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11795");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean2 = type0.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass3 = type0.getClass();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        int int10 = type9.getDimensions();
        java.lang.String str11 = type9.getDescriptor();
        org.mockito.asm.Type type12 = type9.getElementType();
        int int13 = type12.getSize();
        java.lang.String str14 = type12.getInternalName();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.toString();
        int int17 = type15.getSort();
        java.lang.String str18 = type15.getClassName();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str21 = type20.toString();
        int int22 = type20.getSort();
        java.lang.String str23 = type20.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        int int30 = type28.getSort();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type28, type31, type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter24.newValue(type26);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean39 = type37.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean45 = type43.equals((java.lang.Object) 180);
        java.lang.String str46 = type43.toString();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type26, type36, type37, type41, type43, type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type53, type56, type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.toString();
        int int65 = type63.getSort();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type63, type66, type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray68);
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray68);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray68);
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray68);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray68);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/Type" + "'", str6, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str11, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "g/mockito/asm/Type" + "'", str14, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "void" + "'", str18, "void");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "V" + "'", str21, "V");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "V" + "'", str23, "V");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VVI)J" + "'", str34, "(VVI)J");
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "C" + "'", str46, "C");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(JDCJCI)V" + "'", str49, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(VVI)J" + "'", str69, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VVI)J" + "'", str70, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)V" + "'", str71, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)I" + "'", str72, "(VVI)I");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)V" + "'", str73, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)Lg/mockito/asm/Type;" + "'", str74, "(VVI)Lg/mockito/asm/Type;");
    }

    @Test
    public void test11796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11796");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        java.lang.String str49 = type46.getDescriptor();
        java.lang.String str50 = type46.getDescriptor();
        int int52 = type46.getOpcode(0);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "C" + "'", str49, "C");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "C" + "'", str50, "C");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test11797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11797");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass31 = type30.getClass();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        int int33 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type32);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str38 = type37.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.toString();
        int int44 = type42.getSort();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type42, type45, type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type52, type55, type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray57);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray57);
        int int61 = type37.getSize();
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type66, type69, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        java.lang.Class<?> wildcardClass73 = typeArray71.getClass();
        java.lang.String str74 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter36.newValue(type75);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter0.copyOperation(abstractInsnNode35, value76);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode78 = null;
        org.mockito.asm.tree.analysis.Value value79 = null;
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter0.copyOperation(abstractInsnNode78, value79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass82 = type81.getClass();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        int int84 = type83.getDimensions();
        int int85 = type83.getSort();
        java.lang.Class<?> wildcardClass86 = type83.getClass();
        java.lang.String str87 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass86);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter0.newValue(type89);
        org.mockito.asm.Type type91 = null;
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter0.newValue(type91);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode93 = null;
        java.util.List list94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value95 = basicInterpreter0.naryOperation(abstractInsnNode93, list94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "char" + "'", str38, "char");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(VVI)J" + "'", str48, "(VVI)J");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)J" + "'", str58, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)C" + "'", str60, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str74, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str87, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test11798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11798");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean29 = type27.equals((java.lang.Object) 180);
        java.lang.String str30 = type27.toString();
        int int31 = type27.getSort();
        java.lang.String str32 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter0.newValue(type27);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType("L(I)V;");
        java.lang.String str36 = type35.getClassName();
        org.mockito.asm.Type type37 = type35.getElementType();
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter0.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass40 = type39.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        int int42 = type41.getDimensions();
        int int43 = type41.getSort();
        java.lang.String str44 = type41.getDescriptor();
        java.lang.String str45 = type41.getClassName();
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter0.newValue(type41);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass50 = type49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type54 = type53.getElementType();
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier48.newValue(type54);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType("(I)LVVI)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier48.newValue(type57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str63 = type62.toString();
        int int64 = type62.getSort();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type62, type65, type66 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str73 = type72.toString();
        int int74 = type72.getSort();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type72, type75, type76 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray77);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray77);
        int int81 = type60.getOpcode((int) 'a');
        java.lang.String str82 = type60.getClassName();
        int int83 = type60.getSort();
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier48.newValue(type60);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value85 = basicInterpreter0.unaryOperation(abstractInsnNode47, value84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(I)V" + "'", str36, "(I)V");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str44, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.mockito.asm.Type" + "'", str45, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str51, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VVI)J" + "'", str68, "(VVI)J");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "V" + "'", str73, "V");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VVI)J" + "'", str78, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(VVI)J" + "'", str79, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 98 + "'", int81 == 98);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "long" + "'", str82, "long");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 7 + "'", int83 == 7);
        org.junit.Assert.assertNotNull(value84);
    }

    @Test
    public void test11799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11799");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type29 = type28.getElementType();
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter0.newValue(type28);
        int int31 = type28.getSort();
        java.lang.String str32 = type28.toString();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str32, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
    }

    @Test
    public void test11800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11800");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter3.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter3.ternaryOperation(abstractInsnNode6, value19, value32, value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter44.ternaryOperation(abstractInsnNode45, value50, value56, value62);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value32, value42, value62);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass69 = type66.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        java.lang.String str71 = type70.toString();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter1.newValue(type70);
        int int73 = type70.getSize();
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter0.newValue(type70);
        org.mockito.asm.Type type75 = type70.getElementType();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        int int77 = type76.getSort();
        java.lang.String str78 = type76.getDescriptor();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType("(VVI)Lorg/mockito/asm/Type;");
        java.lang.String str81 = type80.getInternalName();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str83 = type82.toString();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray85 = new org.mockito.asm.Type[] { type84 };
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray85);
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type80, typeArray85);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray85);
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type75, typeArray85);
        java.lang.Class<?> wildcardClass90 = type75.getClass();
        java.lang.String str91 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass90);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str71, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "C" + "'", str78, "C");
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "VVI)Lorg/mockito/asm/Type" + "'", str81, "VVI)Lorg/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "V" + "'", str83, "V");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(I)V" + "'", str86, "(I)V");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(I)LVVI)Lorg/mockito/asm/Type;" + "'", str87, "(I)LVVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(I)C" + "'", str88, "(I)C");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(I)Lg/mockito/asm/Type;" + "'", str89, "(I)Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str91, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11801");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        boolean boolean5 = type1.equals((java.lang.Object) (-1.0d));
        java.lang.Class<?> wildcardClass6 = type1.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 7 + "'", int3 == 7);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
    }

    @Test
    public void test11802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11802");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass1 = type0.getClass();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        int int3 = type2.getDimensions();
        org.mockito.asm.Type type4 = type2.getElementType();
        java.lang.String str5 = type4.getInternalName();
        org.mockito.asm.Type type6 = type4.getElementType();
        int int7 = type6.getSize();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = type11.getSort();
        boolean boolean15 = type11.equals((java.lang.Object) (-1.0d));
        int int16 = type11.getSort();
        java.lang.String str17 = type11.getClassName();
        java.lang.String str18 = type11.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("B");
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type23 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        java.lang.String str27 = type24.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type32, type35, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter28.newValue(type30);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean43 = type41.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean49 = type47.equals((java.lang.Object) 180);
        java.lang.String str50 = type47.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type30, type40, type41, type45, type47, type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str58 = type57.toString();
        int int59 = type57.getSort();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type57, type60, type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str68 = type67.toString();
        int int69 = type67.getSort();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type67, type70, type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray72);
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray72);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray72);
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray72);
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray72);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray72);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray72);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray72);
        java.lang.Class<?> wildcardClass82 = type6.getClass();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "g/mockito/asm/Type" + "'", str5, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7 + "'", int16 == 7);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "long" + "'", str17, "long");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "J" + "'", str18, "J");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)J" + "'", str38, "(VVI)J");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "C" + "'", str50, "C");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(JDCJCI)V" + "'", str53, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "V" + "'", str58, "V");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)J" + "'", str63, "(VVI)J");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "V" + "'", str68, "V");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)J" + "'", str73, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)J" + "'", str74, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(VVI)V" + "'", str75, "(VVI)V");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(VVI)I" + "'", str76, "(VVI)I");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(VVI)LLorg/mockito/asm/Type;;" + "'", str77, "(VVI)LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VVI)B" + "'", str78, "(VVI)B");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(VVI)J" + "'", str79, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str80, "(VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)Lmockito/asm/Type;" + "'", str81, "(VVI)Lmockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(type83);
    }

    @Test
    public void test11803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11803");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray5 = analyzerException4.getSuppressed();
        java.lang.Throwable[] throwableArray6 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("[Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray8 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter14 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter14.ternaryOperation(abstractInsnNode15, value20, value26, value32);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode36 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter35.ternaryOperation(abstractInsnNode36, value41, value47, value53);
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier13.merge(value20, value55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) "void", value55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Throwable) analyzerException57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: void: expected 171, but found .", (java.lang.Throwable) analyzerException57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray63 = analyzerException62.getSuppressed();
        java.lang.Throwable[] throwableArray64 = analyzerException62.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("[Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException62);
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException62);
        java.lang.Throwable[] throwableArray67 = analyzerException57.getSuppressed();
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Z");
        java.lang.Throwable throwable72 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable72);
        java.lang.Throwable[] throwableArray74 = analyzerException73.getSuppressed();
        analyzerException70.addSuppressed((java.lang.Throwable) analyzerException73);
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException73);
        java.lang.Throwable[] throwableArray77 = analyzerException73.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("LLorg/mockito/asm/tree/analysis/BasicValue;;", (java.lang.Throwable) analyzerException73);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException73);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test11804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11804");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int14 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.newValue(type13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter17.ternaryOperation(abstractInsnNode18, value23, value29, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type48, type51, type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter44.newValue(type46);
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter17.merge(value42, value55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode59 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value64);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter58.ternaryOperation(abstractInsnNode59, value64, value70, value76);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter17.copyOperation(abstractInsnNode57, value76);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BYTE_TYPE;
        int int81 = type80.getSize();
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter17.newValue(type80);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getObjectType("(I)V");
        java.lang.String str85 = type84.getClassName();
        java.lang.Class<?> wildcardClass86 = type84.getClass();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        java.lang.String str88 = type87.getClassName();
        java.lang.String str89 = type87.getClassName();
        org.mockito.asm.Type type90 = type87.getElementType();
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter17.newValue(type87);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value92 = basicVerifier0.copyOperation(abstractInsnNode16, value91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VVI)J" + "'", str54, "(VVI)J");
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(I)V" + "'", str85, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org.mockito.asm.Type" + "'", str88, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org.mockito.asm.Type" + "'", str89, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test11805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11805");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        java.lang.Throwable throwable9 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable9);
        java.lang.Throwable[] throwableArray11 = analyzerException10.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException10.addSuppressed((java.lang.Throwable) analyzerException14);
        java.lang.Throwable throwable18 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException19);
        analyzerException14.addSuppressed((java.lang.Throwable) analyzerException20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)V", (java.lang.Throwable) analyzerException14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(JDCJCI)V", (java.lang.Throwable) analyzerException14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter25 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter25.ternaryOperation(abstractInsnNode26, value31, value37, value43);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter46 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value64);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter46.ternaryOperation(abstractInsnNode47, value52, value58, value64);
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier24.merge(value31, value66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) analyzerException14, value67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("L(I)F;", (java.lang.Throwable) analyzerException68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("LLorg.mockito.asm.tree.analysis.AnalyzerException: (JDCJCI)V;;", (java.lang.Throwable) analyzerException69);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException70);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNull(value66);
        org.junit.Assert.assertNotNull(value67);
    }

    @Test
    public void test11806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11806");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        java.lang.String str30 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str36 = type35.toString();
        int int37 = type35.getSort();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type35, type38, type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter31.newValue(type33);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean46 = type44.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean52 = type50.equals((java.lang.Object) 180);
        java.lang.String str53 = type50.toString();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type33, type43, type44, type48, type50, type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray55);
        int int57 = type27.getSort();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str61 = type60.toString();
        int int62 = type60.getSort();
        java.lang.String str63 = type60.getDescriptor();
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier59.newValue(type66);
        int int69 = type66.getOpcode(512);
        int int70 = type66.getSize();
        int int71 = type66.getDimensions();
        java.lang.String str72 = type66.getClassName();
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter0.newValue(type66);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode74 = null;
        java.util.List list75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.naryOperation(abstractInsnNode74, list75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(VVI)J" + "'", str41, "(VVI)J");
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "C" + "'", str53, "C");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(JDCJCI)V" + "'", str56, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "V" + "'", str61, "V");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 516 + "'", int69 == 516);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(I)Z" + "'", str72, "(I)Z");
        org.junit.Assert.assertNotNull(value73);
    }

    @Test
    public void test11807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11807");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter0.newValue(type27);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.Value value30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter0.copyOperation(abstractInsnNode29, value30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        int int36 = type32.getOpcode(108);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass38 = type37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass38);
        java.lang.String str40 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass38);
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass38);
        boolean boolean44 = type32.equals((java.lang.Object) wildcardClass38);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type46 = type45.getElementType();
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter0.newValue(type46);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        java.util.List list49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value50 = basicInterpreter0.naryOperation(abstractInsnNode48, list49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 113 + "'", int36 == 113);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str39, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str40, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/Type" + "'", str41, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
    }

    @Test
    public void test11808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11808");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        java.lang.String str6 = type3.getDescriptor();
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean10 = type8.equals((java.lang.Object) 180);
        java.lang.String str11 = type8.toString();
        java.lang.String str12 = type8.getDescriptor();
        int int13 = type8.getSort();
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier2.newValue(type8);
        java.lang.Throwable throwable17 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable17);
        java.lang.Throwable[] throwableArray19 = analyzerException18.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException22);
        java.lang.Throwable throwable26 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException27);
        analyzerException22.addSuppressed((java.lang.Throwable) analyzerException28);
        java.lang.Class<?> wildcardClass30 = analyzerException22.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier2.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;", obj1, value33);
        java.lang.Throwable[] throwableArray35 = analyzerException34.getSuppressed();
        java.lang.String str36 = analyzerException34.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str31, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;: expected null, but found R" + "'", str36, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;: expected null, but found R");
    }

    @Test
    public void test11809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11809");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.Value value4 = basicInterpreter2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean7 = type5.equals((java.lang.Object) 180);
        java.lang.String str8 = type5.toString();
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter2.newValue(type5);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value15);
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter2.copyOperation(abstractInsnNode10, value15);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getObjectType("C");
        int int21 = type20.getSort();
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.newValue(type20);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int26 = type24.getOpcode((int) (byte) 1);
        int int27 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter2.newValue(type24);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type31 = type30.getElementType();
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter2.newValue(type30);
        org.mockito.asm.Type type33 = null;
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter2.newValue(type33);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        java.lang.Object obj37 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter38 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type39 = null;
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter38.newValue(type39);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter42 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value60);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter42.ternaryOperation(abstractInsnNode43, value48, value54, value60);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter65 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type66 = null;
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter65.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter38.ternaryOperation(abstractInsnNode41, value54, value67, value71);
        int int73 = value71.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("ckito.asm.tree.analysis.BasicValue", obj37, value71);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter2.copyOperation(abstractInsnNode35, value71);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter2.newValue(type77);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: V: expected Lg/mockito/asm/Type;, but found I");
        int int81 = type80.getSize();
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter2.newValue(type80);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/BasicValue: expected Lorg/mockito/asm/Type;, but found I", (java.lang.Object) "(VVI)Lorg.mockito.asm.Type;", value82);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "C" + "'", str8, "C");
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNull(value62);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(value82);
    }

    @Test
    public void test11810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11810");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        int int12 = value10.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter14 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str16 = type15.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str21 = type20.toString();
        int int22 = type20.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type20, type23, type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str31 = type30.toString();
        int int32 = type30.getSort();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type30, type33, type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray35);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray35);
        int int39 = type15.getSize();
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str43 = type42.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.toString();
        int int49 = type47.getSort();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type47, type50, type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str58 = type57.toString();
        int int59 = type57.getSort();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type57, type60, type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray62);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray62);
        int int66 = type42.getSize();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) basicInterpreter14, value67);
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier0.merge(value10, value67);
        int int70 = value69.getSize();
        java.lang.Class<?> wildcardClass71 = value69.getClass();
        java.lang.String str72 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass71);
        java.lang.String str73 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass71);
        java.lang.String str74 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass71);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass71);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "char" + "'", str16, "char");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "V" + "'", str21, "V");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(VVI)J" + "'", str26, "(VVI)J");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "V" + "'", str31, "V");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VVI)J" + "'", str36, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)C" + "'", str38, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "char" + "'", str43, "char");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(VVI)J" + "'", str53, "(VVI)J");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "V" + "'", str58, "V");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)J" + "'", str63, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VVI)J" + "'", str64, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VVI)C" + "'", str65, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str72, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str73, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str74, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type75);
    }

    @Test
    public void test11811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11811");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean46 = type44.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass47 = type44.getClass();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        java.lang.String str49 = type48.toString();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        int int57 = type55.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type55, type58, type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str66 = type65.toString();
        int int67 = type65.getSort();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type65, type68, type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray70);
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray70);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray70);
        org.mockito.asm.Type type75 = type48.getElementType();
        org.mockito.asm.Type type76 = type48.getElementType();
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier0.newValue(type48);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/Type: expected C, but found J");
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier0.newValue(type79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J");
        java.lang.Throwable[] throwableArray83 = analyzerException82.getSuppressed();
        java.lang.Class<?> wildcardClass84 = analyzerException82.getClass();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass84);
        org.mockito.asm.Type type86 = type85.getElementType();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V: expected Lg/mockito/asm/Type;, but found I");
        boolean boolean89 = type86.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V: expected Lg/mockito/asm/Type;, but found I");
        org.mockito.asm.tree.analysis.Value value90 = basicVerifier0.newValue(type86);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value92 = basicVerifier0.newOperation(abstractInsnNode91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "char" + "'", str51, "char");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)J" + "'", str61, "(VVI)J");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)J" + "'", str71, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)C" + "'", str73, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str74, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(value90);
    }

    @Test
    public void test11812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11812");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable7 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable7);
        java.lang.Throwable[] throwableArray9 = analyzerException8.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException8);
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException8);
        java.lang.Throwable[] throwableArray12 = analyzerException8.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)V", (java.lang.Throwable) analyzerException8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J", (java.lang.Throwable) analyzerException8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)L(I)V;", (java.lang.Throwable) analyzerException14);
        java.lang.Throwable throwable17 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("LLorg/mockito/asm/Type;;", throwable17);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean22 = type20.equals((java.lang.Object) 88);
        java.lang.String str23 = type20.toString();
        boolean boolean25 = type20.equals((java.lang.Object) 0);
        java.lang.String str26 = type20.toString();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        java.lang.Throwable[] throwableArray35 = analyzerException34.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException34);
        java.lang.Throwable throwable39 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable39);
        java.lang.Throwable[] throwableArray41 = analyzerException40.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException40.addSuppressed((java.lang.Throwable) analyzerException44);
        java.lang.Throwable throwable48 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException49);
        analyzerException44.addSuppressed((java.lang.Throwable) analyzerException50);
        java.lang.Throwable[] throwableArray52 = analyzerException44.getSuppressed();
        analyzerException36.addSuppressed((java.lang.Throwable) analyzerException44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: char: expected char, but found I", (java.lang.Throwable) analyzerException36);
        boolean boolean55 = type20.equals((java.lang.Object) analyzerException54);
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("L(JDCJCI)LC;;");
        java.lang.Throwable[] throwableArray60 = analyzerException59.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException59);
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException59);
        analyzerException15.addSuppressed((java.lang.Throwable) analyzerException18);
        java.lang.Throwable[] throwableArray64 = analyzerException15.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L(I)V;" + "'", str23, "L(I)V;");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L(I)V;" + "'", str26, "L(I)V;");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray64);
    }

    @Test
    public void test11813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11813");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.newValue(type36);
        java.lang.Class<?> wildcardClass38 = type36.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        java.lang.String str40 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        java.lang.String str42 = type41.getDescriptor();
        int int43 = type41.getDimensions();
        int int44 = type41.getDimensions();
        java.lang.Class<?> wildcardClass45 = type41.getClass();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/Type" + "'", str39, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str40, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test11814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11814");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str42, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str43, "Lorg/mockito/asm/tree/analysis/BasicValue;");
    }

    @Test
    public void test11815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11815");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean3 = type1.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass4 = type1.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        java.lang.String str6 = type5.toString();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str8 = type7.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str13 = type12.toString();
        int int14 = type12.getSort();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type12, type15, type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str23 = type22.toString();
        int int24 = type22.getSort();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type22, type25, type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray27);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray27);
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray27);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray27);
        int int33 = type0.getSize();
        java.lang.Class<?> wildcardClass34 = type0.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        java.lang.String str37 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "char" + "'", str8, "char");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(VVI)J" + "'", str18, "(VVI)J");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "V" + "'", str23, "V");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VVI)J" + "'", str28, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(VVI)J" + "'", str29, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VVI)C" + "'", str30, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str31, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(VVI)B" + "'", str32, "(VVI)B");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/Type" + "'", str35, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/Type" + "'", str36, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str37, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11816");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str42 = type41.getInternalName();
        int int43 = type41.getDimensions();
        java.lang.String str44 = type41.getClassName();
        org.mockito.asm.Type type45 = type41.getElementType();
        java.lang.Class<?> wildcardClass46 = type41.getClass();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str42, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.mockito.asm.tree.analysis.BasicValue" + "'", str44, "org.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/asm/Type" + "'", str49, "org/mockito/asm/Type");
    }

    @Test
    public void test11817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11817");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean31 = type29.equals((java.lang.Object) 180);
        java.lang.String str32 = type29.toString();
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter26.newValue(type29);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode34 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        int int40 = value39.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value39);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter26.copyOperation(abstractInsnNode34, value39);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getObjectType("C");
        int int45 = type44.getSort();
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter26.newValue(type44);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int50 = type48.getOpcode((int) (byte) 1);
        int int51 = type48.getSize();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter26.newValue(type48);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type55 = type54.getElementType();
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter26.newValue(type54);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.copyOperation(abstractInsnNode25, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str60 = type59.toString();
        int int61 = type59.getSort();
        java.lang.String str62 = type59.getDescriptor();
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean66 = type64.equals((java.lang.Object) 180);
        java.lang.String str67 = type64.toString();
        java.lang.String str68 = type64.getDescriptor();
        int int69 = type64.getSort();
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier58.newValue(type64);
        java.lang.Throwable throwable73 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable73);
        java.lang.Throwable[] throwableArray75 = analyzerException74.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException74.addSuppressed((java.lang.Throwable) analyzerException78);
        java.lang.Throwable throwable82 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable82);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException83);
        analyzerException78.addSuppressed((java.lang.Throwable) analyzerException84);
        java.lang.Class<?> wildcardClass86 = analyzerException78.getClass();
        java.lang.String str87 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass86);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier58.newValue(type88);
        int int90 = type88.getSize();
        java.lang.String str91 = type88.toString();
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter0.newValue(type88);
        java.lang.Class<?> wildcardClass93 = basicInterpreter0.getClass();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "V" + "'", str60, "V");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "C" + "'", str67, "C");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "C" + "'", str68, "C");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str87, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str91, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test11818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11818");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter8.ternaryOperation(abstractInsnNode9, value14, value20, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str40 = type39.toString();
        int int41 = type39.getSort();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type39, type42, type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter35.newValue(type37);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter8.merge(value33, value46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean50 = type48.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass51 = type48.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter8.newValue(type52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type52);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean58 = type56.equals((java.lang.Object) 88);
        int int59 = type56.getSort();
        java.lang.Class<?> wildcardClass60 = type56.getClass();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.newValue(type61);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode63 = null;
        org.mockito.asm.tree.analysis.Value value64 = null;
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.copyOperation(abstractInsnNode63, value64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getObjectType("L(I)V;");
        org.mockito.asm.Type type68 = type67.getElementType();
        int int70 = type68.getOpcode(196658);
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter0.newValue(type68);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value73 = basicInterpreter0.newOperation(abstractInsnNode72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VVI)J" + "'", str45, "(VVI)J");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 196662 + "'", int70 == 196662);
        org.junit.Assert.assertNotNull(value71);
    }

    @Test
    public void test11819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11819");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.ternaryOperation(abstractInsnNode3, value8, value14, value20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter2.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = type26.getSize();
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter2.newValue(type26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode31 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value48);
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter30.ternaryOperation(abstractInsnNode31, value36, value42, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value55);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter57 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.toString();
        int int63 = type61.getSort();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type61, type64, type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter57.newValue(type59);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter30.merge(value55, value68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str71 = type70.toString();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter30.newValue(type70);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter30.newValue(type77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean81 = type79.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass82 = type79.getClass();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        int int85 = type83.getOpcode(0);
        java.lang.String str86 = type83.getInternalName();
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter30.newValue(type83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: char: expected L(I)V;, but found J", (java.lang.Object) value29, value87);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Throwable) analyzerException88);
        java.lang.Throwable[] throwableArray90 = analyzerException88.getSuppressed();
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNull(value50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VVI)J" + "'", str67, "(VVI)J");
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "V" + "'", str71, "V");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(I)V" + "'", str74, "(I)V");
        org.junit.Assert.assertNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 4 + "'", int85 == 4);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org/mockito/asm/Type" + "'", str86, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test11820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11820");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.Value value4 = basicInterpreter2.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter2.ternaryOperation(abstractInsnNode5, value18, value31, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value41);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter43.ternaryOperation(abstractInsnNode44, value49, value55, value61);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value31, value41, value61);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean67 = type65.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass68 = type65.getClass();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        java.lang.String str70 = type69.toString();
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter0.newValue(type69);
        java.lang.Class<?> wildcardClass72 = value71.getClass();
        java.lang.String str73 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass72);
        java.lang.String str74 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass72);
        java.lang.String str75 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass72);
        java.lang.String str76 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass72);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNull(value63);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str70, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str73, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str74, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str75, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str76, "Lorg/mockito/asm/tree/analysis/BasicValue;");
    }

    @Test
    public void test11821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11821");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        int int43 = type41.getOpcode(0);
        int int44 = type41.getSize();
        java.lang.String str45 = type41.toString();
        org.mockito.asm.Type type46 = type41.getElementType();
        java.lang.String str47 = type41.getClassName();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter48.ternaryOperation(abstractInsnNode49, value54, value60, value66);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str70 = type69.toString();
        int int71 = type69.getSort();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter48.newValue(type69);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode73 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter74 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type75 = null;
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter74.newValue(type75);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter48.copyOperation(abstractInsnNode73, value76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean80 = type78.equals((java.lang.Object) 180);
        java.lang.String str81 = type78.toString();
        java.lang.String str82 = type78.getDescriptor();
        int int83 = type78.getSort();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter48.newValue(type78);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getReturnType("(VVI)B");
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter48.newValue(type86);
        boolean boolean88 = type41.equals((java.lang.Object) value87);
        int int90 = type41.getOpcode(171);
        org.mockito.asm.Type type91 = type41.getElementType();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str45, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.mockito.asm.tree.analysis.BasicValue" + "'", str47, "org.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "V" + "'", str70, "V");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(value72);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "C" + "'", str82, "C");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 175 + "'", int90 == 175);
        org.junit.Assert.assertNotNull(type91);
    }

    @Test
    public void test11822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11822");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean51 = type49.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass52 = type49.getClass();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        int int55 = type53.getOpcode(0);
        java.lang.String str56 = type53.getInternalName();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.newValue(type53);
        int int59 = type53.getOpcode(81);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean62 = type60.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass63 = type60.getClass();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        int int66 = type64.getOpcode(0);
        int int67 = type64.getSort();
        boolean boolean68 = type53.equals((java.lang.Object) type64);
        int int69 = type64.getDimensions();
        int int70 = type64.getDimensions();
        int int71 = type64.getDimensions();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/Type" + "'", str56, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 85 + "'", int59 == 85);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
    }

    @Test
    public void test11823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11823");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass1 = type0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        int int5 = type4.getSort();
        java.lang.String str6 = type4.getDescriptor();
        org.mockito.asm.Type type7 = type4.getElementType();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter8.ternaryOperation(abstractInsnNode9, value14, value20, value26);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str30 = type29.toString();
        int int31 = type29.getSort();
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter8.newValue(type29);
        java.lang.Class<?> wildcardClass33 = type29.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        boolean boolean35 = type7.equals((java.lang.Object) wildcardClass33);
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        int int38 = type37.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str2, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(value32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/Type" + "'", str36, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
    }

    @Test
    public void test11824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11824");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        int int1 = type0.getSort();
        java.lang.Class<?> wildcardClass2 = type0.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str4 = type3.toString();
        java.lang.String str5 = type3.getClassName();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.lang.String str7 = type6.getDescriptor();
        java.lang.String str8 = type6.getInternalName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("int");
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type14 = null;
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter13.newValue(type14);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter17.ternaryOperation(abstractInsnNode18, value23, value29, value35);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter40 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type41 = null;
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter13.ternaryOperation(abstractInsnNode16, value29, value42, value46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter13.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        int int52 = type51.getSort();
        java.lang.String str53 = type51.getDescriptor();
        java.lang.String str54 = type51.getDescriptor();
        int int55 = type51.getSort();
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter13.newValue(type51);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getReturnType("Lg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter13.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str61 = type60.toString();
        int int62 = type60.getSort();
        java.lang.String str63 = type60.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter64 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.toString();
        int int70 = type68.getSort();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type68, type71, type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter64.newValue(type66);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean79 = type77.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean85 = type83.equals((java.lang.Object) 180);
        java.lang.String str86 = type83.toString();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray88 = new org.mockito.asm.Type[] { type66, type76, type77, type81, type83, type87 };
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray88);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray88);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray88);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray88);
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray88);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.mockito.asm.Type" + "'", str5, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lg/mockito/asm/Type;" + "'", str7, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "g/mockito/asm/Type" + "'", str8, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "C" + "'", str53, "C");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "C" + "'", str54, "C");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "V" + "'", str61, "V");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)J" + "'", str74, "(VVI)J");
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(JDCJCI)V" + "'", str89, "(JDCJCI)V");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(JDCJCI)Lg/mockito/asm/tree/analysis/BasicValue;" + "'", str90, "(JDCJCI)Lg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(JDCJCI)J" + "'", str91, "(JDCJCI)J");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(JDCJCI)Lint;" + "'", str92, "(JDCJCI)Lint;");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(JDCJCI)Lg/mockito/asm/Type;" + "'", str93, "(JDCJCI)Lg/mockito/asm/Type;");
    }

    @Test
    public void test11825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11825");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter3.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter3.ternaryOperation(abstractInsnNode6, value19, value32, value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter44.ternaryOperation(abstractInsnNode45, value50, value56, value62);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value32, value42, value62);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass69 = type66.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        java.lang.String str71 = type70.toString();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter1.newValue(type70);
        int int73 = type70.getSize();
        java.lang.String str74 = type70.getDescriptor();
        org.mockito.asm.Type type75 = type70.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str78 = type77.toString();
        int int79 = type77.getSort();
        java.lang.String str80 = type77.getDescriptor();
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean84 = type82.equals((java.lang.Object) 180);
        java.lang.String str85 = type82.toString();
        java.lang.String str86 = type82.getDescriptor();
        int int87 = type82.getSort();
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier76.newValue(type82);
        int int89 = value88.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) type75, value88);
        org.mockito.asm.Type type91 = type75.getElementType();
        java.lang.Class<?> wildcardClass92 = type91.getClass();
        java.lang.String str93 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass92);
        org.mockito.asm.Type type94 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass92);
        org.mockito.asm.Type type95 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass92);
        int int96 = type95.getDimensions();
        java.lang.String str97 = type95.getClassName();
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str71, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str74, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "V" + "'", str78, "V");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "V" + "'", str80, "V");
        org.junit.Assert.assertNull(value81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org/mockito/asm/Type" + "'", str93, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org.mockito.asm.Type" + "'", str97, "org.mockito.asm.Type");
    }

    @Test
    public void test11826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11826");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type4, type7, type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        java.lang.Class<?> wildcardClass11 = typeArray9.getClass();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter12 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value31);
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter13.ternaryOperation(abstractInsnNode14, value19, value25, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value38);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter40 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type44, type47, type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter40.newValue(type42);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter13.merge(value38, value51);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type54 = null;
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter53.newValue(type54);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter12.merge(value38, value55);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getReturnType("(VVI)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter12.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) wildcardClass11, value60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        java.lang.String str63 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        java.lang.String str64 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(VVI)J" + "'", str10, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNull(value33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str63, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str64, "[Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11827");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.toString();
        int int49 = type47.getSort();
        java.lang.String str50 = type47.getDescriptor();
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean54 = type52.equals((java.lang.Object) 180);
        java.lang.String str55 = type52.toString();
        java.lang.String str56 = type52.getDescriptor();
        int int57 = type52.getSort();
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier46.newValue(type52);
        java.lang.Throwable throwable61 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable61);
        java.lang.Throwable[] throwableArray63 = analyzerException62.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException62.addSuppressed((java.lang.Throwable) analyzerException66);
        java.lang.Throwable throwable70 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException71);
        analyzerException66.addSuppressed((java.lang.Throwable) analyzerException72);
        java.lang.Class<?> wildcardClass74 = analyzerException66.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier46.newValue(type76);
        java.lang.String str78 = type76.toString();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.newValue(type76);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass81 = type80.getClass();
        java.lang.String str82 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass81);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type83);
        java.lang.String str85 = type83.getClassName();
        java.lang.String str86 = type83.getClassName();
        int int87 = type83.getDimensions();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "C" + "'", str56, "C");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str75, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str78, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org/mockito/asm/Type" + "'", str82, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.mockito.asm.Type" + "'", str85, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.mockito.asm.Type" + "'", str86, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test11828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11828");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type4, type7, type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type2);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type14 = null;
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter13.newValue(type14);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode12, value15);
        java.lang.Throwable throwable20 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException21);
        java.lang.Throwable throwable25 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException26);
        analyzerException21.addSuppressed((java.lang.Throwable) analyzerException26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException26);
        java.lang.Class<?> wildcardClass30 = analyzerException26.getClass();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        int int35 = type33.getSort();
        boolean boolean37 = type33.equals((java.lang.Object) (-1.0d));
        int int38 = type33.getSort();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str41 = type40.getClassName();
        org.mockito.asm.Type[] typeArray43 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray43);
        int int46 = type33.getSize();
        boolean boolean47 = type31.equals((java.lang.Object) int46);
        java.lang.String str48 = type31.getClassName();
        int int50 = type31.getOpcode(173);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter0.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int56 = type54.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier52.newValue(type54);
        java.lang.String str58 = type54.toString();
        java.lang.String str59 = type54.toString();
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter0.newValue(type54);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(VVI)J" + "'", str10, "(VVI)J");
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 7 + "'", int35 == 7);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 7 + "'", int38 == 7);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "void" + "'", str41, "void");
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(I)J" + "'", str45, "(I)J");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException" + "'", str48, "org.mockito.asm.tree.analysis.AnalyzerException");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 177 + "'", int50 == 177);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 87 + "'", int56 == 87);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L(I)Z;" + "'", str58, "L(I)Z;");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L(I)Z;" + "'", str59, "L(I)Z;");
        org.junit.Assert.assertNotNull(value60);
    }

    @Test
    public void test11829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11829");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)I", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value32);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str39 = type38.toString();
        int int40 = type38.getSort();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type38, type41, type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter34.newValue(type36);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter7.merge(value32, value45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.toString();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter7.newValue(type47);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        int int54 = type53.getSort();
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter7.newValue(type53);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        int int57 = type56.getSort();
        java.lang.String str58 = type56.getDescriptor();
        java.lang.String str59 = type56.getDescriptor();
        int int60 = type56.getSort();
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter7.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("L(I)Z;", (java.lang.Object) analyzerException6, value61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Z");
        java.lang.Throwable throwable66 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable66);
        java.lang.Throwable[] throwableArray68 = analyzerException67.getSuppressed();
        analyzerException64.addSuppressed((java.lang.Throwable) analyzerException67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type");
        java.lang.Throwable[] throwableArray72 = analyzerException71.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException79);
        analyzerException71.addSuppressed((java.lang.Throwable) analyzerException79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J");
        analyzerException71.addSuppressed((java.lang.Throwable) analyzerException83);
        analyzerException67.addSuppressed((java.lang.Throwable) analyzerException83);
        analyzerException62.addSuppressed((java.lang.Throwable) analyzerException83);
        java.lang.Throwable[] throwableArray87 = analyzerException62.getSuppressed();
        java.lang.Class<?> wildcardClass88 = analyzerException62.getClass();
        java.lang.String str89 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass88);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(VVI)J" + "'", str44, "(VVI)J");
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(I)V" + "'", str51, "(I)V");
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str89, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test11830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11830");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.Value value28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode27, value28);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter34.ternaryOperation(abstractInsnNode35, value40, value46, value52);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter57 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type58 = null;
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter30.ternaryOperation(abstractInsnNode33, value46, value59, value63);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter30.newValue(type66);
        java.lang.String str68 = type66.toString();
        java.lang.String str69 = type66.toString();
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type66);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.toString();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray74);
        java.lang.Class<?> wildcardClass76 = type71.getClass();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        org.mockito.asm.Type type78 = type77.getElementType();
        org.mockito.asm.Type type79 = type78.getElementType();
        int int80 = type79.getDimensions();
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter0.newValue(type79);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getObjectType("(I)I");
        org.mockito.asm.Type type84 = type83.getElementType();
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter0.newValue(type84);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNull(value54);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "LLorg/mockito/asm/Type;;" + "'", str68, "LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "LLorg/mockito/asm/Type;;" + "'", str69, "LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(I)V" + "'", str75, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
    }

    @Test
    public void test11831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11831");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean32 = type30.equals((java.lang.Object) 180);
        java.lang.String str33 = type30.toString();
        java.lang.String str34 = type30.getDescriptor();
        int int35 = type30.getSort();
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter0.newValue(type30);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(VVI)B");
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.toString();
        int int44 = type42.getSort();
        java.lang.String str45 = type42.getDescriptor();
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type48 = null;
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter47.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value54);
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier41.merge(value49, value54);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass58 = type57.getClass();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        int int60 = type59.getSort();
        java.lang.String str61 = type59.toString();
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier41.newValue(type59);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter0.copyOperation(abstractInsnNode40, value62);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newOperation(abstractInsnNode64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertNull(value46);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str61, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value63);
    }

    @Test
    public void test11832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11832");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType("LC;");
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier0.newValue(type10);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: : expected (I)Lchar;, but found .");
        org.mockito.asm.Type type15 = type14.getElementType();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type17 = null;
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean21 = type19.equals((java.lang.Object) 180);
        java.lang.String str22 = type19.toString();
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter16.newValue(type19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        int int30 = value29.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value29);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter16.copyOperation(abstractInsnNode24, value29);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getObjectType("C");
        int int35 = type34.getSort();
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter16.newValue(type34);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type42 = type41.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int47 = type45.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier43.newValue(type45);
        int int49 = value48.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Object) type41, value48);
        java.lang.String str51 = type41.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int56 = type54.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier52.newValue(type54);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode59 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value64);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter58.ternaryOperation(abstractInsnNode59, value64, value70, value76);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter58.newValue(type79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        int int84 = type82.getSize();
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter58.newValue(type82);
        java.lang.Class<?> wildcardClass86 = basicInterpreter58.getClass();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier52.newValue(type88);
        org.mockito.asm.Type type90 = null;
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier52.newValue(type90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("Z", (java.lang.Object) type41, value91);
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter16.copyOperation(abstractInsnNode37, value91);
        boolean boolean94 = type14.equals((java.lang.Object) value91);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value95 = basicVerifier0.copyOperation(abstractInsnNode12, value91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "C" + "'", str22, "C");
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 87 + "'", int47 == 87);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str51, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 87 + "'", int56 == 87);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test11833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11833");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type7, type10, type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type17, type20, type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray22);
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray22);
        int int26 = type2.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter1.newValue(type2);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str30 = type29.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str35 = type34.toString();
        int int36 = type34.getSort();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type34, type37, type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type44, type47, type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray49);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray49);
        int int53 = type29.getSize();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) basicInterpreter1, value54);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean59 = type57.equals((java.lang.Object) 88);
        int int60 = type57.getSize();
        int int61 = type57.getSort();
        java.lang.String str62 = type57.getDescriptor();
        java.lang.String str63 = type57.getInternalName();
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter1.newValue(type57);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode65 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value70);
        int int72 = value70.getSize();
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter1.copyOperation(abstractInsnNode65, value70);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType("(I)LVVI)Lorg/mockito/asm/Type;");
        java.lang.String str76 = type75.getClassName();
        java.lang.String str77 = type75.toString();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter1.newValue(type75);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter1.newValue(type80);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "char" + "'", str3, "char");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(VVI)J" + "'", str13, "(VVI)J");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)J" + "'", str24, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VVI)C" + "'", str25, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "char" + "'", str30, "char");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "V" + "'", str35, "V");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(VVI)J" + "'", str40, "(VVI)J");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VVI)C" + "'", str52, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L(I)V;" + "'", str62, "L(I)V;");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(I)V" + "'", str63, "(I)V");
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "I)LVVI)Lorg.mockito.asm.Type" + "'", str76, "I)LVVI)Lorg.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "LI)LVVI)Lorg/mockito/asm/Type;" + "'", str77, "LI)LVVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
    }

    @Test
    public void test11834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11834");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode4 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter3.ternaryOperation(abstractInsnNode4, value9, value15, value21);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter24.ternaryOperation(abstractInsnNode25, value30, value36, value42);
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier2.merge(value9, value44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean48 = type46.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass49 = type46.getClass();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass49);
        java.lang.String str51 = type50.toString();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str53 = type52.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str58 = type57.toString();
        int int59 = type57.getSort();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type57, type60, type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str68 = type67.toString();
        int int69 = type67.getSort();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type67, type70, type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray72);
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray72);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray72);
        org.mockito.asm.Type type77 = type50.getElementType();
        org.mockito.asm.Type type78 = type50.getElementType();
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier2.newValue(type50);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;");
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier2.newValue(type81);
        int int83 = value82.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("", obj1, value82);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str51, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "char" + "'", str53, "char");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "V" + "'", str58, "V");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)J" + "'", str63, "(VVI)J");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "V" + "'", str68, "V");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)J" + "'", str73, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)J" + "'", str74, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(VVI)C" + "'", str75, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str76, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test11835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11835");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass1 = type0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        int int6 = type5.getSize();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType("[Lorg/mockito/asm/Type;");
        int int10 = type8.getOpcode(94);
        org.mockito.asm.Type type11 = type8.getElementType();
        int int13 = type8.getOpcode(107);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter14 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter14.ternaryOperation(abstractInsnNode15, value20, value26, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value39);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type45, type48, type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter41.newValue(type43);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter14.merge(value39, value52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.toString();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray57);
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter14.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.toString();
        int int63 = type61.getSort();
        java.lang.String str64 = type61.getDescriptor();
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.String str69 = type66.toString();
        java.lang.String str70 = type66.getDescriptor();
        int int71 = type66.getSort();
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier60.newValue(type66);
        java.lang.Throwable throwable75 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable75);
        java.lang.Throwable[] throwableArray77 = analyzerException76.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException76.addSuppressed((java.lang.Throwable) analyzerException80);
        java.lang.Throwable throwable84 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException85);
        analyzerException80.addSuppressed((java.lang.Throwable) analyzerException86);
        java.lang.Class<?> wildcardClass88 = analyzerException80.getClass();
        java.lang.String str89 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier60.newValue(type90);
        java.lang.String str92 = type90.toString();
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter14.newValue(type90);
        java.lang.String str94 = type90.getInternalName();
        org.mockito.asm.Type[] typeArray96 = org.mockito.asm.Type.getArgumentTypes("(VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        java.lang.String str97 = org.mockito.asm.Type.getMethodDescriptor(type90, typeArray96);
        java.lang.String str98 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray96);
        java.lang.String str99 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray96);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str2, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 98 + "'", int10 == 98);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 111 + "'", int13 == 111);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(I)V" + "'", str58, "(I)V");
        org.junit.Assert.assertNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "C" + "'", str70, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str89, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str92, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str94, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "(VVI)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str97, "(VVI)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "(VVI)[Lorg/mockito/asm/Type;" + "'", str98, "(VVI)[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str99, "(VVI)Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11836");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int13 = type11.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier9.newValue(type11);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter16.ternaryOperation(abstractInsnNode17, value22, value28, value34);
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier0.merge(value14, value34);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass39 = type38.getClass();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        int int41 = type40.getSort();
        java.lang.String str42 = type40.toString();
        java.lang.String str43 = type40.toString();
        java.lang.String str44 = type40.getClassName();
        java.lang.String str45 = type40.toString();
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier0.newValue(type40);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier0.newValue(type48);
        int int50 = type48.getSort();
        java.lang.String str51 = type48.getClassName();
        java.lang.String str52 = type48.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 87 + "'", int13 == 87);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.mockito.asm.Type" + "'", str44, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str45, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found ." + "'", str51, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;" + "'", str52, "Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;");
    }

    @Test
    public void test11837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11837");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("g/mockito/asm/Type", (java.lang.Throwable) analyzerException9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Throwable) analyzerException10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/BasicInterpreter", (java.lang.Throwable) analyzerException12);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
    }

    @Test
    public void test11838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11838");
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray6 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str7 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray6);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type9 = null;
        org.mockito.asm.tree.analysis.Value value10 = basicInterpreter8.newValue(type9);
        int int11 = value10.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str7, value10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("[Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException12);
        java.lang.Throwable[] throwableArray14 = analyzerException13.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException13);
        java.lang.Class<?> wildcardClass16 = analyzerException13.getClass();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(I)Lchar;" + "'", str7, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(type17);
    }

    @Test
    public void test11839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11839");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        boolean boolean22 = type1.equals((java.lang.Object) basicInterpreter10);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.String str26 = type23.toString();
        java.lang.String str27 = type23.getDescriptor();
        int int28 = type23.getSize();
        java.lang.String str29 = type23.getClassName();
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.newValue(type23);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode31 = null;
        org.mockito.asm.tree.analysis.Value value32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value33 = basicInterpreter10.unaryOperation(abstractInsnNode31, value32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "char" + "'", str29, "char");
        org.junit.Assert.assertNotNull(value30);
    }

    @Test
    public void test11840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11840");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray3 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str4 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray3);
        java.lang.Class<?> wildcardClass5 = type0.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        int int8 = type6.getOpcode(141);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray13 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray13);
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter16.ternaryOperation(abstractInsnNode17, value22, value28, value34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter16.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        int int42 = type40.getSize();
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter16.newValue(type40);
        java.lang.Class<?> wildcardClass44 = basicInterpreter16.getClass();
        boolean boolean45 = type6.equals((java.lang.Object) wildcardClass44);
        java.lang.String str46 = type6.getClassName();
        java.lang.String str47 = type6.getClassName();
        java.lang.String str48 = type6.getDescriptor();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(I)V" + "'", str4, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 145 + "'", int8 == 145);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "void" + "'", str11, "void");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(I)V" + "'", str14, "(I)V");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str15, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.mockito.asm.Type" + "'", str46, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.mockito.asm.Type" + "'", str47, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str48, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11841");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str12 = type11.toString();
        int int13 = type11.getSort();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type11, type14, type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter7.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter7, value21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass25 = type24.getClass();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass25);
        int int27 = type26.getSort();
        int int28 = type26.getSize();
        int int29 = type26.getDimensions();
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter7.newValue(type26);
        java.lang.String str31 = type26.toString();
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier0.newValue(type26);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type35 = type34.getElementType();
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier0.newValue(type34);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType("VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean43 = type41.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass44 = type41.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.toString();
        int int70 = type68.getSort();
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter47.newValue(type68);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)L(I)V;");
        org.mockito.asm.tree.analysis.Value value74 = basicInterpreter47.newValue(type73);
        int int75 = value74.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Object) type46, value74);
        boolean boolean77 = type39.equals((java.lang.Object) value74);
        int int78 = value74.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value79 = basicVerifier0.copyOperation(abstractInsnNode37, value74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(VVI)J" + "'", str17, "(VVI)J");
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str31, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/Type" + "'", str45, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(value71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test11842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11842");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value23);
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter5.ternaryOperation(abstractInsnNode6, value11, value17, value23);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter26.ternaryOperation(abstractInsnNode27, value32, value38, value44);
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier4.merge(value11, value46);
        int int48 = value47.getSize();
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter0.copyOperation(abstractInsnNode3, value47);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter0.newValue(type51);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.Value value54 = null;
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter0.copyOperation(abstractInsnNode53, value54);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        org.mockito.asm.tree.analysis.Value value57 = null;
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.copyOperation(abstractInsnNode56, value57);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode59 = null;
        java.util.List list60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value61 = basicInterpreter0.naryOperation(abstractInsnNode59, list60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNull(value25);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNull(value46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertNull(value58);
    }

    @Test
    public void test11843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11843");
        java.lang.Object obj2 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode4 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter3.ternaryOperation(abstractInsnNode4, value9, value15, value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value28);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str35 = type34.toString();
        int int36 = type34.getSort();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type34, type37, type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter30.newValue(type32);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter3.merge(value28, value41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.toString();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter3.newValue(type43);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter3.newValue(type49);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getReturnType("(I)V");
        int int53 = type52.getSize();
        int int54 = type52.getSize();
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter3.newValue(type52);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter60 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str65 = type64.toString();
        int int66 = type64.getSort();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type64, type67, type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray69);
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter60.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        int int75 = value74.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter60, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass78 = type77.getClass();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        int int80 = type79.getSort();
        int int81 = type79.getSize();
        int int82 = type79.getDimensions();
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter60.newValue(type79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("LC;", (java.lang.Object) "Lorg/mockito/asm/tree/analysis/BasicValue;", value83);
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter3.copyOperation(abstractInsnNode56, value83);
        org.mockito.asm.Type type86 = null;
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter3.newValue(type86);
        int int88 = value87.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("(JDCJCI)V", obj2, value87);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: S", (java.lang.Throwable) analyzerException89);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "V" + "'", str35, "V");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(VVI)J" + "'", str40, "(VVI)J");
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(I)V" + "'", str47, "(I)V");
        org.junit.Assert.assertNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "V" + "'", str65, "V");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VVI)J" + "'", str70, "(VVI)J");
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
    }

    @Test
    public void test11844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11844");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue");
        java.lang.Throwable[] throwableArray13 = analyzerException12.getSuppressed();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter15 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.toString();
        int int21 = type19.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type19, type22, type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter15.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        int int30 = value29.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter15, value29);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass34 = type33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter15.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;", (java.lang.Object) throwableArray13, value37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/Type;", (java.lang.Object) str9, value37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: S;", (java.lang.Throwable) analyzerException39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("LVVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;", (java.lang.Throwable) analyzerException39);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/Type" + "'", str6, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VVI)J" + "'", str25, "(VVI)J");
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/Type" + "'", str35, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
    }

    @Test
    public void test11845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11845");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        boolean boolean5 = type1.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str8 = type7.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str13 = type12.toString();
        int int14 = type12.getSort();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type12, type15, type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str23 = type22.toString();
        int int24 = type22.getSort();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type22, type25, type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray27);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray27);
        java.lang.String str31 = type7.getDescriptor();
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier0.newValue(type7);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type37 = null;
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value38);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value40 = basicVerifier0.copyOperation(abstractInsnNode33, value38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "char" + "'", str8, "char");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(VVI)J" + "'", str18, "(VVI)J");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "V" + "'", str23, "V");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VVI)J" + "'", str28, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(VVI)J" + "'", str29, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VVI)C" + "'", str30, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(value38);
    }

    @Test
    public void test11846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11846");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        int int44 = type43.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str41, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
    }

    @Test
    public void test11847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11847");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(I)Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;");
        java.lang.Throwable throwable10 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException11);
        java.lang.Throwable throwable15 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException16);
        analyzerException11.addSuppressed((java.lang.Throwable) analyzerException16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Throwable) analyzerException11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Throwable) analyzerException19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter23 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value41);
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter23.ternaryOperation(abstractInsnNode24, value29, value35, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value48);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.toString();
        int int56 = type54.getSort();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type54, type57, type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter50.newValue(type52);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter23.merge(value48, value61);
        int int63 = value62.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) analyzerException22, value62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException22);
        boolean boolean66 = type1.equals((java.lang.Object) analyzerException22);
        int int67 = type1.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)J" + "'", str60, "(VVI)J");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test11848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11848");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("C");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.ternaryOperation(abstractInsnNode3, value8, value14, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value27);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type33, type36, type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter29.newValue(type31);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter2.merge(value27, value40);
        java.lang.Class<?> wildcardClass42 = value40.getClass();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        java.lang.String str44 = type43.getInternalName();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        java.lang.String str48 = type45.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type53, type56, type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter49.newValue(type51);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean64 = type62.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean70 = type68.equals((java.lang.Object) 180);
        java.lang.String str71 = type68.toString();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type51, type61, type62, type66, type68, type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray73);
        int int75 = type45.getSort();
        int int76 = type45.getSort();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str79 = type78.getClassName();
        org.mockito.asm.Type[] typeArray81 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type78, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray81);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray81);
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray81);
        java.lang.String str86 = type1.toString();
        int int88 = type1.getOpcode(173);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNull(value22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)J" + "'", str39, "(VVI)J");
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str44, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "C" + "'", str71, "C");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(JDCJCI)V" + "'", str74, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "void" + "'", str79, "void");
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(I)V" + "'", str82, "(I)V");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(I)V" + "'", str83, "(I)V");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str84, "(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(I)C" + "'", str85, "(I)C");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 173 + "'", int88 == 173);
    }

    @Test
    public void test11849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11849");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type7, type10, type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type17, type20, type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray22);
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray22);
        int int26 = type2.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter1.newValue(type2);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str30 = type29.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str35 = type34.toString();
        int int36 = type34.getSort();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type34, type37, type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type44, type47, type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray49);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray49);
        int int53 = type29.getSize();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) basicInterpreter1, value54);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean59 = type57.equals((java.lang.Object) 88);
        int int60 = type57.getSize();
        int int61 = type57.getSort();
        java.lang.String str62 = type57.getDescriptor();
        java.lang.String str63 = type57.getInternalName();
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter1.newValue(type57);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int68 = type66.getOpcode(83);
        java.lang.String str69 = type66.getClassName();
        int int70 = type66.getSize();
        org.mockito.asm.Type type71 = type66.getElementType();
        int int72 = type66.getSort();
        int int73 = type66.getDimensions();
        org.mockito.asm.Type type74 = type66.getElementType();
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter1.newValue(type74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("(VVI)Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str78 = type77.getInternalName();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter1.newValue(type77);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "char" + "'", str3, "char");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(VVI)J" + "'", str13, "(VVI)J");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)J" + "'", str24, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VVI)C" + "'", str25, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "char" + "'", str30, "char");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "V" + "'", str35, "V");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(VVI)J" + "'", str40, "(VVI)J");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VVI)C" + "'", str52, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L(I)V;" + "'", str62, "L(I)V;");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(I)V" + "'", str63, "(I)V");
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 87 + "'", int68 == 87);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(I)Z" + "'", str69, "(I)Z");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str78, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(value79);
    }

    @Test
    public void test11850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11850");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray3 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str4 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray3);
        java.lang.Class<?> wildcardClass5 = type0.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = type6.getElementType();
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.ternaryOperation(abstractInsnNode11, value16, value22, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter32.ternaryOperation(abstractInsnNode33, value38, value44, value50);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode54 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value71);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter53.ternaryOperation(abstractInsnNode54, value59, value65, value71);
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier31.merge(value38, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter10.merge(value74, value77);
        boolean boolean79 = type7.equals((java.lang.Object) value78);
        java.lang.String str80 = type7.getClassName();
        java.lang.String str81 = type7.getClassName();
        java.lang.String str82 = type7.getDescriptor();
        org.mockito.asm.Type type83 = type7.getElementType();
        java.lang.String str84 = type83.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(I)V" + "'", str4, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lg/mockito/asm/Type;" + "'", str8, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value30);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNull(value73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "g.mockito.asm.Type" + "'", str80, "g.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "g.mockito.asm.Type" + "'", str81, "g.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Lg/mockito/asm/Type;" + "'", str82, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "mockito.asm.Type" + "'", str84, "mockito.asm.Type");
    }

    @Test
    public void test11851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11851");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass1 = basicInterpreter0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.lang.String str8 = type7.toString();
        java.lang.String str9 = type7.toString();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str2, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str4, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11852");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean3 = type1.equals((java.lang.Object) 180);
        java.lang.String str4 = type1.toString();
        int int5 = type1.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str38 = type37.toString();
        int int39 = type37.getSort();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type37, type40, type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter33.newValue(type35);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter6.merge(value31, value44);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter6.copyOperation(abstractInsnNode46, value65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type1, value68);
        java.lang.String str70 = type1.toString();
        int int71 = type1.getSize();
        java.lang.String str72 = type1.getClassName();
        java.lang.String str73 = type1.getDescriptor();
        int int74 = type1.getSort();
        java.lang.String str75 = type1.getDescriptor();
        java.lang.Class<?> wildcardClass76 = type1.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "C" + "'", str4, "C");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "V" + "'", str38, "V");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VVI)J" + "'", str43, "(VVI)J");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "C" + "'", str70, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "char" + "'", str72, "char");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "C" + "'", str73, "C");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "C" + "'", str75, "C");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test11853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11853");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter27.ternaryOperation(abstractInsnNode28, value33, value39, value45);
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier5.merge(value12, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) "void", value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Throwable) analyzerException49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J");
        analyzerException50.addSuppressed((java.lang.Throwable) analyzerException52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Throwable) analyzerException50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 139, but found null", (java.lang.Throwable) analyzerException50);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(value48);
    }

    @Test
    public void test11854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11854");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("hi!");
        java.lang.String str2 = type1.getInternalName();
        int int4 = type1.getOpcode(7);
        java.lang.String str5 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Z");
        java.lang.Throwable throwable9 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable9);
        java.lang.Throwable[] throwableArray11 = analyzerException10.getSuppressed();
        analyzerException7.addSuppressed((java.lang.Throwable) analyzerException10);
        java.lang.Throwable throwable16 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        java.lang.Throwable throwable23 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException24);
        analyzerException20.addSuppressed((java.lang.Throwable) analyzerException24);
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        analyzerException28.addSuppressed((java.lang.Throwable) analyzerException30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type");
        java.lang.Throwable[] throwableArray34 = analyzerException33.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException41);
        analyzerException33.addSuppressed((java.lang.Throwable) analyzerException41);
        analyzerException28.addSuppressed((java.lang.Throwable) analyzerException33);
        analyzerException10.addSuppressed((java.lang.Throwable) analyzerException28);
        java.lang.Throwable[] throwableArray46 = analyzerException28.getSuppressed();
        boolean boolean47 = type1.equals((java.lang.Object) throwableArray46);
        java.lang.Class<?> wildcardClass48 = throwableArray46.getClass();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 11 + "'", int4 == 11);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lhi!;" + "'", str5, "Lhi!;");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[Ljava/lang/Throwable;" + "'", str50, "[Ljava/lang/Throwable;");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[Ljava/lang/Throwable;" + "'", str51, "[Ljava/lang/Throwable;");
    }

    @Test
    public void test11855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11855");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L(I)V;");
        java.lang.String str2 = type1.getClassName();
        java.lang.String str3 = type1.getDescriptor();
        java.lang.String str4 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type9 = null;
        org.mockito.asm.tree.analysis.Value value10 = basicInterpreter8.newValue(type9);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter12 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode13 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value30);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter12.ternaryOperation(abstractInsnNode13, value18, value24, value30);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type36 = null;
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter8.ternaryOperation(abstractInsnNode11, value24, value37, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter49.ternaryOperation(abstractInsnNode50, value55, value61, value67);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value37, value47, value67);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean73 = type71.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass74 = type71.getClass();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        java.lang.String str76 = type75.toString();
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter6.newValue(type75);
        int int78 = type75.getSize();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter5.newValue(type75);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getReturnType("(I)V");
        int int82 = type81.getSize();
        int int83 = type81.getSize();
        int int84 = type81.getSort();
        java.lang.String str85 = type81.getClassName();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter5.newValue(type81);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean89 = type87.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass90 = type87.getClass();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = type91.getClass();
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass92);
        org.mockito.asm.tree.analysis.Value value94 = basicInterpreter5.newValue(type93);
        boolean boolean95 = type1.equals((java.lang.Object) value94);
        int int96 = value94.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L(I)V;" + "'", str2, "L(I)V;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LL(I)V;;" + "'", str3, "LL(I)V;;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L(I)V;" + "'", str4, "L(I)V;");
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNull(value32);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNull(value69);
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str76, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "void" + "'", str85, "void");
        org.junit.Assert.assertNull(value86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
    }

    @Test
    public void test11856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11856");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter20 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter20.ternaryOperation(abstractInsnNode21, value26, value32, value38);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier19.merge(value26, value61);
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter1.copyOperation(abstractInsnNode18, value26);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter1.newValue(type65);
        int int67 = type65.getSort();
        int int68 = type65.getSort();
        int int69 = type65.getSort();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
    }

    @Test
    public void test11857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11857");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type4, type7, type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type2);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        int int13 = type12.getSort();
        java.lang.String str14 = type12.getDescriptor();
        java.lang.String str15 = type12.getDescriptor();
        java.lang.String str16 = type12.getClassName();
        int int17 = type12.getSize();
        java.lang.Object obj18 = null;
        boolean boolean19 = type12.equals(obj18);
        java.lang.String str20 = type12.getDescriptor();
        int int21 = type12.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str23 = type22.toString();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray25);
        java.lang.Class<?> wildcardClass27 = type22.getClass();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = type28.getElementType();
        org.mockito.asm.Type type30 = type29.getElementType();
        int int31 = type30.getSize();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type34 = type33.getElementType();
        boolean boolean35 = type30.equals((java.lang.Object) type33);
        org.mockito.asm.Type[] typeArray37 = org.mockito.asm.Type.getArgumentTypes("(VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray37);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray37);
        java.lang.String str41 = type2.toString();
        int int42 = type2.getSize();
        java.lang.String str43 = type2.toString();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(VVI)J" + "'", str10, "(VVI)J");
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "C" + "'", str14, "C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "char" + "'", str16, "char");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "V" + "'", str23, "V");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(I)V" + "'", str26, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)Lmockito/asm/Type;" + "'", str38, "(VVI)Lmockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)C" + "'", str39, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(VVI)J" + "'", str40, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "J" + "'", str41, "J");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "J" + "'", str43, "J");
    }

    @Test
    public void test11858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11858");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass67 = type66.getClass();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter0.newValue(type68);
        org.mockito.asm.Type type70 = type68.getElementType();
        int int72 = type68.getOpcode(116);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getObjectType("(JDCJCI)C");
        int int75 = type74.getSize();
        org.mockito.asm.Type[] typeArray77 = org.mockito.asm.Type.getArgumentTypes("(VVI)J");
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray77);
        int int80 = type74.getOpcode(1029);
        boolean boolean81 = type68.equals((java.lang.Object) type74);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 120 + "'", int72 == 120);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VVI)L(JDCJCI)C;" + "'", str78, "(VVI)L(JDCJCI)C;");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1033 + "'", int80 == 1033);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test11859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11859");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass31 = type30.getClass();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        int int33 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSort();
        java.lang.String str39 = type36.getDescriptor();
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean43 = type41.equals((java.lang.Object) 180);
        java.lang.String str44 = type41.toString();
        java.lang.String str45 = type41.getDescriptor();
        int int46 = type41.getSort();
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier35.newValue(type41);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type41);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean51 = type49.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass52 = type49.getClass();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        int int55 = type53.getOpcode(0);
        org.mockito.asm.Type type56 = type53.getElementType();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.newValue(type53);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getObjectType("L(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;;");
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter0.newValue(type59);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.newOperation(abstractInsnNode61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
    }

    @Test
    public void test11860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11860");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter0.newValue(type4);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        int int10 = type8.getOpcode(116);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type8);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.Value value13 = null;
        org.mockito.asm.tree.analysis.Value value14 = basicInterpreter0.copyOperation(abstractInsnNode12, value13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        org.mockito.asm.tree.analysis.Value value16 = null;
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter0.copyOperation(abstractInsnNode15, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.toString();
        int int21 = type19.getSort();
        java.lang.String str22 = type19.getDescriptor();
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter25 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str30 = type29.toString();
        int int31 = type29.getSort();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type29, type32, type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter25.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        int int40 = value39.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter25, value39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass43 = type42.getClass();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        int int45 = type44.getSort();
        int int46 = type44.getSize();
        int int47 = type44.getDimensions();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter25.newValue(type44);
        java.lang.String str49 = type44.toString();
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier18.newValue(type44);
        java.lang.String str51 = type44.getDescriptor();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter0.newValue(type44);
        org.mockito.asm.Type type53 = null;
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type53);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "B" + "'", str5, "B");
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 120 + "'", int10 == 120);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNull(value14);
        org.junit.Assert.assertNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VVI)J" + "'", str35, "(VVI)J");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str51, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(value54);
    }

    @Test
    public void test11861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11861");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BYTE_TYPE;
        int int64 = type63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type63);
        java.lang.Class<?> wildcardClass66 = basicInterpreter0.getClass();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        int int68 = type67.getSize();
        java.lang.String str69 = type67.getInternalName();
        int int70 = type67.getDimensions();
        java.lang.String str71 = type67.getInternalName();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str69, "org/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str71, "org/mockito/asm/tree/analysis/BasicInterpreter");
    }

    @Test
    public void test11862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11862");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray48);
        java.lang.Class<?> wildcardClass50 = type45.getClass();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        java.lang.String str53 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        boolean boolean54 = type44.equals((java.lang.Object) wildcardClass50);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str41, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str42, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str43, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(I)V" + "'", str49, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/asm/Type" + "'", str53, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11863");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("(I)V");
        java.lang.Throwable throwable39 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Throwable) analyzerException40);
        java.lang.Throwable[] throwableArray42 = analyzerException41.getSuppressed();
        boolean boolean43 = type36.equals((java.lang.Object) throwableArray42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type45 = null;
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter44.newValue(type45);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter48.ternaryOperation(abstractInsnNode49, value54, value60, value66);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter44.ternaryOperation(abstractInsnNode47, value60, value73, value77);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter44.newValue(type80);
        java.lang.String str82 = type80.toString();
        int int83 = type80.getSize();
        boolean boolean84 = type36.equals((java.lang.Object) type80);
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter0.newValue(type80);
        java.lang.String str86 = type80.getClassName();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str89 = type88.getDescriptor();
        org.mockito.asm.Type[] typeArray91 = org.mockito.asm.Type.getArgumentTypes("(I)B");
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type88, typeArray91);
        org.mockito.asm.Type type93 = type88.getElementType();
        int int94 = type93.getSort();
        boolean boolean95 = type80.equals((java.lang.Object) type93);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "LLorg/mockito/asm/Type;;" + "'", str82, "LLorg/mockito/asm/Type;;");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Lorg.mockito.asm.Type;" + "'", str86, "Lorg.mockito.asm.Type;");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str89, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(typeArray91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str92, "(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 10 + "'", int94 == 10);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test11864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11864");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type4, type7, type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type2);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type14 = null;
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean18 = type16.equals((java.lang.Object) 180);
        java.lang.String str19 = type16.toString();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter13.newValue(type16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        int int27 = value26.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value26);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter13.copyOperation(abstractInsnNode21, value26);
        int int30 = value26.getSize();
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter0.copyOperation(abstractInsnNode12, value26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode32 = null;
        java.util.List list33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.naryOperation(abstractInsnNode32, list33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(VVI)J" + "'", str10, "(VVI)J");
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(value31);
    }

    @Test
    public void test11865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11865");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter27.ternaryOperation(abstractInsnNode28, value33, value39, value45);
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier5.merge(value12, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) "void", value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Throwable) analyzerException49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: void: expected 171, but found .", (java.lang.Throwable) analyzerException49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg.mockito.asm.Type;: expected J, but found null");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("LI)LVVI)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException55);
        analyzerException49.addSuppressed((java.lang.Throwable) analyzerException55);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(value48);
    }

    @Test
    public void test11866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11866");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value47);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type53, type56, type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter49.newValue(type51);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter22.merge(value47, value60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str63 = type62.toString();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter22.newValue(type62);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter22.newValue(type69);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean76 = type74.equals((java.lang.Object) 180);
        java.lang.String str77 = type74.toString();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter71.newValue(type74);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter22.newValue(type74);
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter0.copyOperation(abstractInsnNode21, value79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass82 = type81.getClass();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        int int84 = type83.getDimensions();
        org.mockito.asm.Type type85 = type83.getElementType();
        java.lang.String str86 = type85.getInternalName();
        java.lang.String str87 = type85.getDescriptor();
        int int88 = type85.getSize();
        int int89 = type85.getSort();
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter0.newValue(type85);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value92 = basicInterpreter0.newOperation(abstractInsnNode91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(I)V" + "'", str66, "(I)V");
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "g/mockito/asm/Type" + "'", str86, "g/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Lg/mockito/asm/Type;" + "'", str87, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
        org.junit.Assert.assertNotNull(value90);
    }

    @Test
    public void test11867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11867");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        int int8 = type5.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        int int25 = value24.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter10, value24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter29.ternaryOperation(abstractInsnNode30, value35, value41, value47);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode51 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value68);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter50.ternaryOperation(abstractInsnNode51, value56, value62, value68);
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier28.merge(value35, value70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter10.copyOperation(abstractInsnNode27, value35);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter10.newValue(type74);
        java.lang.Class<?> wildcardClass76 = basicInterpreter10.getClass();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        java.lang.String str79 = type78.getDescriptor();
        int int80 = type78.getDimensions();
        boolean boolean81 = type5.equals((java.lang.Object) int80);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNull(value49);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str79, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test11868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11868");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.Type type8 = null;
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter0.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str12 = type11.toString();
        int int13 = type11.getSort();
        java.lang.String str14 = type11.getDescriptor();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean18 = type16.equals((java.lang.Object) 180);
        java.lang.String str19 = type16.toString();
        java.lang.String str20 = type16.getDescriptor();
        int int21 = type16.getSort();
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier10.newValue(type16);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int24 = type23.getSort();
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier10.newValue(type23);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("Lg/mockito/asm/Type;");
        int int28 = type27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier10.newValue(type27);
        int int30 = value29.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode32 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter31.ternaryOperation(abstractInsnNode32, value37, value43, value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str63 = type62.toString();
        int int64 = type62.getSort();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type62, type65, type66 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter58.newValue(type60);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter31.merge(value56, value69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.toString();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray74);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter31.newValue(type71);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter31.newValue(type78);
        int int80 = value79.getSize();
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter0.merge(value29, value79);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode82 = null;
        java.util.List list83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.naryOperation(abstractInsnNode82, list83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VVI)J" + "'", str68, "(VVI)J");
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(I)V" + "'", str75, "(I)V");
        org.junit.Assert.assertNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(value81);
    }

    @Test
    public void test11869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11869");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str23 = type22.toString();
        int int24 = type22.getSort();
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter1.newValue(type22);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter1.copyOperation(abstractInsnNode26, value29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass32 = type31.getClass();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass32);
        int int34 = type33.getSort();
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter1.newValue(type33);
        java.lang.Throwable throwable38 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable38);
        java.lang.Throwable[] throwableArray40 = analyzerException39.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException39.addSuppressed((java.lang.Throwable) analyzerException43);
        java.lang.Throwable throwable47 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException48);
        analyzerException43.addSuppressed((java.lang.Throwable) analyzerException49);
        java.lang.Class<?> wildcardClass51 = analyzerException43.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        int int54 = type53.getSort();
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter1.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value60);
        int int62 = value60.getSize();
        int int63 = value60.getSize();
        int int64 = value60.getSize();
        int int65 = value60.getSize();
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier0.merge(value55, value60);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value68 = basicVerifier0.newOperation(abstractInsnNode67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "V" + "'", str23, "V");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(value25);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str52, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(value66);
    }

    @Test
    public void test11870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11870");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean3 = type1.equals((java.lang.Object) 180);
        java.lang.String str4 = type1.toString();
        int int5 = type1.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str38 = type37.toString();
        int int39 = type37.getSort();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type37, type40, type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter33.newValue(type35);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter6.merge(value31, value44);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter6.copyOperation(abstractInsnNode46, value65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type1, value68);
        java.lang.String str70 = analyzerException69.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "C" + "'", str4, "C");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "V" + "'", str38, "V");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VVI)J" + "'", str43, "(VVI)J");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/Type: expected C, but found J" + "'", str70, "org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/Type: expected C, but found J");
    }

    @Test
    public void test11871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11871");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass20 = type19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass20);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter1.newValue(type22);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        java.lang.String str30 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier26.newValue(type27);
        java.lang.String str32 = type27.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type36 = null;
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type27, value37);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.copyOperation(abstractInsnNode24, value37);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter42 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str47 = type46.toString();
        int int48 = type46.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type46, type49, type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter42.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        int int57 = value56.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter42, value56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass60 = type59.getClass();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        int int62 = type61.getSort();
        int int63 = type61.getSize();
        int int64 = type61.getDimensions();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter42.newValue(type61);
        int int66 = value65.getSize();
        org.mockito.asm.tree.analysis.Value value67 = null;
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter1.merge(value65, value67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        int int70 = type69.getSort();
        java.lang.String str71 = type69.getDescriptor();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter1.newValue(type69);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;: expected J, but found null");
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass76 = type75.getClass();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        int int78 = type77.getDimensions();
        org.mockito.asm.Type type79 = type77.getElementType();
        int int81 = type79.getOpcode(156);
        int int82 = type79.getSort();
        int int83 = type79.getSize();
        int int84 = type79.getSort();
        boolean boolean85 = type74.equals((java.lang.Object) type79);
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter1.newValue(type79);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/Type" + "'", str21, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VVI)J" + "'", str52, "(VVI)J");
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "C" + "'", str71, "C");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 160 + "'", int81 == 160);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(value86);
    }

    @Test
    public void test11872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11872");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType("(I)LVVI)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier0.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type24, type27, type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray29);
        int int33 = type12.getOpcode((int) 'a');
        java.lang.String str34 = type12.getClassName();
        int int35 = type12.getSort();
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier0.newValue(type12);
        java.lang.String str37 = type12.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VVI)J" + "'", str30, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(VVI)J" + "'", str31, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 98 + "'", int33 == 98);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "long" + "'", str34, "long");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 7 + "'", int35 == 7);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "J" + "'", str37, "J");
    }

    @Test
    public void test11873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11873");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)C: expected false, but found .");
        java.lang.Object obj3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type5 = null;
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean9 = type7.equals((java.lang.Object) 180);
        java.lang.String str10 = type7.toString();
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter4.newValue(type7);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter12 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode13 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value30);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter12.ternaryOperation(abstractInsnNode13, value18, value24, value30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value37);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter39 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.toString();
        int int45 = type43.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type43, type46, type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter39.newValue(type41);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter12.merge(value37, value50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean54 = type52.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass55 = type52.getClass();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter12.newValue(type56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter4.newValue(type56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str60 = type59.getClassName();
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter4.newValue(type59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("C");
        int int64 = type63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter4.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("L(VVI)C;", obj3, value65);
        java.lang.Throwable[] throwableArray67 = analyzerException66.getSuppressed();
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException66);
        java.lang.Class<?> wildcardClass69 = analyzerException66.getClass();
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNull(value32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VVI)J" + "'", str49, "(VVI)J");
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "long" + "'", str60, "long");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test11874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11874");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray5 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str6 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray5);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type8 = null;
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter7.newValue(type8);
        int int10 = value9.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str6, value9);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter12 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode13 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value30);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter12.ternaryOperation(abstractInsnNode13, value18, value24, value30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value37);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter39 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.toString();
        int int45 = type43.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type43, type46, type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter39.newValue(type41);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter12.merge(value37, value50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode52 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str58 = type57.toString();
        int int59 = type57.getSort();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type57, type60, type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter53.newValue(type55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode65 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter66 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type67 = null;
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter66.newValue(type67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter53.copyOperation(abstractInsnNode65, value68);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter12.copyOperation(abstractInsnNode52, value68);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type74 = type73.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int79 = type77.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier75.newValue(type77);
        int int81 = value80.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Object) type73, value80);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier85 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier85.newValue(type86);
        int int88 = value87.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value87);
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter12.merge(value80, value87);
        int int91 = value80.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: char: expected char, but found I", (java.lang.Object) analyzerException11, value80);
        int int93 = value80.getSize();
        int int94 = value80.getSize();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(I)Lchar;" + "'", str6, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNull(value32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VVI)J" + "'", str49, "(VVI)J");
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "V" + "'", str58, "V");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)J" + "'", str63, "(VVI)J");
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 87 + "'", int79 == 87);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test11875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11875");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        boolean boolean5 = type1.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str10 = type9.toString();
        int int11 = type9.getSort();
        java.lang.String str12 = type9.getDescriptor();
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean16 = type14.equals((java.lang.Object) 180);
        java.lang.String str17 = type14.toString();
        java.lang.String str18 = type14.getDescriptor();
        int int19 = type14.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier8.newValue(type14);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int22 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier8.newValue(type21);
        int int24 = value23.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value25 = basicVerifier0.unaryOperation(abstractInsnNode7, value23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test11876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11876");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int30 = type29.getDimensions();
        org.mockito.asm.Type type31 = type29.getElementType();
        int int33 = type29.getOpcode((int) '4');
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type29);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.Value value36 = null;
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.copyOperation(abstractInsnNode35, value36);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean42 = type40.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass43 = type40.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter46 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value64);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter46.ternaryOperation(abstractInsnNode47, value52, value58, value64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str68 = type67.toString();
        int int69 = type67.getSort();
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter46.newValue(type67);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)L(I)V;");
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter46.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Object) type45, value73);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.copyOperation(abstractInsnNode38, value73);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getObjectType("C");
        int int79 = type78.getSort();
        int int80 = type78.getSort();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Throwable) analyzerException83);
        boolean boolean85 = type78.equals((java.lang.Object) analyzerException84);
        java.lang.String str86 = type78.getInternalName();
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.newValue(type78);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value89 = basicInterpreter0.newOperation(abstractInsnNode88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 56 + "'", int33 == 56);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/Type" + "'", str44, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "V" + "'", str68, "V");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test11877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11877");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean42 = type40.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass43 = type40.getClass();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str47 = type46.toString();
        int int48 = type46.getSort();
        java.lang.String str49 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter50 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.toString();
        int int56 = type54.getSort();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type54, type57, type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter50.newValue(type52);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean65 = type63.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean71 = type69.equals((java.lang.Object) 180);
        java.lang.String str72 = type69.toString();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type52, type62, type63, type67, type69, type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray74);
        int int76 = type46.getSort();
        int int77 = type46.getSort();
        java.lang.String str78 = type46.toString();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.newValue(type46);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int83 = type81.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type81);
        org.mockito.asm.Type type85 = null;
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter0.newValue(type85);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getReturnType("L(I)V;");
        java.lang.String str89 = type88.getDescriptor();
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter0.newValue(type88);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value92 = basicInterpreter0.newOperation(abstractInsnNode91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)J" + "'", str60, "(VVI)J");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "C" + "'", str72, "C");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(JDCJCI)V" + "'", str75, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "V" + "'", str78, "V");
        org.junit.Assert.assertNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 87 + "'", int83 == 87);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "V" + "'", str89, "V");
        org.junit.Assert.assertNull(value90);
    }

    @Test
    public void test11878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11878");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter38 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.toString();
        int int44 = type42.getSort();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type42, type45, type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter38.newValue(type40);
        boolean boolean50 = type29.equals((java.lang.Object) basicInterpreter38);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean53 = type51.equals((java.lang.Object) 180);
        java.lang.String str54 = type51.toString();
        java.lang.String str55 = type51.getDescriptor();
        int int56 = type51.getSize();
        java.lang.String str57 = type51.getClassName();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter38.newValue(type51);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode59 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter60 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str62 = type61.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type66, type69, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.toString();
        int int78 = type76.getSort();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type76, type79, type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray81);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray81);
        int int85 = type61.getSize();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter60.newValue(type61);
        org.mockito.asm.Type type87 = null;
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter60.newValue(type87);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter38.copyOperation(abstractInsnNode59, value88);
        int int90 = value88.getSize();
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter0.copyOperation(abstractInsnNode27, value88);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode92 = null;
        org.mockito.asm.tree.analysis.Value value93 = null;
        org.mockito.asm.tree.analysis.Value value94 = basicInterpreter0.copyOperation(abstractInsnNode92, value93);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(VVI)J" + "'", str48, "(VVI)J");
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "C" + "'", str54, "C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "char" + "'", str57, "char");
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "char" + "'", str62, "char");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)J" + "'", str83, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(VVI)C" + "'", str84, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNull(value94);
    }

    @Test
    public void test11879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11879");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str42 = type41.getInternalName();
        org.mockito.asm.Type type43 = type41.getElementType();
        org.mockito.asm.Type type44 = type43.getElementType();
        org.mockito.asm.Type type45 = type44.getElementType();
        java.lang.String str46 = type44.getClassName();
        java.lang.String str47 = type44.getDescriptor();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str42, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "mockito.asm.tree.analysis.BasicValue" + "'", str46, "mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lmockito/asm/tree/analysis/BasicValue;" + "'", str47, "Lmockito/asm/tree/analysis/BasicValue;");
    }

    @Test
    public void test11880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11880");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.Value value4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter0.copyOperation(abstractInsnNode3, value4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getReturnType("(I)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter0.newValue(type7);
        java.lang.Throwable throwable12 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException13);
        java.lang.Throwable throwable17 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException18);
        analyzerException13.addSuppressed((java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException18);
        java.lang.Class<?> wildcardClass22 = analyzerException18.getClass();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        int int27 = type25.getSort();
        boolean boolean29 = type25.equals((java.lang.Object) (-1.0d));
        int int30 = type25.getSort();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str33 = type32.getClassName();
        org.mockito.asm.Type[] typeArray35 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray35);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray35);
        int int38 = type25.getSize();
        boolean boolean39 = type23.equals((java.lang.Object) int38);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str46 = type45.toString();
        int int47 = type45.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type45, type48, type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter41.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter41, value55);
        boolean boolean58 = type23.equals((java.lang.Object) "C");
        java.lang.String str59 = type23.getInternalName();
        int int60 = type23.getSort();
        java.lang.String str61 = type23.toString();
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.newValue(type23);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int66 = type64.getOpcode(83);
        java.lang.String str67 = type64.getClassName();
        int int68 = type64.getSize();
        org.mockito.asm.Type type69 = type64.getElementType();
        int int70 = type64.getSort();
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter0.newValue(type64);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode72 = null;
        java.util.List list73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value74 = basicInterpreter0.naryOperation(abstractInsnNode72, list73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7 + "'", int30 == 7);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "void" + "'", str33, "void");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(I)V" + "'", str36, "(I)V");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(I)J" + "'", str37, "(I)J");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "V" + "'", str46, "V");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str59, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str61, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 87 + "'", int66 == 87);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(I)Z" + "'", str67, "(I)Z");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertNotNull(value71);
    }

    @Test
    public void test11881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11881");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean3 = type1.equals((java.lang.Object) 180);
        java.lang.String str4 = type1.toString();
        int int5 = type1.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str38 = type37.toString();
        int int39 = type37.getSort();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type37, type40, type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter33.newValue(type35);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter6.merge(value31, value44);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter6.copyOperation(abstractInsnNode46, value65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type1, value68);
        java.lang.Class<?> wildcardClass70 = value68.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass70);
        java.lang.String str72 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass70);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass70);
        int int74 = type73.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "C" + "'", str4, "C");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "V" + "'", str38, "V");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VVI)J" + "'", str43, "(VVI)J");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str71, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str72, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
    }

    @Test
    public void test11882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11882");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        int int2 = type0.getSort();
        java.lang.String str3 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str9 = type8.toString();
        int int10 = type8.getSort();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type8, type11, type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter4.newValue(type6);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean19 = type17.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.String str26 = type23.toString();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type6, type16, type17, type21, type23, type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray28);
        int int30 = type0.getSort();
        int int31 = type0.getSort();
        int int33 = type0.getOpcode(155);
        java.lang.Class<?> wildcardClass34 = type0.getClass();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(VVI)J" + "'", str14, "(VVI)J");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(JDCJCI)V" + "'", str29, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 160 + "'", int33 == 160);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/Type" + "'", str36, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
    }

    @Test
    public void test11883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11883");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean52 = type50.equals((java.lang.Object) 88);
        int int53 = type50.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        org.mockito.asm.tree.analysis.Value value56 = null;
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.copyOperation(abstractInsnNode55, value56);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode58 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Z");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Throwable) analyzerException62);
        java.lang.Throwable[] throwableArray64 = analyzerException62.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        int int70 = value69.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .", (java.lang.Object) throwableArray64, value69);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter0.copyOperation(abstractInsnNode58, value69);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getObjectType("(VVI)L(I)V;");
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.newValue(type75);
        int int77 = value76.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNull(value57);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test11884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11884");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)V", (java.lang.Throwable) analyzerException8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable17 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable17);
        java.lang.Throwable[] throwableArray19 = analyzerException18.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException18);
        analyzerException14.addSuppressed((java.lang.Throwable) analyzerException18);
        java.lang.Throwable[] throwableArray22 = analyzerException18.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)V", (java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J", (java.lang.Throwable) analyzerException18);
        analyzerException8.addSuppressed((java.lang.Throwable) analyzerException24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("Z", (java.lang.Throwable) analyzerException8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean32 = type30.equals((java.lang.Object) 180);
        java.lang.String str33 = type30.toString();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter27.newValue(type30);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = value40.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value40);
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter27.copyOperation(abstractInsnNode35, value40);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getObjectType("C");
        int int46 = type45.getSort();
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter27.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("[Ljava/lang/Throwable;", (java.lang.Object) analyzerException8, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)LI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;", (java.lang.Throwable) analyzerException48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char: expected S, but found J", (java.lang.Throwable) analyzerException49);
        java.lang.Throwable[] throwableArray51 = analyzerException50.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test11885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11885");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: L(I)Z;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)J");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.ternaryOperation(abstractInsnNode11, value16, value22, value28);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter6.ternaryOperation(abstractInsnNode9, value22, value35, value39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter6.newValue(type42);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter45 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value63);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter45.ternaryOperation(abstractInsnNode46, value51, value57, value63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value70);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter72 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.toString();
        int int78 = type76.getSort();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type76, type79, type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray81);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter72.newValue(type74);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter45.merge(value70, value83);
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter6.copyOperation(abstractInsnNode44, value83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Object) "L(I)V;", value85);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException86);
        java.lang.Throwable[] throwableArray88 = analyzerException86.getSuppressed();
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException86);
        java.lang.String str90 = analyzerException1.toString();
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value30);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: L(I)Z;" + "'", str90, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: L(I)Z;");
    }

    @Test
    public void test11886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11886");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass20 = type19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass20);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter1.newValue(type22);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        java.lang.String str30 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier26.newValue(type27);
        java.lang.String str32 = type27.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type36 = null;
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type27, value37);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.copyOperation(abstractInsnNode24, value37);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter41.newValue(type42);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter45 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value63);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter45.ternaryOperation(abstractInsnNode46, value51, value57, value63);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter68 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type69 = null;
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter41.ternaryOperation(abstractInsnNode44, value57, value70, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter41.newValue(type77);
        java.lang.Class<?> wildcardClass79 = type77.getClass();
        java.lang.String str80 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        java.lang.String str82 = type81.getDescriptor();
        java.lang.String str83 = type81.getInternalName();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter1.newValue(type81);
        org.mockito.asm.Type type85 = type81.getElementType();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/Type" + "'", str21, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str80, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str82, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org/mockito/asm/Type" + "'", str83, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type85);
    }

    @Test
    public void test11887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11887");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type32, type35, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter28.newValue(type30);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.merge(value26, value39);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.merge(value26, value43);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(VVI)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type47);
        java.lang.String str49 = type47.toString();
        int int50 = type47.getDimensions();
        org.mockito.asm.Type type51 = type47.getElementType();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)J" + "'", str38, "(VVI)J");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(type51);
    }

    @Test
    public void test11888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11888");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type8 = type7.getElementType();
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier2.newValue(type8);
        boolean boolean10 = type1.equals((java.lang.Object) basicVerifier2);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        java.lang.String str17 = type14.getDescriptor();
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter19 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type20 = null;
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter19.newValue(type20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier13.merge(value21, value26);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str30 = type29.toString();
        int int31 = type29.getSort();
        int int32 = type29.getSort();
        java.lang.String str33 = type29.getClassName();
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier13.newValue(type29);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        int int51 = value50.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter36, value50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass54 = type53.getClass();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass54);
        int int56 = type55.getSort();
        int int57 = type55.getSize();
        int int58 = type55.getDimensions();
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter36.newValue(type55);
        java.lang.String str60 = type55.toString();
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier13.newValue(type55);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter62 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type63 = null;
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean67 = type65.equals((java.lang.Object) 180);
        java.lang.String str68 = type65.toString();
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter62.newValue(type65);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode70 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        int int76 = value75.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value75);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter62.copyOperation(abstractInsnNode70, value75);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getObjectType("C");
        int int81 = type80.getSort();
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter62.newValue(type80);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        int int84 = type83.getSort();
        java.lang.String str85 = type83.getDescriptor();
        java.lang.String str86 = type83.getDescriptor();
        java.lang.String str87 = type83.getClassName();
        org.mockito.asm.Type[] typeArray89 = org.mockito.asm.Type.getArgumentTypes("(VVI)B");
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type83, typeArray89);
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter62.newValue(type83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue", (java.lang.Object) type55, value91);
        int int93 = value91.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = basicVerifier2.unaryOperation(abstractInsnNode11, value91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertNull(value18);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "void" + "'", str33, "void");
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str60, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "C" + "'", str68, "C");
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "char" + "'", str87, "char");
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VVI)C" + "'", str90, "(VVI)C");
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test11889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11889");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.toString();
        int int25 = type23.getSort();
        java.lang.String str26 = type23.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean42 = type40.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean48 = type46.equals((java.lang.Object) 180);
        java.lang.String str49 = type46.toString();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type29, type39, type40, type44, type46, type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str57 = type56.toString();
        int int58 = type56.getSort();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type56, type59, type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type66, type69, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray71);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray71);
        int int75 = type23.getSort();
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.newValue(type23);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode77 = null;
        org.mockito.asm.tree.analysis.Value value78 = null;
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.copyOperation(abstractInsnNode77, value78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType("(I)L(VVI)I;");
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter0.newValue(type81);
        java.lang.String str83 = type81.toString();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "V" + "'", str26, "V");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "C" + "'", str49, "C");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(JDCJCI)V" + "'", str52, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "V" + "'", str57, "V");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VVI)J" + "'", str62, "(VVI)J");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)J" + "'", str73, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)V" + "'", str74, "(VVI)V");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNull(value76);
        org.junit.Assert.assertNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "LI)L(VVI)I;" + "'", str83, "LI)L(VVI)I;");
    }

    @Test
    public void test11890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11890");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        int int2 = type0.getSort();
        java.lang.String str3 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str9 = type8.toString();
        int int10 = type8.getSort();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type8, type11, type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter4.newValue(type6);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean19 = type17.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.String str26 = type23.toString();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type6, type16, type17, type21, type23, type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type33, type36, type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.toString();
        int int45 = type43.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type43, type46, type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray48);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray48);
        int int52 = type0.getSort();
        java.lang.Object obj53 = null;
        boolean boolean54 = type0.equals(obj53);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getObjectType("(I)V");
        java.lang.String str57 = type56.getClassName();
        java.lang.Class<?> wildcardClass58 = type56.getClass();
        boolean boolean59 = type0.equals((java.lang.Object) wildcardClass58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type61 = type60.getElementType();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(VVI)J" + "'", str14, "(VVI)J");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(JDCJCI)V" + "'", str29, "(JDCJCI)V");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)J" + "'", str39, "(VVI)J");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VVI)J" + "'", str49, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)V" + "'", str51, "(VVI)V");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(I)V" + "'", str57, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
    }

    @Test
    public void test11891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11891");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str29 = type28.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type33, type36, type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.toString();
        int int45 = type43.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type43, type46, type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray48);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray48);
        int int52 = type28.getSize();
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter27.newValue(type28);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.toString();
        int int56 = type54.getSort();
        java.lang.String str57 = type54.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str63 = type62.toString();
        int int64 = type62.getSort();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type62, type65, type66 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter58.newValue(type60);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean73 = type71.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean79 = type77.equals((java.lang.Object) 180);
        java.lang.String str80 = type77.toString();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray82 = new org.mockito.asm.Type[] { type60, type70, type71, type75, type77, type81 };
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray82);
        int int84 = type54.getSort();
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter27.newValue(type54);
        java.lang.String str86 = type54.getClassName();
        java.lang.String str87 = type54.getDescriptor();
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.newValue(type54);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "char" + "'", str29, "char");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)J" + "'", str39, "(VVI)J");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VVI)J" + "'", str49, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)C" + "'", str51, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "V" + "'", str57, "V");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VVI)J" + "'", str68, "(VVI)J");
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "C" + "'", str80, "C");
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(JDCJCI)V" + "'", str83, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(value85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "void" + "'", str86, "void");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "V" + "'", str87, "V");
        org.junit.Assert.assertNull(value88);
    }

    @Test
    public void test11892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11892");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        java.lang.Class<?> wildcardClass40 = value38.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = null;
        boolean boolean43 = type41.equals(obj42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray47);
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray47);
        java.lang.String str50 = type41.toString();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value58);
        java.lang.Throwable[] throwableArray60 = analyzerException59.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException59);
        java.lang.Throwable throwable64 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable64);
        java.lang.Throwable[] throwableArray66 = analyzerException65.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException65.addSuppressed((java.lang.Throwable) analyzerException69);
        java.lang.Throwable throwable73 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable73);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException74);
        analyzerException69.addSuppressed((java.lang.Throwable) analyzerException75);
        java.lang.Throwable[] throwableArray77 = analyzerException69.getSuppressed();
        analyzerException61.addSuppressed((java.lang.Throwable) analyzerException69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("I", (java.lang.Throwable) analyzerException69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("LLorg/mockito/asm/tree/analysis/BasicInterpreter;;", (java.lang.Throwable) analyzerException69);
        boolean boolean81 = type41.equals((java.lang.Object) analyzerException69);
        int int82 = type41.getSort();
        org.mockito.asm.Type type83 = type41.getElementType();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(I)V" + "'", str48, "(I)V");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str49, "(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str50, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertNotNull(type83);
    }

    @Test
    public void test11893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11893");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean3 = type1.equals((java.lang.Object) 88);
        java.lang.String str4 = type1.toString();
        java.lang.String str5 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str38 = type37.toString();
        int int39 = type37.getSort();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type37, type40, type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter33.newValue(type35);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter6.merge(value31, value44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str47 = type46.toString();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter6.newValue(type46);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        int int53 = type52.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter6.newValue(type52);
        java.lang.String str55 = type52.getClassName();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str58 = type57.getClassName();
        org.mockito.asm.Type[] typeArray60 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray60);
        int int63 = type52.getSize();
        java.lang.Class<?> wildcardClass64 = type52.getClass();
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        boolean boolean66 = type1.equals((java.lang.Object) wildcardClass64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        java.lang.String str68 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        java.lang.String str69 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L(I)V;" + "'", str4, "L(I)V;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(I)V" + "'", str5, "(I)V");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "V" + "'", str38, "V");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VVI)J" + "'", str43, "(VVI)J");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(I)V" + "'", str50, "(I)V");
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "char" + "'", str55, "char");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "void" + "'", str58, "void");
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(I)V" + "'", str61, "(I)V");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(I)C" + "'", str62, "(I)C");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/Type" + "'", str65, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org/mockito/asm/Type" + "'", str68, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org/mockito/asm/Type" + "'", str69, "org/mockito/asm/Type");
    }

    @Test
    public void test11894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11894");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value47);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type53, type56, type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter49.newValue(type51);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter22.merge(value47, value60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str63 = type62.toString();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter22.newValue(type62);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter22.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = type71.getSort();
        boolean boolean75 = type71.equals((java.lang.Object) (-1.0d));
        int int76 = type71.getSort();
        java.lang.String str77 = type71.getClassName();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter22.newValue(type71);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.copyOperation(abstractInsnNode21, value78);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value81 = basicInterpreter0.newOperation(abstractInsnNode80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(I)V" + "'", str66, "(I)V");
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 7 + "'", int73 == 7);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 7 + "'", int76 == 7);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "long" + "'", str77, "long");
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
    }

    @Test
    public void test11895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11895");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        int int21 = type20.getSort();
        int int22 = type20.getSize();
        int int23 = type20.getDimensions();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter1.newValue(type20);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getObjectType("mockito.asm.Type");
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter1.newValue(type26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter28.ternaryOperation(abstractInsnNode29, value34, value40, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter55 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str60 = type59.toString();
        int int61 = type59.getSort();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type59, type62, type63 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray64);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter55.newValue(type57);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter28.merge(value53, value66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.toString();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray71);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter28.newValue(type68);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        int int75 = type74.getSort();
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter28.newValue(type74);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getObjectType("(I)V");
        java.lang.Throwable throwable81 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Throwable) analyzerException82);
        java.lang.Throwable[] throwableArray84 = analyzerException83.getSuppressed();
        boolean boolean85 = type78.equals((java.lang.Object) throwableArray84);
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter28.newValue(type78);
        boolean boolean88 = type78.equals((java.lang.Object) 18);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter1.newValue(type78);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass91 = type90.getClass();
        java.lang.String str92 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass91);
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass91);
        java.lang.String str94 = type93.getDescriptor();
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter1.newValue(type93);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode96 = null;
        org.mockito.asm.tree.analysis.Value value97 = null;
        org.mockito.asm.tree.analysis.Value value98 = basicInterpreter1.copyOperation(abstractInsnNode96, value97);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNull(value48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "V" + "'", str60, "V");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VVI)J" + "'", str65, "(VVI)J");
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(I)V" + "'", str72, "(I)V");
        org.junit.Assert.assertNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org/mockito/asm/Type" + "'", str92, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str94, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertNull(value98);
    }

    @Test
    public void test11896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11896");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter0.newValue(type5);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value32);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str39 = type38.toString();
        int int40 = type38.getSort();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type38, type41, type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter34.newValue(type36);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter7.merge(value32, value45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.toString();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter7.newValue(type47);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter7.newValue(type54);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter56 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type57 = null;
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean61 = type59.equals((java.lang.Object) 180);
        java.lang.String str62 = type59.toString();
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter56.newValue(type59);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter7.newValue(type59);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type59);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray69);
        java.lang.Class<?> wildcardClass71 = type66.getClass();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass71);
        org.mockito.asm.Type type73 = type72.getElementType();
        org.mockito.asm.Type type74 = type73.getElementType();
        int int75 = type74.getSize();
        org.mockito.asm.Type type76 = type74.getElementType();
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter0.newValue(type74);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str79 = type78.getDescriptor();
        java.lang.String str80 = type78.getClassName();
        int int82 = type78.getOpcode(17);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter0.newValue(type78);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(VVI)J" + "'", str44, "(VVI)J");
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(I)V" + "'", str51, "(I)V");
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "C" + "'", str62, "C");
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(I)V" + "'", str70, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "S" + "'", str79, "S");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "short" + "'", str80, "short");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 17 + "'", int82 == 17);
        org.junit.Assert.assertNotNull(value83);
    }

    @Test
    public void test11897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11897");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        int int2 = type1.getDimensions();
        java.lang.String str3 = type1.toString();
        int int4 = type1.getDimensions();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass6 = basicInterpreter5.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str14 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        java.lang.String str16 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean17 = type1.equals((java.lang.Object) wildcardClass6);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;" + "'", str3, "Lrg.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str7, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str9, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str11, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str13, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str14, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str15, "org/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str16, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test11898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11898");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str31 = type30.toString();
        int int32 = type30.getSort();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type30, type33, type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        java.lang.Class<?> wildcardClass37 = typeArray35.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter0.newValue(type39);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.Value value42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.copyOperation(abstractInsnNode41, value42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.BasicValue;");
        int int46 = type45.getSize();
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter0.newValue(type45);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value49 = basicInterpreter0.newOperation(abstractInsnNode48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "V" + "'", str31, "V");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VVI)J" + "'", str36, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str38, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(value47);
    }

    @Test
    public void test11899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11899");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type4, type7, type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type2);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type14 = null;
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter13.newValue(type14);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode12, value15);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType("VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J");
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean23 = type21.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass24 = type21.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass24);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter27.ternaryOperation(abstractInsnNode28, value33, value39, value45);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter27.newValue(type48);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)L(I)V;");
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter27.newValue(type53);
        int int55 = value54.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Object) type26, value54);
        boolean boolean57 = type19.equals((java.lang.Object) value54);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.copyOperation(abstractInsnNode17, value54);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode59 = null;
        org.mockito.asm.tree.analysis.Value value60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value61 = basicInterpreter0.unaryOperation(abstractInsnNode59, value60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(VVI)J" + "'", str10, "(VVI)J");
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/Type" + "'", str25, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(value58);
    }

    @Test
    public void test11900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11900");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        boolean boolean22 = type1.equals((java.lang.Object) basicInterpreter10);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.String str26 = type23.toString();
        java.lang.String str27 = type23.getDescriptor();
        int int28 = type23.getSize();
        java.lang.String str29 = type23.getClassName();
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.newValue(type23);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode31 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter32.ternaryOperation(abstractInsnNode33, value38, value44, value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value57);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter59 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.toString();
        int int65 = type63.getSort();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type63, type66, type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter59.newValue(type61);
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter32.merge(value57, value70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter10.copyOperation(abstractInsnNode31, value57);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getObjectType("(I)Lorg/mockito/asm/Type;");
        int int76 = type74.getOpcode(117);
        java.lang.String str77 = type74.getDescriptor();
        java.lang.String str78 = type74.getDescriptor();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter10.newValue(type74);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode80 = null;
        java.util.List list81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value82 = basicInterpreter10.naryOperation(abstractInsnNode80, list81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "char" + "'", str29, "char");
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(VVI)J" + "'", str69, "(VVI)J");
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 121 + "'", int76 == 121);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L(I)Lorg/mockito/asm/Type;;" + "'", str77, "L(I)Lorg/mockito/asm/Type;;");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L(I)Lorg/mockito/asm/Type;;" + "'", str78, "L(I)Lorg/mockito/asm/Type;;");
        org.junit.Assert.assertNotNull(value79);
    }

    @Test
    public void test11901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11901");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(I)V");
        int int2 = type1.getSize();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        java.lang.String str6 = type3.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str12 = type11.toString();
        int int13 = type11.getSort();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type11, type14, type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter7.newValue(type9);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean22 = type20.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean28 = type26.equals((java.lang.Object) 180);
        java.lang.String str29 = type26.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type9, type19, type20, type24, type26, type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray31);
        int int33 = type3.getSort();
        int int35 = type3.getOpcode(129);
        int int36 = type3.getSort();
        org.mockito.asm.Type[] typeArray38 = org.mockito.asm.Type.getArgumentTypes("(I)Z");
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray38);
        boolean boolean40 = type1.equals((java.lang.Object) str39);
        org.mockito.asm.Type type41 = type1.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(VVI)J" + "'", str17, "(VVI)J");
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(JDCJCI)V" + "'", str32, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 134 + "'", int35 == 134);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(I)V" + "'", str39, "(I)V");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
    }

    @Test
    public void test11902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11902");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass1 = basicInterpreter0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        int int6 = type5.getSize();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = type5.getElementType();
        int int9 = type8.getSize();
        int int10 = type8.getSort();
        int int11 = type8.getDimensions();
        java.lang.String str12 = type8.getInternalName();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str2, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "g/mockito/asm/tree/analysis/BasicInterpreter" + "'", str12, "g/mockito/asm/tree/analysis/BasicInterpreter");
    }

    @Test
    public void test11903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11903");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value20);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.ternaryOperation(abstractInsnNode3, value8, value14, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value27);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type33, type36, type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter29.newValue(type31);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter2.merge(value27, value40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.toString();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter2.newValue(type42);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter2.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str52 = type51.toString();
        int int53 = type51.getSort();
        java.lang.String str54 = type51.getDescriptor();
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier50.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.toString();
        int int63 = type61.getSort();
        java.lang.String str64 = type61.getDescriptor();
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter66 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type67 = null;
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value73);
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier60.merge(value68, value73);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter2.merge(value58, value68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("Lhi!;", obj1, value68);
        java.lang.Throwable[] throwableArray78 = analyzerException77.getSuppressed();
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNull(value22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)J" + "'", str39, "(VVI)J");
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(I)V" + "'", str46, "(I)V");
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "V" + "'", str52, "V");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test11904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11904");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType("Lrg.mockito.asm.tree.analysis.AnalyzerException: Lrg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg.mockito.asm.Type;");
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter0.newValue(type31);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newOperation(abstractInsnNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
    }

    @Test
    public void test11905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11905");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        boolean boolean22 = type1.equals((java.lang.Object) basicInterpreter10);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str24 = type23.getClassName();
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter10.newValue(type23);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        java.util.List list27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value28 = basicInterpreter10.naryOperation(abstractInsnNode26, list27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "long" + "'", str24, "long");
        org.junit.Assert.assertNotNull(value25);
    }

    @Test
    public void test11906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11906");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType("LC;");
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier0.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BYTE_TYPE;
        int int13 = type12.getSize();
        int int14 = type12.getSort();
        int int15 = type12.getSort();
        java.lang.String str16 = type12.toString();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean19 = type17.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass20 = type17.getClass();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass20);
        java.lang.String str22 = type21.toString();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str24 = type23.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        int int30 = type28.getSort();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type28, type31, type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str39 = type38.toString();
        int int40 = type38.getSort();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type38, type41, type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray43);
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray43);
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray43);
        org.mockito.asm.Type type48 = type21.getElementType();
        org.mockito.asm.Type type49 = type21.getElementType();
        java.lang.String str50 = type21.getInternalName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str52 = type51.toString();
        int int53 = type51.getSort();
        java.lang.String str54 = type51.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter55 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str60 = type59.toString();
        int int61 = type59.getSort();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type59, type62, type63 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray64);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter55.newValue(type57);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean70 = type68.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean76 = type74.equals((java.lang.Object) 180);
        java.lang.String str77 = type74.toString();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type57, type67, type68, type72, type74, type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray79);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray79);
        int int82 = type21.getSort();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str85 = type84.getClassName();
        org.mockito.asm.Type[] typeArray87 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type84, typeArray87);
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray87);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray87);
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier0.newValue(type12);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "B" + "'", str16, "B");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "char" + "'", str24, "char");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VVI)J" + "'", str34, "(VVI)J");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(VVI)J" + "'", str44, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VVI)J" + "'", str45, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)C" + "'", str46, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str47, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/asm/Type" + "'", str50, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "V" + "'", str52, "V");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "V" + "'", str60, "V");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VVI)J" + "'", str65, "(VVI)J");
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(JDCJCI)V" + "'", str80, "(JDCJCI)V");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(JDCJCI)Lorg/mockito/asm/Type;" + "'", str81, "(JDCJCI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "void" + "'", str85, "void");
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(I)V" + "'", str88, "(I)V");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str89, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(I)B" + "'", str90, "(I)B");
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test11907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11907");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass1 = basicInterpreter0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type10 = type9.getElementType();
        java.lang.String str11 = type9.getDescriptor();
        int int13 = type9.getOpcode(0);
        int int14 = type9.getSort();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str2, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str4, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str6, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str8, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str11, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 4 + "'", int13 == 4);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test11908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11908");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean46 = type44.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass47 = type44.getClass();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        java.lang.String str49 = type48.toString();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        int int57 = type55.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type55, type58, type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str66 = type65.toString();
        int int67 = type65.getSort();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type65, type68, type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray70);
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray70);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray70);
        org.mockito.asm.Type type75 = type48.getElementType();
        org.mockito.asm.Type type76 = type48.getElementType();
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier0.newValue(type48);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean80 = type78.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass81 = type78.getClass();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass81);
        java.lang.Class<?> wildcardClass83 = type82.getClass();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        int int85 = type84.getSort();
        int int86 = type84.getDimensions();
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier0.newValue(type84);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode88 = null;
        java.util.List list89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value90 = basicVerifier0.naryOperation(abstractInsnNode88, list89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "char" + "'", str51, "char");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(VVI)J" + "'", str61, "(VVI)J");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)J" + "'", str71, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VVI)C" + "'", str73, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str74, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test11909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11909");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter37.ternaryOperation(abstractInsnNode38, value43, value49, value55);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode59 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value64);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter58.ternaryOperation(abstractInsnNode59, value64, value70, value76);
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier36.merge(value43, value78);
        int int80 = value79.getSize();
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter0.copyOperation(abstractInsnNode35, value79);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode82 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter83 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type84 = null;
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter83.newValue(type84);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean88 = type86.equals((java.lang.Object) 180);
        java.lang.String str89 = type86.toString();
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter83.newValue(type86);
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter0.copyOperation(abstractInsnNode82, value90);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = basicInterpreter0.newOperation(abstractInsnNode92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNull(value57);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "C" + "'", str89, "C");
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test11910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11910");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(VVI)Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.Value value4 = basicInterpreter2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean7 = type5.equals((java.lang.Object) 180);
        java.lang.String str8 = type5.toString();
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter2.newValue(type5);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value15);
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter2.copyOperation(abstractInsnNode10, value15);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getObjectType("C");
        int int21 = type20.getSort();
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter2.newValue(type20);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int26 = type24.getOpcode((int) (byte) 1);
        int int27 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter2.newValue(type24);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean31 = type29.equals((java.lang.Object) 180);
        java.lang.String str32 = type29.toString();
        int int33 = type29.getSort();
        java.lang.String str34 = type29.getDescriptor();
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter2.newValue(type29);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type38 = type37.getElementType();
        org.mockito.asm.Type type39 = type38.getElementType();
        int int41 = type38.getOpcode(171);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter2.newValue(type38);
        java.lang.String str43 = type38.getInternalName();
        int int44 = type38.getDimensions();
        boolean boolean45 = type1.equals((java.lang.Object) type38);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "C" + "'", str8, "C");
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 175 + "'", int41 == 175);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "g/mockito/asm/tree/analysis/BasicInterpreter" + "'", str43, "g/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test11911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11911");
        java.lang.Throwable throwable2 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable2);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Z");
        java.lang.Throwable throwable8 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable8);
        java.lang.Throwable[] throwableArray10 = analyzerException9.getSuppressed();
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException9);
        java.lang.Throwable throwable15 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        java.lang.Throwable throwable22 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException23);
        analyzerException19.addSuppressed((java.lang.Throwable) analyzerException23);
        analyzerException17.addSuppressed((java.lang.Throwable) analyzerException23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        analyzerException27.addSuppressed((java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type");
        java.lang.Throwable[] throwableArray33 = analyzerException32.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException40);
        analyzerException32.addSuppressed((java.lang.Throwable) analyzerException40);
        analyzerException27.addSuppressed((java.lang.Throwable) analyzerException32);
        analyzerException9.addSuppressed((java.lang.Throwable) analyzerException27);
        java.lang.Throwable[] throwableArray45 = analyzerException27.getSuppressed();
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException27);
        java.lang.Throwable[] throwableArray47 = analyzerException4.getSuppressed();
        java.lang.Class<?> wildcardClass48 = throwableArray47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[Ljava/lang/Throwable;" + "'", str49, "[Ljava/lang/Throwable;");
        org.junit.Assert.assertNotNull(type50);
    }

    @Test
    public void test11912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11912");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lchar;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type8 = type7.getElementType();
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier2.newValue(type8);
        boolean boolean10 = type1.equals((java.lang.Object) basicVerifier2);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass12 = basicInterpreter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        java.lang.String str17 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        java.lang.String str19 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type21 = type20.getElementType();
        java.lang.String str22 = type21.getInternalName();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass26 = type23.getClass();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str28 = type27.toString();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str30 = type29.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str35 = type34.toString();
        int int36 = type34.getSort();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type34, type37, type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type44, type47, type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray49);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray49);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray49);
        org.mockito.asm.Type type54 = type27.getElementType();
        org.mockito.asm.Type type55 = type27.getElementType();
        java.lang.String str56 = type27.getInternalName();
        java.lang.String str57 = type27.getInternalName();
        int int58 = type27.getSize();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean62 = type60.equals((java.lang.Object) 88);
        int int63 = type60.getSort();
        org.mockito.asm.Type type64 = type60.getElementType();
        java.lang.Class<?> wildcardClass65 = type64.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        int int68 = type67.getSize();
        boolean boolean69 = type27.equals((java.lang.Object) type67);
        int int70 = type67.getSort();
        boolean boolean71 = type21.equals((java.lang.Object) int70);
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier2.newValue(type21);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str13, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str15, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str17, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str19, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "g/mockito/asm/tree/analysis/BasicInterpreter" + "'", str22, "g/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str28, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "char" + "'", str30, "char");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "V" + "'", str35, "V");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(VVI)J" + "'", str40, "(VVI)J");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VVI)J" + "'", str50, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VVI)J" + "'", str51, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VVI)C" + "'", str52, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str53, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/Type" + "'", str56, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org/mockito/asm/Type" + "'", str57, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str66, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(value72);
    }

    @Test
    public void test11913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11913");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type66, type69, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.toString();
        int int78 = type76.getSort();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type76, type79, type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray81);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type64);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int86 = type85.getSort();
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.newValue(type85);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType("(I)LI)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter0.newValue(type89);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getReturnType("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V: expected  , but found J;");
        org.mockito.asm.Type type93 = type92.getElementType();
        org.mockito.asm.tree.analysis.Value value94 = basicInterpreter0.newValue(type93);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value96 = basicInterpreter0.newOperation(abstractInsnNode95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)J" + "'", str83, "(VVI)J");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(value94);
    }

    @Test
    public void test11914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11914");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean2 = type0.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass3 = type0.getClass();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        java.lang.String str9 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier5.newValue(type12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType("LC;");
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier5.newValue(type15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type19 = type18.getElementType();
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier5.newValue(type18);
        boolean boolean21 = type4.equals((java.lang.Object) basicVerifier5);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type24 = type23.getElementType();
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier5.newValue(type23);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass27 = basicInterpreter26.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str30 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str34 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type36 = type35.getElementType();
        java.lang.String str37 = type36.getInternalName();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean40 = type38.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass41 = type38.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.String str43 = type42.toString();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str45 = type44.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        int int51 = type49.getSort();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type49, type52, type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str60 = type59.toString();
        int int61 = type59.getSort();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type59, type62, type63 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray64);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray64);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray64);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray64);
        org.mockito.asm.Type type69 = type42.getElementType();
        org.mockito.asm.Type type70 = type42.getElementType();
        java.lang.String str71 = type42.getInternalName();
        java.lang.String str72 = type42.getInternalName();
        int int73 = type42.getSize();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean77 = type75.equals((java.lang.Object) 88);
        int int78 = type75.getSort();
        org.mockito.asm.Type type79 = type75.getElementType();
        java.lang.Class<?> wildcardClass80 = type79.getClass();
        java.lang.String str81 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        int int83 = type82.getSize();
        boolean boolean84 = type42.equals((java.lang.Object) type82);
        int int85 = type82.getSort();
        boolean boolean86 = type36.equals((java.lang.Object) int85);
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier5.newValue(type36);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type90 = type89.getElementType();
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier5.newValue(type90);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertNull(value10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str28, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str30, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str32, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str34, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "g/mockito/asm/tree/analysis/BasicInterpreter" + "'", str37, "g/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "char" + "'", str45, "char");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(VVI)J" + "'", str55, "(VVI)J");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "V" + "'", str60, "V");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VVI)J" + "'", str65, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(VVI)J" + "'", str66, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VVI)C" + "'", str67, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str68, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/Type" + "'", str71, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org/mockito/asm/Type" + "'", str72, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str81, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test11915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11915");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType("(I)LVVI)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier0.newValue(type9);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("(I)B");
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier0.newValue(type12);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type17 = null;
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter16.newValue(type17);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter20 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter20.ternaryOperation(abstractInsnNode21, value26, value32, value38);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter16.ternaryOperation(abstractInsnNode19, value32, value45, value49);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter16.newValue(type52);
        java.lang.Class<?> wildcardClass54 = type52.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str58 = type57.toString();
        int int59 = type57.getSort();
        java.lang.String str60 = type57.getDescriptor();
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean64 = type62.equals((java.lang.Object) 180);
        java.lang.String str65 = type62.toString();
        java.lang.String str66 = type62.getDescriptor();
        int int67 = type62.getSort();
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier56.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;: expected J, but found null", (java.lang.Object) str55, value68);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value70 = basicVerifier0.unaryOperation(abstractInsnNode14, value68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/Type" + "'", str55, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "V" + "'", str58, "V");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "V" + "'", str60, "V");
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "C" + "'", str65, "C");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "C" + "'", str66, "C");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test11916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11916");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter8.ternaryOperation(abstractInsnNode9, value14, value20, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str40 = type39.toString();
        int int41 = type39.getSort();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type39, type42, type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter35.newValue(type37);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter8.merge(value33, value46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean50 = type48.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass51 = type48.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter8.newValue(type52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type52);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str57 = type56.getDescriptor();
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.newValue(type56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean61 = type59.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass62 = type59.getClass();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = type63.getClass();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        int int66 = type65.getSort();
        org.mockito.asm.Type[] typeArray68 = org.mockito.asm.Type.getArgumentTypes("(JDCJCI)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray68);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type65);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value72 = basicInterpreter0.newOperation(abstractInsnNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VVI)J" + "'", str45, "(VVI)J");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "B" + "'", str57, "B");
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(JDCJCI)Lorg/mockito/asm/Type;" + "'", str69, "(JDCJCI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value70);
    }

    @Test
    public void test11917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11917");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("org/mockito/asm/tree/analysis/AnalyzerException");
        java.lang.Class<?> wildcardClass20 = type19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass20);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter1.newValue(type22);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str27 = type26.toString();
        int int28 = type26.getSort();
        java.lang.String str29 = type26.getDescriptor();
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type32 = null;
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter31.newValue(type32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value38);
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier25.merge(value33, value38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass42 = type41.getClass();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier25.newValue(type43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter1.copyOperation(abstractInsnNode24, value44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean48 = type46.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass49 = type46.getClass();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass49);
        int int52 = type50.getOpcode(0);
        int int53 = type50.getSort();
        java.lang.Class<?> wildcardClass54 = type50.getClass();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass54);
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter1.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass58 = type57.getClass();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str63 = type62.toString();
        int int64 = type62.getSort();
        boolean boolean66 = type62.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier61.newValue(type62);
        int int68 = type62.getSort();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str71 = type70.getClassName();
        org.mockito.asm.Type[] typeArray73 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray73);
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray73);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray73);
        org.mockito.asm.Type[] typeArray78 = org.mockito.asm.Type.getArgumentTypes("(I)Lrg.mockito.asm.tree.analysis.AnalyzerException: : expected (I)Lchar;");
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray78);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray78);
        java.lang.String str81 = type55.getDescriptor();
        java.lang.String str82 = type55.toString();
        int int84 = type55.getOpcode(141);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/Type" + "'", str21, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertNull(value30);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "void" + "'", str71, "void");
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(I)V" + "'", str74, "(I)V");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(I)V" + "'", str75, "(I)V");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str76, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str79, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str80, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str81, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str82, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 145 + "'", int84 == 145);
    }

    @Test
    public void test11918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11918");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.Value value4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter0.copyOperation(abstractInsnNode3, value4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str13 = type12.toString();
        int int14 = type12.getSort();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type12, type15, type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter8.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        int int23 = value22.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter8, value22);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter27.ternaryOperation(abstractInsnNode28, value33, value39, value45);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter48.ternaryOperation(abstractInsnNode49, value54, value60, value66);
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier26.merge(value33, value68);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter8.copyOperation(abstractInsnNode25, value33);
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter0.copyOperation(abstractInsnNode6, value70);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType("(JDCJCI)Lorg/mockito/asm/Type;");
        int int75 = type73.getOpcode(23);
        int int77 = type73.getOpcode(4096);
        java.lang.String str78 = type73.getInternalName();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.newValue(type73);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode80 = null;
        java.util.List list81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value82 = basicInterpreter0.naryOperation(abstractInsnNode80, list81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(VVI)J" + "'", str18, "(VVI)J");
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 27 + "'", int75 == 27);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 4100 + "'", int77 == 4100);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "JDCJCI)Lorg/mockito/asm/Type" + "'", str78, "JDCJCI)Lorg/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value79);
    }

    @Test
    public void test11919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11919");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        int int50 = type49.getSort();
        java.lang.String str51 = type49.getDescriptor();
        java.lang.String str52 = type49.getDescriptor();
        int int53 = type49.getSort();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type49);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.toString();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray58);
        java.lang.Class<?> wildcardClass60 = type55.getClass();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        org.mockito.asm.Type type62 = type61.getElementType();
        org.mockito.asm.Type type63 = type62.getElementType();
        int int65 = type63.getOpcode(121);
        boolean boolean66 = type49.equals((java.lang.Object) int65);
        int int67 = type49.getSort();
        int int68 = type49.getSort();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(I)V" + "'", str59, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 125 + "'", int65 == 125);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
    }

    @Test
    public void test11920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11920");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        int int31 = type30.getSort();
        java.lang.String str32 = type30.getDescriptor();
        java.lang.String str33 = type30.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        java.lang.Class<?> wildcardClass36 = basicInterpreter35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        java.lang.String str40 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass36);
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass36);
        boolean boolean42 = type30.equals((java.lang.Object) wildcardClass36);
        java.lang.String str43 = type30.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = type30.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str37, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str40, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str41, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "char" + "'", str43, "char");
    }

    @Test
    public void test11921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11921");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int13 = type11.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier9.newValue(type11);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter16.ternaryOperation(abstractInsnNode17, value22, value28, value34);
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier0.merge(value14, value34);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass39 = type38.getClass();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        int int41 = type40.getSort();
        java.lang.String str42 = type40.toString();
        java.lang.String str43 = type40.toString();
        java.lang.String str44 = type40.getClassName();
        java.lang.String str45 = type40.toString();
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier0.newValue(type40);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getObjectType("(I)Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type49 = type48.getElementType();
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier0.newValue(type48);
        int int51 = value50.getSize();
        java.lang.Class<?> wildcardClass52 = value50.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 87 + "'", int13 == 87);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNull(value36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.mockito.asm.Type" + "'", str44, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str45, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test11922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11922");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter29.ternaryOperation(abstractInsnNode30, value35, value41, value47);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str51 = type50.toString();
        int int52 = type50.getSort();
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter29.newValue(type50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode54 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter55 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type56 = null;
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter55.newValue(type56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter29.copyOperation(abstractInsnNode54, value57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass60 = type59.getClass();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        int int62 = type61.getSort();
        org.mockito.asm.tree.analysis.Value value63 = basicInterpreter29.newValue(type61);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode64 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        int int68 = value67.getSize();
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter29.copyOperation(abstractInsnNode64, value67);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.copyOperation(abstractInsnNode28, value69);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str74 = type73.toString();
        int int75 = type73.getSort();
        java.lang.String str76 = type73.getDescriptor();
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier72.newValue(type79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType("LC;");
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier72.newValue(type82);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.copyOperation(abstractInsnNode71, value83);
        int int85 = value83.getSize();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "V" + "'", str51, "V");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(value53);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "V" + "'", str74, "V");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "V" + "'", str76, "V");
        org.junit.Assert.assertNull(value77);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
    }

    @Test
    public void test11923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11923");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        int int31 = type30.getSort();
        java.lang.String str32 = type30.getDescriptor();
        java.lang.String str33 = type30.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type50 = null;
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter49.newValue(type50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter36.copyOperation(abstractInsnNode48, value51);
        int int53 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.copyOperation(abstractInsnNode35, value51);
        java.lang.Class<?> wildcardClass55 = basicInterpreter0.getClass();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type58 = type57.getElementType();
        java.lang.String str59 = type58.getClassName();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "g.mockito.asm.tree.analysis.BasicInterpreter" + "'", str59, "g.mockito.asm.tree.analysis.BasicInterpreter");
    }

    @Test
    public void test11924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11924");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int4 = type2.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type2);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter6.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = type30.getSize();
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter6.newValue(type30);
        java.lang.Class<?> wildcardClass34 = basicInterpreter6.getClass();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier0.newValue(type36);
        org.mockito.asm.Type type38 = null;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier0.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass41 = type40.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        int int43 = type42.getSort();
        java.lang.String str44 = type42.toString();
        int int45 = type42.getSort();
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier0.newValue(type42);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 87 + "'", int4 == 87);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str44, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertNotNull(value46);
    }

    @Test
    public void test11925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11925");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.ternaryOperation(abstractInsnNode3, value16, value29, value33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter0.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        int int39 = type38.getSort();
        java.lang.String str40 = type38.getDescriptor();
        java.lang.String str41 = type38.getDescriptor();
        int int42 = type38.getSort();
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.newValue(type38);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("Lg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter0.newValue(type45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.toString();
        int int50 = type48.getSort();
        boolean boolean52 = type48.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier47.newValue(type48);
        int int54 = type48.getSort();
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter0.newValue(type48);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int59 = type57.getOpcode((int) (byte) 1);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter0.newValue(type57);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        int int62 = type61.getSort();
        java.lang.String str63 = type61.getDescriptor();
        java.lang.String str64 = type61.getDescriptor();
        java.lang.String str65 = type61.getClassName();
        int int66 = type61.getSize();
        java.lang.Object obj67 = null;
        boolean boolean68 = type61.equals(obj67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter0.newValue(type61);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.getType("Lrg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter0.newValue(type71);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value74 = basicInterpreter0.newOperation(abstractInsnNode73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "C" + "'", str63, "C");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "C" + "'", str64, "C");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "char" + "'", str65, "char");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
    }

    @Test
    public void test11926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11926");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.merge(value8, value13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray19);
        java.lang.Class<?> wildcardClass21 = type16.getClass();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type23 = type22.getElementType();
        org.mockito.asm.Type type24 = type23.getElementType();
        int int26 = type24.getOpcode(121);
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier0.newValue(type24);
        int int29 = type24.getOpcode(56);
        java.lang.String str30 = type24.getInternalName();
        int int31 = type24.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(I)V" + "'", str20, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 125 + "'", int26 == 125);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 60 + "'", int29 == 60);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "mockito/asm/Type" + "'", str30, "mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test11927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11927");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value4);
        java.lang.Class<?> wildcardClass6 = analyzerException5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int8 = type7.getSize();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value29);
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter11.ternaryOperation(abstractInsnNode12, value17, value23, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value36);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter38 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.toString();
        int int44 = type42.getSort();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type42, type45, type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter38.newValue(type40);
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter11.merge(value36, value49);
        java.lang.Class<?> wildcardClass51 = value49.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        java.lang.String str53 = type52.getInternalName();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.toString();
        int int56 = type54.getSort();
        java.lang.String str57 = type54.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str63 = type62.toString();
        int int64 = type62.getSort();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type62, type65, type66 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray67);
        org.mockito.asm.tree.analysis.Value value69 = basicInterpreter58.newValue(type60);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean73 = type71.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean79 = type77.equals((java.lang.Object) 180);
        java.lang.String str80 = type77.toString();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray82 = new org.mockito.asm.Type[] { type60, type70, type71, type75, type77, type81 };
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray82);
        int int84 = type54.getSort();
        int int85 = type54.getSort();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str88 = type87.getClassName();
        org.mockito.asm.Type[] typeArray90 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type87, typeArray90);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray90);
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray90);
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray90);
        int int95 = type10.getSort();
        org.mockito.asm.Type[] typeArray97 = org.mockito.asm.Type.getArgumentTypes("VVI)Lorg.mockito.asm.Type");
        java.lang.String str98 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray97);
        boolean boolean99 = type7.equals((java.lang.Object) typeArray97);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(VVI)J" + "'", str48, "(VVI)J");
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str53, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "V" + "'", str57, "V");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VVI)J" + "'", str68, "(VVI)J");
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "C" + "'", str80, "C");
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(JDCJCI)V" + "'", str83, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "void" + "'", str88, "void");
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(I)V" + "'", str91, "(I)V");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(I)V" + "'", str92, "(I)V");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str93, "(I)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(I)Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str94, "(I)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 10 + "'", int95 == 10);
        org.junit.Assert.assertNotNull(typeArray97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "(VI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str98, "(VI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test11928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11928");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(I)Lchar;");
        org.mockito.asm.Type type2 = type1.getElementType();
        java.lang.String str3 = type2.getInternalName();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value22);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter4.ternaryOperation(abstractInsnNode5, value10, value16, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value29);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter31 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str36 = type35.toString();
        int int37 = type35.getSort();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type35, type38, type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter31.newValue(type33);
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter4.merge(value29, value42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray47);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter4.newValue(type44);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        int int51 = type50.getSort();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter4.newValue(type50);
        java.lang.String str53 = type50.getClassName();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str56 = type55.getClassName();
        org.mockito.asm.Type[] typeArray58 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray58);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray58);
        int int61 = type50.getSize();
        int int62 = type50.getSize();
        java.lang.Throwable throwable64 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/AnalyzerException;", throwable64);
        java.lang.Throwable throwable69 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable69);
        java.lang.Throwable[] throwableArray71 = analyzerException70.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException70);
        java.lang.Throwable[] throwableArray73 = analyzerException70.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException70);
        analyzerException65.addSuppressed((java.lang.Throwable) analyzerException70);
        boolean boolean76 = type50.equals((java.lang.Object) analyzerException65);
        org.mockito.asm.Type[] typeArray78 = org.mockito.asm.Type.getArgumentTypes("(I)B");
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray78);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray78);
        org.mockito.asm.Type[] typeArray82 = org.mockito.asm.Type.getArgumentTypes("()Z");
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray82);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lchar" + "'", str3, "Lchar");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "V" + "'", str36, "V");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(VVI)J" + "'", str41, "(VVI)J");
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(I)V" + "'", str48, "(I)V");
        org.junit.Assert.assertNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "char" + "'", str53, "char");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "void" + "'", str56, "void");
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(I)V" + "'", str59, "(I)V");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(I)C" + "'", str60, "(I)C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(I)C" + "'", str79, "(I)C");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(I)LLchar;" + "'", str80, "(I)LLchar;");
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "()LLchar;" + "'", str83, "()LLchar;");
    }

    @Test
    public void test11929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11929");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("(I)Lchar;");
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter0.newValue(type29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getObjectType("mockito.asm.tree.analysis.BasicValue");
        int int33 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type32);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass36 = type35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        java.lang.String str39 = type38.getDescriptor();
        int int40 = type38.getDimensions();
        int int41 = type38.getDimensions();
        int int42 = type38.getSize();
        java.lang.String str43 = type38.toString();
        int int44 = type38.getSize();
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type38);
        java.lang.String str46 = type38.getDescriptor();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str37, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str39, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11930");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str1 = type0.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.Value value4 = basicInterpreter2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean7 = type5.equals((java.lang.Object) 180);
        java.lang.String str8 = type5.toString();
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter2.newValue(type5);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.ternaryOperation(abstractInsnNode11, value16, value22, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value35);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str42 = type41.toString();
        int int43 = type41.getSort();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type41, type44, type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter37.newValue(type39);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter10.merge(value35, value48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean52 = type50.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass53 = type50.getClass();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter10.newValue(type54);
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter2.newValue(type54);
        boolean boolean57 = type0.equals((java.lang.Object) value56);
        int int58 = type0.getSort();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("Lg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str61 = type60.toString();
        boolean boolean62 = type0.equals((java.lang.Object) type60);
        java.lang.String str63 = type60.toString();
        org.mockito.asm.Type type64 = type60.getElementType();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "S" + "'", str1, "S");
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "C" + "'", str8, "C");
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "V" + "'", str42, "V");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(VVI)J" + "'", str47, "(VVI)J");
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lg/mockito/asm/tree/analysis/BasicValue;" + "'", str61, "Lg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Lg/mockito/asm/tree/analysis/BasicValue;" + "'", str63, "Lg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type64);
    }

    @Test
    public void test11931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11931");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        boolean boolean22 = type1.equals((java.lang.Object) basicInterpreter10);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getReturnType("(VVI)C");
        int int25 = type24.getSize();
        java.lang.String str26 = type24.getDescriptor();
        java.lang.String str27 = type24.getClassName();
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter10.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value30 = basicInterpreter10.newOperation(abstractInsnNode29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "char" + "'", str27, "char");
        org.junit.Assert.assertNotNull(value28);
    }

    @Test
    public void test11932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11932");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("Lg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type3 = type2.getElementType();
        java.lang.String str4 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str11 = type10.toString();
        int int12 = type10.getSort();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type10, type13, type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter6.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter6, value20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass26 = type23.getClass();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        int int29 = type27.getOpcode(0);
        int int30 = type27.getSort();
        org.mockito.asm.Type type31 = type27.getElementType();
        org.mockito.asm.Type type32 = type31.getElementType();
        java.lang.String str33 = type32.getClassName();
        int int34 = type32.getSize();
        java.lang.String str35 = type32.getDescriptor();
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter6.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 139, but found null", (java.lang.Object) type2, value36);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LLg/mockito/asm/tree/analysis/BasicInterpreter;;" + "'", str4, "LLg/mockito/asm/tree/analysis/BasicInterpreter;;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(VVI)J" + "'", str16, "(VVI)J");
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "mockito.asm.Type" + "'", str33, "mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lmockito/asm/Type;" + "'", str35, "Lmockito/asm/Type;");
        org.junit.Assert.assertNotNull(value36);
    }

    @Test
    public void test11933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11933");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;: expected J, but found null");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str3 = type2.toString();
        int int4 = type2.getSort();
        java.lang.String str5 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str11 = type10.toString();
        int int12 = type10.getSort();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type10, type13, type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter6.newValue(type8);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean21 = type19.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean27 = type25.equals((java.lang.Object) 180);
        java.lang.String str28 = type25.toString();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type8, type18, type19, type23, type25, type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray30);
        int int32 = type2.getSort();
        int int33 = type2.getSort();
        java.lang.String str34 = type2.toString();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter36.ternaryOperation(abstractInsnNode37, value42, value48, value54);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter57 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode58 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value75);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter57.ternaryOperation(abstractInsnNode58, value63, value69, value75);
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier35.merge(value42, value77);
        boolean boolean79 = type2.equals((java.lang.Object) basicVerifier35);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str81 = type80.toString();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray83 = new org.mockito.asm.Type[] { type82 };
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type80, typeArray83);
        java.lang.Class<?> wildcardClass85 = type80.getClass();
        java.lang.String str86 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass85);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass85);
        int int88 = type87.getSize();
        org.mockito.asm.Type type89 = type87.getElementType();
        java.lang.String str90 = type87.getClassName();
        java.lang.Class<?> wildcardClass91 = type87.getClass();
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass91);
        java.lang.String str93 = type92.toString();
        org.mockito.asm.tree.analysis.Value value94 = basicVerifier35.newValue(type92);
        boolean boolean95 = type1.equals((java.lang.Object) type92);
        java.lang.String str96 = type92.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(VVI)J" + "'", str16, "(VVI)J");
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "C" + "'", str28, "C");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(JDCJCI)V" + "'", str31, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNull(value56);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNull(value77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "V" + "'", str81, "V");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(I)V" + "'", str84, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str86, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.mockito.asm.Type" + "'", str90, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str93, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str96, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11934");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("L(VVI)C;");
        java.lang.Class<?> wildcardClass46 = type45.getClass();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier0.newValue(type47);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        java.lang.Object obj51 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter52 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type53 = null;
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean57 = type55.equals((java.lang.Object) 180);
        java.lang.String str58 = type55.toString();
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter52.newValue(type55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode60 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        int int66 = value65.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value65);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter52.copyOperation(abstractInsnNode60, value65);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getObjectType("C");
        int int71 = type70.getSort();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter52.newValue(type70);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;: expected J, but found null");
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter52.newValue(type74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lg/mockito/asm/Type;", obj51, value75);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value77 = basicVerifier0.unaryOperation(abstractInsnNode49, value75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
    }

    @Test
    public void test11935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11935");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value26);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.toString();
        int int34 = type32.getSort();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type32, type35, type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter28.newValue(type30);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.merge(value26, value39);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.merge(value26, value43);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(VVI)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type47);
        int int49 = type47.getSize();
        org.mockito.asm.Type type50 = type47.getElementType();
        java.lang.String str51 = type47.getInternalName();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VVI)J" + "'", str38, "(VVI)J");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/Type" + "'", str51, "org/mockito/asm/Type");
    }

    @Test
    public void test11936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11936");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(I)V");
        int int3 = type2.getSize();
        java.lang.String str4 = type2.getDescriptor();
        int int6 = type2.getOpcode(0);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        int int30 = type28.getSort();
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter7.newValue(type28);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode32 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter33.newValue(type34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter7.copyOperation(abstractInsnNode32, value35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean39 = type37.equals((java.lang.Object) 180);
        java.lang.String str40 = type37.toString();
        java.lang.String str41 = type37.getDescriptor();
        int int42 = type37.getSort();
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter7.newValue(type37);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        int int45 = type44.getSort();
        java.lang.String str46 = type44.getDescriptor();
        java.lang.String str47 = type44.getDescriptor();
        java.lang.String str48 = type44.getClassName();
        java.lang.String str49 = type44.getClassName();
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter7.newValue(type44);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getObjectType("VVI)Lorg/mockito/asm/Type");
        java.lang.String str53 = type52.getInternalName();
        org.mockito.asm.Type type54 = type52.getElementType();
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter7.newValue(type52);
        int int56 = value55.getSize();
        int int57 = value55.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg.mockito.asm.tree.analysis.AnalyzerException: (VVI)J;", (java.lang.Object) 0, value55);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "C" + "'", str46, "C");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "C" + "'", str47, "C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "char" + "'", str48, "char");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "char" + "'", str49, "char");
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "VVI)Lorg/mockito/asm/Type" + "'", str53, "VVI)Lorg/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
    }

    @Test
    public void test11937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11937");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str4 = type3.toString();
        int int5 = type3.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type3, type6, type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter10 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter10.newValue(type12);
        boolean boolean22 = type1.equals((java.lang.Object) basicInterpreter10);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str26 = type25.toString();
        int int27 = type25.getSort();
        java.lang.String str28 = type25.getDescriptor();
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier24.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int37 = type35.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier33.newValue(type35);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter40 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter40.ternaryOperation(abstractInsnNode41, value46, value52, value58);
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier24.merge(value38, value58);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass63 = type62.getClass();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        int int65 = type64.getSort();
        java.lang.String str66 = type64.toString();
        java.lang.String str67 = type64.toString();
        java.lang.String str68 = type64.getClassName();
        java.lang.String str69 = type64.toString();
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier24.newValue(type64);
        int int71 = value70.getSize();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter10.copyOperation(abstractInsnNode23, value70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str75 = type74.toString();
        int int76 = type74.getSort();
        boolean boolean78 = type74.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier73.newValue(type74);
        int int80 = type74.getSort();
        int int82 = type74.getOpcode(191);
        java.lang.String str83 = type74.getDescriptor();
        int int85 = type74.getOpcode(101);
        java.lang.String str86 = type74.toString();
        int int88 = type74.getOpcode(178);
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter10.newValue(type74);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = basicInterpreter10.newOperation(abstractInsnNode90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(VVI)J" + "'", str9, "(VVI)J");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "V" + "'", str26, "V");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 87 + "'", int37 == 87);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNull(value60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str66, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str67, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.mockito.asm.Type" + "'", str68, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str69, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 196 + "'", int82 == 196);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "V" + "'", str83, "V");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 106 + "'", int85 == 106);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "V" + "'", str86, "V");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 183 + "'", int88 == 183);
        org.junit.Assert.assertNull(value89);
    }

    @Test
    public void test11938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11938");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(I)B");
        int int4 = type2.getOpcode(177);
        java.lang.String str5 = type2.toString();
        java.lang.String str6 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type8 = null;
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter7.newValue(type8);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.Value value11 = null;
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter7.copyOperation(abstractInsnNode10, value11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getReturnType("(I)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter7.newValue(type14);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str19 = type18.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.toString();
        int int25 = type23.getSort();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type23, type26, type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str34 = type33.toString();
        int int35 = type33.getSort();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type33, type36, type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray38);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray38);
        int int42 = type18.getSize();
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter17.newValue(type18);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter7.copyOperation(abstractInsnNode16, value43);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter46 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value72);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter74 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str79 = type78.toString();
        int int80 = type78.getSort();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type82 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray83 = new org.mockito.asm.Type[] { type78, type81, type82 };
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray83);
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter74.newValue(type76);
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter47.merge(value72, value85);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter87 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type88 = null;
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter87.newValue(type88);
        int int90 = value89.getSize();
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter46.merge(value72, value89);
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter7.copyOperation(abstractInsnNode45, value72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException93 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/BasicValue: expected Lorg/mockito/asm/Type;", (java.lang.Object) type2, value92);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 177 + "'", int4 == 177);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "B" + "'", str5, "B");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "B" + "'", str6, "B");
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "char" + "'", str19, "char");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(VVI)J" + "'", str29, "(VVI)J");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "V" + "'", str34, "V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(VVI)J" + "'", str39, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(VVI)J" + "'", str40, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(VVI)C" + "'", str41, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "V" + "'", str79, "V");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(VVI)J" + "'", str84, "(VVI)J");
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test11939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11939");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter0.newValue(type4);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        int int10 = type8.getOpcode(116);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type8);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getReturnType("(I)LVVI)Lorg/mockito/asm/Type;");
        int int16 = type15.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter19 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value37);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter19.ternaryOperation(abstractInsnNode20, value25, value31, value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value44);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter46 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str51 = type50.toString();
        int int52 = type50.getSort();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type50, type53, type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter46.newValue(type48);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter19.merge(value44, value57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str60 = type59.toString();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter19.newValue(type59);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter19.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean70 = type68.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass71 = type68.getClass();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass71);
        int int74 = type72.getOpcode(0);
        java.lang.String str75 = type72.getInternalName();
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter19.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Object) 185, value76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;", (java.lang.Object) int16, value76);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.copyOperation(abstractInsnNode12, value76);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "B" + "'", str5, "B");
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 120 + "'", int10 == 120);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNull(value39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "V" + "'", str51, "V");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VVI)J" + "'", str56, "(VVI)J");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "V" + "'", str60, "V");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(I)V" + "'", str63, "(I)V");
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/asm/Type" + "'", str75, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value79);
    }

    @Test
    public void test11940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11940");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BYTE_TYPE;
        int int64 = type63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type63);
        java.lang.Class<?> wildcardClass66 = basicInterpreter0.getClass();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        java.lang.String str68 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        java.lang.String str69 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        java.lang.String str70 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass66);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str68, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str69, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str70, "org/mockito/asm/tree/analysis/BasicInterpreter");
    }

    @Test
    public void test11941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11941");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.merge(value8, value13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        int int19 = type16.getSort();
        java.lang.String str20 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier0.newValue(type16);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter23 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type27, type30, type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter23.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        int int38 = value37.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter23, value37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass41 = type40.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        int int43 = type42.getSort();
        int int44 = type42.getSize();
        int int45 = type42.getDimensions();
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter23.newValue(type42);
        java.lang.String str47 = type42.toString();
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier0.newValue(type42);
        org.mockito.asm.Type type49 = type42.getElementType();
        int int50 = type42.getSize();
        int int52 = type42.getOpcode(125);
        java.lang.String str53 = type42.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "void" + "'", str20, "void");
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(VVI)J" + "'", str33, "(VVI)J");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 129 + "'", int52 == 129);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/asm/Type" + "'", str53, "org/mockito/asm/Type");
    }

    @Test
    public void test11942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11942");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter18 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type19 = null;
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean23 = type21.equals((java.lang.Object) 180);
        java.lang.String str24 = type21.toString();
        org.mockito.asm.tree.analysis.Value value25 = basicInterpreter18.newValue(type21);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter26.ternaryOperation(abstractInsnNode27, value32, value38, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value51);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str58 = type57.toString();
        int int59 = type57.getSort();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type57, type60, type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter53.newValue(type55);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter26.merge(value51, value64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass69 = type66.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter26.newValue(type70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter18.newValue(type70);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str74 = type73.getClassName();
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter18.newValue(type73);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter0.copyOperation(abstractInsnNode17, value75);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        java.lang.String str79 = type78.toString();
        int int80 = type78.getSort();
        int int82 = type78.getOpcode(45);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter0.newValue(type78);
        int int84 = value83.getSize();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "C" + "'", str24, "C");
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNull(value46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "V" + "'", str58, "V");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VVI)J" + "'", str63, "(VVI)J");
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "long" + "'", str74, "long");
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str79, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 49 + "'", int82 == 49);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test11943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11943");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter0.newValue(type4);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        int int10 = type8.getOpcode(116);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type8);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.Value value13 = null;
        org.mockito.asm.tree.analysis.Value value14 = basicInterpreter0.copyOperation(abstractInsnNode12, value13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        org.mockito.asm.tree.analysis.Value value16 = null;
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter0.copyOperation(abstractInsnNode15, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.toString();
        int int21 = type19.getSort();
        java.lang.String str22 = type19.getDescriptor();
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter25 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str30 = type29.toString();
        int int31 = type29.getSort();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type29, type32, type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter25.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        int int40 = value39.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter25, value39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass43 = type42.getClass();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        int int45 = type44.getSort();
        int int46 = type44.getSize();
        int int47 = type44.getDimensions();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter25.newValue(type44);
        java.lang.String str49 = type44.toString();
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier18.newValue(type44);
        java.lang.String str51 = type44.getDescriptor();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter0.newValue(type44);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        java.lang.String str56 = type53.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter57 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.toString();
        int int63 = type61.getSort();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type61, type64, type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter57.newValue(type59);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean72 = type70.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean78 = type76.equals((java.lang.Object) 180);
        java.lang.String str79 = type76.toString();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type59, type69, type70, type74, type76, type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray81);
        int int83 = type53.getSort();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type53);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value86 = basicInterpreter0.newOperation(abstractInsnNode85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "B" + "'", str5, "B");
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 120 + "'", int10 == 120);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNull(value14);
        org.junit.Assert.assertNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VVI)J" + "'", str35, "(VVI)J");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str51, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VVI)J" + "'", str67, "(VVI)J");
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "C" + "'", str79, "C");
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(JDCJCI)V" + "'", str82, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(value84);
    }

    @Test
    public void test11944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11944");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str7 = type6.toString();
        int int8 = type6.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type6, type9, type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type16, type19, type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray21);
        int int25 = type1.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter0.newValue(type27);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.Value value30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter0.copyOperation(abstractInsnNode29, value30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass33 = type32.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        java.lang.String str35 = type34.getClassName();
        java.lang.String str36 = type34.getDescriptor();
        int int38 = type34.getOpcode(149);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.newValue(type34);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int42 = type41.getDimensions();
        int int44 = type41.getOpcode(198);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type41);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getObjectType("L(I)V;");
        org.mockito.asm.Type type48 = type47.getElementType();
        int int49 = type47.getSize();
        java.lang.String str50 = type47.getDescriptor();
        int int51 = type47.getSort();
        int int52 = type47.getDimensions();
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter0.newValue(type47);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode54 = null;
        java.util.List list55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value56 = basicInterpreter0.naryOperation(abstractInsnNode54, list55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "char" + "'", str2, "char");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VVI)J" + "'", str12, "(VVI)J");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VVI)J" + "'", str22, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)C" + "'", str24, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.mockito.asm.Type" + "'", str35, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str36, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 153 + "'", int38 == 153);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 202 + "'", int44 == 202);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LL(I)V;;" + "'", str50, "LL(I)V;;");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
    }

    @Test
    public void test11945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11945");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        int int31 = type30.getSort();
        java.lang.String str32 = type30.getDescriptor();
        java.lang.String str33 = type30.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type50 = null;
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter49.newValue(type50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter36.copyOperation(abstractInsnNode48, value51);
        int int53 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.copyOperation(abstractInsnNode35, value51);
        org.mockito.asm.Type type55 = null;
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter0.newValue(type55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        org.mockito.asm.tree.analysis.Value value58 = null;
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter0.copyOperation(abstractInsnNode57, value58);
        org.mockito.asm.Type type60 = null;
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter0.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str63 = type62.toString();
        boolean boolean65 = type62.equals((java.lang.Object) 87);
        int int67 = type62.getOpcode(118);
        int int69 = type62.getOpcode(39);
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter0.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str73 = type72.toString();
        int int74 = type72.getSort();
        java.lang.String str75 = type72.getDescriptor();
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean79 = type77.equals((java.lang.Object) 180);
        java.lang.String str80 = type77.toString();
        java.lang.String str81 = type77.getDescriptor();
        int int82 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier71.newValue(type77);
        int int85 = type77.getOpcode(55);
        java.lang.String str86 = type77.toString();
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.newValue(type77);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNull(value59);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 123 + "'", int67 == 123);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 44 + "'", int69 == 44);
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "V" + "'", str73, "V");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "C" + "'", str80, "C");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 55 + "'", int85 == 55);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test11946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11946");
        java.lang.Object obj2 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter3.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter3.ternaryOperation(abstractInsnNode6, value19, value32, value36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/tree/analysis/BasicValue;", obj2, value32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("VVI)Lorg.mockito.asm.Type", (java.lang.Throwable) analyzerException38);
        java.lang.Throwable[] throwableArray40 = analyzerException39.getSuppressed();
        java.lang.Class<?> wildcardClass41 = throwableArray40.getClass();
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test11947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11947");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter8.ternaryOperation(abstractInsnNode9, value14, value20, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str40 = type39.toString();
        int int41 = type39.getSort();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type39, type42, type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter35.newValue(type37);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter8.merge(value33, value46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean50 = type48.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass51 = type48.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter8.newValue(type52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str56 = type55.getClassName();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.newValue(type55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        int int61 = type59.getSort();
        boolean boolean63 = type59.equals((java.lang.Object) (-1.0d));
        int int64 = type59.getSort();
        java.lang.String str65 = type59.getClassName();
        java.lang.String str66 = type59.toString();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter0.newValue(type59);
        int int68 = type59.getSort();
        java.lang.String str69 = type59.getDescriptor();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VVI)J" + "'", str45, "(VVI)J");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "long" + "'", str56, "long");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 7 + "'", int61 == 7);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 7 + "'", int64 == 7);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "long" + "'", str65, "long");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "J" + "'", str66, "J");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 7 + "'", int68 == 7);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "J" + "'", str69, "J");
    }

    @Test
    public void test11948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11948");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(VVI)B");
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = basicInterpreter0.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.Value value8 = null;
        org.mockito.asm.tree.analysis.Value value9 = basicInterpreter0.copyOperation(abstractInsnNode7, value8);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.Value value11 = null;
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter0.copyOperation(abstractInsnNode10, value11);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode13 = null;
        org.mockito.asm.tree.analysis.Value value14 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type17 = null;
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean21 = type19.equals((java.lang.Object) 180);
        java.lang.String str22 = type19.toString();
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter16.newValue(type19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        int int30 = value29.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value29);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter16.copyOperation(abstractInsnNode24, value29);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("char");
        org.mockito.asm.Type[] typeArray38 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray38);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter40 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type41 = null;
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) str39, value42);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter16.copyOperation(abstractInsnNode33, value42);
        int int46 = value45.getSize();
        int int47 = value45.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type52, type55, type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter48.newValue(type50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode60 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter61 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode62 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value79);
        org.mockito.asm.tree.analysis.Value value81 = basicInterpreter61.ternaryOperation(abstractInsnNode62, value67, value73, value79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str83 = type82.toString();
        int int84 = type82.getSort();
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter61.newValue(type82);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode86 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter87 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type88 = null;
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter87.newValue(type88);
        org.mockito.asm.tree.analysis.Value value90 = basicInterpreter61.copyOperation(abstractInsnNode86, value89);
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter48.copyOperation(abstractInsnNode60, value90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)J: expected V, but found .", (java.lang.Object) value45, value91);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = basicInterpreter0.binaryOperation(abstractInsnNode13, value14, value45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "B" + "'", str5, "B");
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNull(value9);
        org.junit.Assert.assertNull(value12);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "C" + "'", str22, "C");
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(I)Lchar;" + "'", str39, "(I)Lchar;");
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)J" + "'", str58, "(VVI)J");
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNull(value81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "V" + "'", str83, "V");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(value85);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test11949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11949");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.Value value4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter0.copyOperation(abstractInsnNode3, value4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getReturnType("(I)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter0.newValue(type7);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter9 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type12 = null;
        org.mockito.asm.tree.analysis.Value value13 = basicInterpreter11.newValue(type12);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter15 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter15.ternaryOperation(abstractInsnNode16, value21, value27, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter38 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type39 = null;
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter11.ternaryOperation(abstractInsnNode14, value27, value40, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter52 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value64);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter52.ternaryOperation(abstractInsnNode53, value58, value64, value70);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter9.ternaryOperation(abstractInsnNode10, value40, value50, value70);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean76 = type74.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass77 = type74.getClass();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass77);
        java.lang.String str79 = type78.toString();
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter9.newValue(type78);
        int int81 = type78.getSize();
        java.lang.String str82 = type78.getDescriptor();
        java.lang.String str83 = type78.getDescriptor();
        org.mockito.asm.Type type84 = type78.getElementType();
        java.lang.String str85 = type84.getInternalName();
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter0.newValue(type84);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J");
        java.lang.String str89 = type88.getInternalName();
        boolean boolean91 = type88.equals((java.lang.Object) 132);
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter0.newValue(type88);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value35);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNull(value72);
        org.junit.Assert.assertNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str79, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str82, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str83, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "g/mockito/asm/Type" + "'", str85, "g/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J" + "'", str89, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test11950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11950");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode4 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.Value value23 = basicInterpreter3.ternaryOperation(abstractInsnNode4, value9, value15, value21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter3.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter29 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter29.newValue(type30);
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter3.copyOperation(abstractInsnNode28, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter34.ternaryOperation(abstractInsnNode35, value40, value46, value52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter61 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str66 = type65.toString();
        int int67 = type65.getSort();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type65, type68, type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter61.newValue(type63);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter34.merge(value59, value72);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter74 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type75 = null;
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter33.merge(value59, value76);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.merge(value31, value59);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getObjectType("L(I)V;");
        org.mockito.asm.Type type82 = type81.getElementType();
        int int83 = type81.getDimensions();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type81);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str87 = type86.getInternalName();
        org.mockito.asm.Type type88 = type86.getElementType();
        org.mockito.asm.tree.analysis.Value value89 = basicInterpreter0.newValue(type86);
        java.lang.String str90 = type86.getInternalName();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNull(value54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)J" + "'", str71, "(VVI)J");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str87, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str90, "org/mockito/asm/tree/analysis/AnalyzerException");
    }

    @Test
    public void test11951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11951");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        boolean boolean5 = type1.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str11 = type10.toString();
        int int12 = type10.getSort();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type10, type13, type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str21 = type20.toString();
        int int22 = type20.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type20, type23, type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray25);
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray25);
        int int29 = type8.getOpcode((int) 'a');
        java.lang.String str30 = type8.getClassName();
        int int31 = type8.getSort();
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier0.newValue(type8);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        java.util.List list34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value35 = basicVerifier0.naryOperation(abstractInsnNode33, list34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(VVI)J" + "'", str16, "(VVI)J");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "V" + "'", str21, "V");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(VVI)J" + "'", str26, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(VVI)J" + "'", str27, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 98 + "'", int29 == 98);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "long" + "'", str30, "long");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(value32);
    }

    @Test
    public void test11952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11952");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean29 = type27.equals((java.lang.Object) 180);
        java.lang.String str30 = type27.toString();
        int int31 = type27.getSort();
        java.lang.String str32 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter0.newValue(type27);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType("L(I)V;");
        java.lang.String str36 = type35.getClassName();
        org.mockito.asm.Type type37 = type35.getElementType();
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter0.newValue(type37);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter39 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value57);
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter39.ternaryOperation(abstractInsnNode40, value45, value51, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value64);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter66 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str71 = type70.toString();
        int int72 = type70.getSort();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type74 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type70, type73, type74 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray75);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter66.newValue(type68);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter39.merge(value64, value77);
        java.lang.Class<?> wildcardClass79 = value77.getClass();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        java.lang.Object obj81 = null;
        boolean boolean82 = type80.equals(obj81);
        java.lang.String str83 = type80.toString();
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter0.newValue(type80);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode85 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter86 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type87 = null;
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter86.newValue(type87);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass90 = type89.getClass();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass90);
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter86.newValue(type91);
        int int93 = value92.getSize();
        int int94 = value92.getSize();
        int int95 = value92.getSize();
        int int96 = value92.getSize();
        org.mockito.asm.tree.analysis.Value value97 = basicInterpreter0.copyOperation(abstractInsnNode85, value92);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(I)V" + "'", str36, "(I)V");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNull(value59);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "V" + "'", str71, "V");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(VVI)J" + "'", str76, "(VVI)J");
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str83, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertNotNull(value97);
    }

    @Test
    public void test11953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11953");
        java.lang.Throwable throwable2 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type[]", throwable2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value10);
        java.lang.Throwable[] throwableArray12 = analyzerException11.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException11);
        java.lang.Throwable[] throwableArray14 = analyzerException13.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)V", (java.lang.Throwable) analyzerException13);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: : expected (I)Lchar;, but found .", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        int int27 = value26.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.BasicInterpreter", (java.lang.Object) 22, value26);
        java.lang.Throwable[] throwableArray30 = analyzerException29.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("g/mockito/asm/Type", (java.lang.Throwable) analyzerException37);
        java.lang.Throwable[] throwableArray39 = analyzerException38.getSuppressed();
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (VVI)L(I)Z;: expected class org.mockito.asm.Type, but found I", (java.lang.Throwable) analyzerException38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("I)LVVI)Lorg.mockito.asm.Type", (java.lang.Throwable) analyzerException41);
        analyzerException17.addSuppressed((java.lang.Throwable) analyzerException41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
        analyzerException45.addSuppressed((java.lang.Throwable) analyzerException47);
        analyzerException41.addSuppressed((java.lang.Throwable) analyzerException45);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(throwableArray39);
    }

    @Test
    public void test11954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11954");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        int int21 = type20.getSort();
        int int22 = type20.getSize();
        int int23 = type20.getDimensions();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter1.newValue(type20);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean27 = type25.equals((java.lang.Object) 180);
        java.lang.String str28 = type25.toString();
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter1.newValue(type25);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str31 = type30.toString();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray33);
        java.lang.Class<?> wildcardClass35 = type30.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        int int38 = type37.getSize();
        org.mockito.asm.Type type39 = type37.getElementType();
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter1.newValue(type37);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.Value value42 = null;
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter1.copyOperation(abstractInsnNode41, value42);
        java.lang.Throwable throwable46 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException47);
        java.lang.Throwable throwable51 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException52);
        analyzerException47.addSuppressed((java.lang.Throwable) analyzerException52);
        java.lang.Class<?> wildcardClass55 = analyzerException47.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass55);
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass55);
        java.lang.String str58 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        int int65 = type63.getOpcode(173);
        java.lang.String str66 = type63.toString();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter1.newValue(type63);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "C" + "'", str28, "C");
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "V" + "'", str31, "V");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(I)V" + "'", str34, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str36, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str56, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str57, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str58, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str60, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str61, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str62, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 177 + "'", int65 == 177);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str66, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(value67);
    }

    @Test
    public void test11955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11955");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.Type type8 = type6.getElementType();
        org.mockito.asm.Type type9 = type6.getElementType();
        org.mockito.asm.tree.analysis.Value value10 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)B", (java.lang.Object) type6, value10);
        int int12 = type6.getDimensions();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        int int14 = type13.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter15 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter15.ternaryOperation(abstractInsnNode16, value21, value27, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value40);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter42 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str47 = type46.toString();
        int int48 = type46.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type46, type49, type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter42.newValue(type44);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter15.merge(value40, value53);
        java.lang.Class<?> wildcardClass55 = value53.getClass();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = null;
        boolean boolean58 = type56.equals(obj57);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int61 = type60.getDimensions();
        org.mockito.asm.Type[] typeArray63 = org.mockito.asm.Type.getArgumentTypes("(JDCJCI)LC;");
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray63);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray63);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray63);
        int int69 = type6.getOpcode(8194);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNull(value35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VVI)J" + "'", str52, "(VVI)J");
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(JDCJCI)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str64, "(JDCJCI)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(JDCJCI)Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str65, "(JDCJCI)Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(JDCJCI)C" + "'", str66, "(JDCJCI)C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(JDCJCI)Lorg/mockito/asm/Type;" + "'", str67, "(JDCJCI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 8198 + "'", int69 == 8198);
    }

    @Test
    public void test11956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11956");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier0.newValue(type7);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value29);
        org.mockito.asm.tree.analysis.Value value31 = basicInterpreter11.ternaryOperation(abstractInsnNode12, value17, value23, value29);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter32.ternaryOperation(abstractInsnNode33, value38, value44, value50);
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier10.merge(value17, value52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean56 = type54.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass57 = type54.getClass();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        java.lang.String str59 = type58.toString();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str61 = type60.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str66 = type65.toString();
        int int67 = type65.getSort();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type65, type68, type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str76 = type75.toString();
        int int77 = type75.getSort();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type75, type78, type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray80);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray80);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray80);
        org.mockito.asm.Type type85 = type58.getElementType();
        org.mockito.asm.Type type86 = type58.getElementType();
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier10.newValue(type58);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value88 = basicVerifier0.unaryOperation(abstractInsnNode9, value87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNull(value31);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str59, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "char" + "'", str61, "char");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VVI)J" + "'", str71, "(VVI)J");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "V" + "'", str76, "V");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VVI)J" + "'", str81, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VVI)J" + "'", str82, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VVI)C" + "'", str83, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str84, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test11957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11957");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type4, type7, type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type2);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.Value value13 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type17, type20, type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        int int30 = type28.getSort();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type28, type31, type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter24.newValue(type26);
        boolean boolean36 = type15.equals((java.lang.Object) basicInterpreter24);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean39 = type37.equals((java.lang.Object) 180);
        java.lang.String str40 = type37.toString();
        java.lang.String str41 = type37.getDescriptor();
        int int42 = type37.getSize();
        java.lang.String str43 = type37.getClassName();
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter24.newValue(type37);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.binaryOperation(abstractInsnNode12, value13, value44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(VVI)J" + "'", str10, "(VVI)J");
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VVI)J" + "'", str34, "(VVI)J");
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "char" + "'", str43, "char");
        org.junit.Assert.assertNotNull(value44);
    }

    @Test
    public void test11958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11958");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean29 = type27.equals((java.lang.Object) 180);
        java.lang.String str30 = type27.toString();
        int int31 = type27.getSort();
        java.lang.String str32 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.Value value33 = basicInterpreter0.newValue(type27);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type36 = type35.getElementType();
        org.mockito.asm.Type type37 = type36.getElementType();
        int int39 = type36.getOpcode(171);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter0.newValue(type36);
        java.lang.String str41 = type36.getClassName();
        int int43 = type36.getOpcode(69);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 175 + "'", int39 == 175);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "g.mockito.asm.tree.analysis.BasicInterpreter" + "'", str41, "g.mockito.asm.tree.analysis.BasicInterpreter");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 73 + "'", int43 == 73);
    }

    @Test
    public void test11959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11959");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        boolean boolean5 = type1.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier0.newValue(type1);
        int int7 = type1.getSort();
        int int9 = type1.getOpcode(191);
        java.lang.String str10 = type1.getDescriptor();
        int int12 = type1.getOpcode(101);
        java.lang.String str13 = type1.toString();
        int int15 = type1.getOpcode(178);
        int int16 = type1.getSize();
        java.lang.String str17 = type1.toString();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        java.lang.String str21 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        java.lang.String str24 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        boolean boolean27 = type1.equals((java.lang.Object) wildcardClass19);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 196 + "'", int9 == 196);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 106 + "'", int12 == 106);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 183 + "'", int15 == 183);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str20, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str21, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/Type" + "'", str22, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/Type" + "'", str23, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str24, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
    }

    @Test
    public void test11960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11960");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str6 = type5.toString();
        int int7 = type5.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type5, type8, type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        org.mockito.asm.tree.analysis.Value value12 = basicInterpreter1.newValue(type3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter1, value15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        int int21 = type20.getSort();
        int int22 = type20.getSize();
        int int23 = type20.getDimensions();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter1.newValue(type20);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.Value value26 = null;
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter1.copyOperation(abstractInsnNode25, value26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str29 = type28.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray31);
        java.lang.Class<?> wildcardClass33 = type28.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        int int36 = type34.getOpcode(141);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str39 = type38.getClassName();
        org.mockito.asm.Type[] typeArray41 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.Class<?> wildcardClass44 = type34.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass44);
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter1.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str50 = type49.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray52);
        java.lang.Class<?> wildcardClass54 = type49.getClass();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass54);
        java.lang.String str56 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass54);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass54);
        java.lang.String str58 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass54);
        int int60 = type59.getSize();
        int int61 = type59.getSize();
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter1.newValue(type59);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode63 = null;
        org.mockito.asm.tree.analysis.Value value64 = null;
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter1.copyOperation(abstractInsnNode63, value64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getObjectType("(JDCJCI)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter1.newValue(type67);
        java.lang.String str69 = type67.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VVI)J" + "'", str11, "(VVI)J");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(I)V" + "'", str32, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 145 + "'", int36 == 145);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "void" + "'", str39, "void");
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(I)V" + "'", str42, "(I)V");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(I)Lorg/mockito/asm/Type;" + "'", str43, "(I)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str45, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/Type" + "'", str46, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "V" + "'", str50, "V");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(I)V" + "'", str53, "(I)V");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str56, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org/mockito/asm/Type" + "'", str58, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L(JDCJCI)Lorg/mockito/asm/tree/analysis/AnalyzerException;;" + "'", str69, "L(JDCJCI)Lorg/mockito/asm/tree/analysis/AnalyzerException;;");
    }

    @Test
    public void test11961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11961");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BYTE_TYPE;
        int int30 = type29.getSize();
        java.lang.Class<?> wildcardClass31 = type29.getClass();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter32.ternaryOperation(abstractInsnNode33, value38, value44, value50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("LC;", (java.lang.Object) wildcardClass31, value50);
        int int54 = value50.getSize();
        org.mockito.asm.tree.analysis.Value value55 = basicInterpreter0.copyOperation(abstractInsnNode27, value50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        java.util.List list57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value58 = basicInterpreter0.naryOperation(abstractInsnNode56, list57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(value55);
    }

    @Test
    public void test11962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11962");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter3 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type4 = null;
        org.mockito.asm.tree.analysis.Value value5 = basicInterpreter3.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter3.ternaryOperation(abstractInsnNode6, value19, value32, value36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value62);
        org.mockito.asm.tree.analysis.Value value64 = basicInterpreter44.ternaryOperation(abstractInsnNode45, value50, value56, value62);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value32, value42, value62);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean68 = type66.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass69 = type66.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        java.lang.String str71 = type70.toString();
        org.mockito.asm.tree.analysis.Value value72 = basicInterpreter1.newValue(type70);
        int int73 = type70.getSize();
        java.lang.String str74 = type70.getDescriptor();
        org.mockito.asm.Type type75 = type70.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str78 = type77.toString();
        int int79 = type77.getSort();
        java.lang.String str80 = type77.getDescriptor();
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean84 = type82.equals((java.lang.Object) 180);
        java.lang.String str85 = type82.toString();
        java.lang.String str86 = type82.getDescriptor();
        int int87 = type82.getSort();
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier76.newValue(type82);
        int int89 = value88.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) type75, value88);
        org.mockito.asm.Type type91 = type75.getElementType();
        int int93 = type91.getOpcode(118);
        org.mockito.asm.Type type94 = type91.getElementType();
        java.lang.String str95 = type91.toString();
        java.lang.String str96 = type91.getClassName();
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNull(value37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str71, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str74, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "V" + "'", str78, "V");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "V" + "'", str80, "V");
        org.junit.Assert.assertNull(value81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "C" + "'", str86, "C");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 122 + "'", int93 == 122);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Lmockito/asm/Type;" + "'", str95, "Lmockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "mockito.asm.Type" + "'", str96, "mockito.asm.Type");
    }

    @Test
    public void test11963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11963");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter8 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter8.ternaryOperation(abstractInsnNode9, value14, value20, value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter35 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str40 = type39.toString();
        int int41 = type39.getSort();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type39, type42, type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter35.newValue(type37);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter8.merge(value33, value46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean50 = type48.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass51 = type48.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter8.newValue(type52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.newValue(type52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str56 = type55.getClassName();
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter0.newValue(type55);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getObjectType("C");
        int int60 = type59.getSize();
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter0.newValue(type59);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass63 = type62.getClass();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        int int65 = type64.getSort();
        java.lang.String str66 = type64.toString();
        int int67 = type64.getSort();
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter0.newValue(type64);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean72 = type70.equals((java.lang.Object) 88);
        java.lang.String str73 = type70.toString();
        boolean boolean75 = type70.equals((java.lang.Object) 0);
        int int77 = type70.getOpcode(116);
        java.lang.String str78 = type70.getDescriptor();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.newValue(type70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int84 = type82.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier80.newValue(type82);
        org.mockito.asm.Type type86 = type82.getElementType();
        java.lang.String str87 = type86.getClassName();
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter0.newValue(type86);
        int int89 = value88.getSize();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VVI)J" + "'", str45, "(VVI)J");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "long" + "'", str56, "long");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str66, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L(I)V;" + "'", str73, "L(I)V;");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 120 + "'", int77 == 120);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L(I)V;" + "'", str78, "L(I)V;");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 87 + "'", int84 == 87);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "int" + "'", str87, "int");
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
    }

    @Test
    public void test11964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11964");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BYTE_TYPE;
        int int64 = type63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type63);
        java.lang.Class<?> wildcardClass66 = basicInterpreter0.getClass();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getObjectType("(I)V");
        java.lang.Throwable throwable72 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Throwable) analyzerException73);
        java.lang.Throwable[] throwableArray75 = analyzerException74.getSuppressed();
        boolean boolean76 = type69.equals((java.lang.Object) throwableArray75);
        boolean boolean77 = type67.equals((java.lang.Object) type69);
        java.lang.String str78 = type67.getDescriptor();
        java.lang.String str79 = type67.getInternalName();
        java.lang.String str80 = type67.toString();
        java.lang.Class<?> wildcardClass81 = type67.getClass();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str78, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org/mockito/asm/tree/analysis/BasicInterpreter" + "'", str79, "org/mockito/asm/tree/analysis/BasicInterpreter");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str80, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test11965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11965");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean10 = type8.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass11 = type8.getClass();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass11);
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass11);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        int int18 = type17.getDimensions();
        java.lang.String str19 = type17.getDescriptor();
        org.mockito.asm.Type type20 = type17.getElementType();
        java.lang.String str21 = type20.getDescriptor();
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type20);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean26 = type24.equals((java.lang.Object) 88);
        java.lang.String str27 = type24.toString();
        boolean boolean29 = type24.equals((java.lang.Object) 0);
        java.lang.String str30 = type24.toString();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.toString();
        int int38 = type36.getSort();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type36, type39, type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str47 = type46.toString();
        int int48 = type46.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type46, type49, type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray51);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray51);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter57 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type58 = null;
        org.mockito.asm.tree.analysis.Value value59 = basicInterpreter57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value59);
        boolean boolean61 = type31.equals((java.lang.Object) analyzerException60);
        org.mockito.asm.Type[] typeArray63 = org.mockito.asm.Type.getArgumentTypes("(I)Lorg.mockito.asm.tree.analysis.AnalyzerException: F;");
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray63);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter0.newValue(type24);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/Type" + "'", str13, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/Type" + "'", str14, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str19, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lg/mockito/asm/Type;" + "'", str21, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L(I)V;" + "'", str27, "L(I)V;");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L(I)V;" + "'", str30, "L(I)V;");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "char" + "'", str32, "char");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(VVI)J" + "'", str42, "(VVI)J");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VVI)J" + "'", str52, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(VVI)J" + "'", str53, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VVI)C" + "'", str54, "(VVI)C");
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(I)C" + "'", str64, "(I)C");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(I)L(I)V;" + "'", str65, "(I)L(I)V;");
        org.junit.Assert.assertNotNull(value66);
    }

    @Test
    public void test11966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11966");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type45 = null;
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter44.newValue(type45);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value66);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter48.ternaryOperation(abstractInsnNode49, value54, value60, value66);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter44.ternaryOperation(abstractInsnNode47, value60, value73, value77);
        org.mockito.asm.tree.analysis.Value value79 = null;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier0.merge(value60, value79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass82 = type81.getClass();
        java.lang.String str83 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass82);
        java.lang.String str84 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass82);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        int int86 = type85.getSort();
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier0.newValue(type85);
        java.lang.String str88 = type85.getDescriptor();
        int int89 = type85.getDimensions();
        java.lang.Class<?> wildcardClass90 = type85.getClass();
        java.lang.String str91 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass90);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNull(value68);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNull(value78);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str83, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str84, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10 + "'", int86 == 10);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str88, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str91, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11967");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        java.lang.Class<?> wildcardClass28 = type24.getClass();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type31 = type30.getElementType();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
    }

    @Test
    public void test11968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11968");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter7.ternaryOperation(abstractInsnNode8, value13, value19, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter28.ternaryOperation(abstractInsnNode29, value34, value40, value46);
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier6.merge(value13, value48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) "void", value48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Throwable) analyzerException50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: void: expected 171, but found .", (java.lang.Throwable) analyzerException50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException50);
        java.lang.Throwable[] throwableArray54 = analyzerException53.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (I)J: expected V, but found .;", (java.lang.Throwable) analyzerException53);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNull(value27);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNull(value48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test11969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11969");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type7, type10, type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray12);
        java.lang.String str15 = type1.getClassName();
        int int17 = type1.getOpcode(167);
        java.lang.String str18 = type1.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 7 + "'", int3 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(VVI)J" + "'", str13, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(VVI)J" + "'", str14, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "long" + "'", str15, "long");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 168 + "'", int17 == 168);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "J" + "'", str18, "J");
    }

    @Test
    public void test11970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11970");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        java.lang.String str49 = type46.getClassName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str52 = type51.getClassName();
        org.mockito.asm.Type[] typeArray54 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray54);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray54);
        java.lang.Class<?> wildcardClass57 = typeArray54.getClass();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        int int60 = type59.getSort();
        java.lang.String str61 = type59.getDescriptor();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "char" + "'", str49, "char");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "void" + "'", str52, "void");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(I)V" + "'", str55, "(I)V");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(I)C" + "'", str56, "(I)C");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 9 + "'", int60 == 9);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str61, "[Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11971");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value4);
        java.lang.Throwable throwable8 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable8);
        java.lang.Throwable[] throwableArray10 = analyzerException9.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException9);
        java.lang.Throwable[] throwableArray12 = analyzerException9.getSuppressed();
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        java.lang.Throwable[] throwableArray20 = analyzerException19.getSuppressed();
        analyzerException9.addSuppressed((java.lang.Throwable) analyzerException19);
        java.lang.Throwable[] throwableArray22 = analyzerException9.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)Lorg/mockito/asm/tree/analysis/BasicInterpreter;", (java.lang.Throwable) analyzerException29);
        analyzerException9.addSuppressed((java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException34);
        java.lang.Throwable throwable38 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable38);
        java.lang.Throwable[] throwableArray40 = analyzerException39.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        analyzerException39.addSuppressed((java.lang.Throwable) analyzerException43);
        java.lang.Throwable[] throwableArray45 = analyzerException43.getSuppressed();
        analyzerException34.addSuppressed((java.lang.Throwable) analyzerException43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray50 = analyzerException49.getSuppressed();
        java.lang.Throwable[] throwableArray51 = analyzerException49.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException49);
        java.lang.Throwable[] throwableArray53 = analyzerException52.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable60 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable60);
        java.lang.Throwable[] throwableArray62 = analyzerException61.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException61);
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException61);
        java.lang.Throwable[] throwableArray65 = analyzerException61.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)V", (java.lang.Throwable) analyzerException61);
        java.lang.Throwable[] throwableArray67 = analyzerException61.getSuppressed();
        java.lang.Throwable[] throwableArray68 = analyzerException61.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Throwable) analyzerException61);
        analyzerException52.addSuppressed((java.lang.Throwable) analyzerException61);
        analyzerException43.addSuppressed((java.lang.Throwable) analyzerException61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException");
        analyzerException61.addSuppressed((java.lang.Throwable) analyzerException73);
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException61);
        java.lang.Throwable[] throwableArray76 = analyzerException61.getSuppressed();
        java.lang.String str77 = analyzerException61.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: " + "'", str77, "org.mockito.asm.tree.analysis.AnalyzerException: ");
    }

    @Test
    public void test11972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11972");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = type2.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getObjectType("(I)Z");
        int int8 = type6.getOpcode(83);
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier4.newValue(type6);
        int int10 = value9.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("char", (java.lang.Object) type2, value9);
        int int12 = type2.getSort();
        java.lang.String str13 = type2.toString();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 87 + "'", int8 == 87);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test11973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11973");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        java.lang.String str7 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean11 = type9.equals((java.lang.Object) 180);
        java.lang.String str12 = type9.toString();
        java.lang.String str13 = type9.getDescriptor();
        int int14 = type9.getSort();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier3.newValue(type9);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int17 = type16.getSort();
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier3.newValue(type16);
        java.lang.String str19 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value20 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;: expected g/mockito/asm/tree/analysis/BasicValue, but found null", (java.lang.Object) type16, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(JDCJCI)I", (java.lang.Throwable) analyzerException21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (I)LI)Lorg/mockito/asm/tree/analysis/BasicValue;: expected Lorg/mockito/asm/tree/analysis/BasicValue;, but found R", (java.lang.Throwable) analyzerException21);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
        org.junit.Assert.assertNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "C" + "'", str13, "C");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "boolean" + "'", str19, "boolean");
    }

    @Test
    public void test11974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11974");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean42 = type40.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass43 = type40.getClass();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type44);
        java.lang.String str46 = type44.toString();
        java.lang.String str47 = type44.getDescriptor();
        java.lang.String str48 = type44.getClassName();
        org.mockito.asm.Type type49 = type44.getElementType();
        org.mockito.asm.Type type50 = type44.getElementType();
        java.lang.String str51 = type50.toString();
        int int53 = type50.getOpcode(175);
        int int54 = type50.getDimensions();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.mockito.asm.Type" + "'", str48, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lg/mockito/asm/Type;" + "'", str51, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 179 + "'", int53 == 179);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test11975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11975");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type24);
        java.lang.Class<?> wildcardClass28 = basicInterpreter0.getClass();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        int int33 = type32.getDimensions();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str31, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test11976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11976");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        int int31 = type30.getSort();
        java.lang.String str32 = type30.getDescriptor();
        java.lang.String str33 = type30.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type30);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        int int42 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type40, type43, type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter36.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type50 = null;
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter49.newValue(type50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter36.copyOperation(abstractInsnNode48, value51);
        int int53 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.copyOperation(abstractInsnNode35, value51);
        org.mockito.asm.Type type55 = null;
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter0.newValue(type55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str61 = type60.toString();
        int int62 = type60.getSort();
        java.lang.String str63 = type60.getDescriptor();
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean67 = type65.equals((java.lang.Object) 180);
        java.lang.String str68 = type65.toString();
        java.lang.String str69 = type65.getDescriptor();
        int int70 = type65.getSort();
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier59.newValue(type65);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int73 = type72.getSort();
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier59.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.toString();
        int int78 = type76.getSort();
        java.lang.String str79 = type76.getDescriptor();
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier75.newValue(type76);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean83 = type81.equals((java.lang.Object) 180);
        java.lang.String str84 = type81.toString();
        java.lang.String str85 = type81.getDescriptor();
        int int86 = type81.getSort();
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier75.newValue(type81);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int89 = type88.getSort();
        org.mockito.asm.tree.analysis.Value value90 = basicVerifier75.newValue(type88);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getReturnType("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.BasicValue;");
        org.mockito.asm.tree.analysis.Value value93 = basicVerifier75.newValue(type92);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: I: expected 9, but found .", (java.lang.Object) value74, value93);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value95 = basicInterpreter0.unaryOperation(abstractInsnNode57, value74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VVI)J" + "'", str46, "(VVI)J");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "V" + "'", str61, "V");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "C" + "'", str68, "C");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "V" + "'", str79, "V");
        org.junit.Assert.assertNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "C" + "'", str84, "C");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertNotNull(value93);
    }

    @Test
    public void test11977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11977");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter26 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type27 = null;
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter26.newValue(type27);
        org.mockito.asm.tree.analysis.Value value29 = basicInterpreter0.copyOperation(abstractInsnNode25, value28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass31 = type30.getClass();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        int int33 = type32.getSort();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter0.newValue(type32);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str38 = type37.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.toString();
        int int44 = type42.getSort();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type42, type45, type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str53 = type52.toString();
        int int54 = type52.getSort();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type52, type55, type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray57);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray57);
        int int61 = type37.getSize();
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.toString();
        int int68 = type66.getSort();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type66, type69, type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        java.lang.Class<?> wildcardClass73 = typeArray71.getClass();
        java.lang.String str74 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter36.newValue(type75);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter0.copyOperation(abstractInsnNode35, value76);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode78 = null;
        org.mockito.asm.tree.analysis.Value value79 = null;
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter0.copyOperation(abstractInsnNode78, value79);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode81 = null;
        org.mockito.asm.tree.analysis.Value value82 = null;
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter0.copyOperation(abstractInsnNode81, value82);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode84 = null;
        java.util.List list85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value86 = basicInterpreter0.naryOperation(abstractInsnNode84, list85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "char" + "'", str38, "char");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(VVI)J" + "'", str48, "(VVI)J");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "V" + "'", str53, "V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VVI)J" + "'", str58, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VVI)C" + "'", str60, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VVI)J" + "'", str72, "(VVI)J");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str74, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNull(value80);
        org.junit.Assert.assertNull(value83);
    }

    @Test
    public void test11978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11978");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type2 = null;
        org.mockito.asm.tree.analysis.Value value3 = basicInterpreter1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean6 = type4.equals((java.lang.Object) 180);
        java.lang.String str7 = type4.toString();
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter1.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode9 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value14);
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter1.copyOperation(abstractInsnNode9, value14);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("C");
        int int20 = type19.getSort();
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.newValue(type19);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int25 = type23.getOpcode((int) (byte) 1);
        int int26 = type23.getSize();
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter1.newValue(type23);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean30 = type28.equals((java.lang.Object) 180);
        java.lang.String str31 = type28.toString();
        int int32 = type28.getSort();
        java.lang.String str33 = type28.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter1.newValue(type28);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType("L(I)V;");
        java.lang.String str37 = type36.getClassName();
        org.mockito.asm.Type type38 = type36.getElementType();
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter1.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass41 = type40.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        int int43 = type42.getDimensions();
        int int44 = type42.getSort();
        java.lang.String str45 = type42.getDescriptor();
        java.lang.String str46 = type42.getClassName();
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter1.newValue(type42);
        org.mockito.asm.Type type48 = null;
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter1.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str52 = type51.toString();
        int int53 = type51.getSort();
        java.lang.String str54 = type51.getDescriptor();
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean58 = type56.equals((java.lang.Object) 180);
        java.lang.String str59 = type56.toString();
        java.lang.String str60 = type56.getDescriptor();
        int int61 = type56.getSort();
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier50.newValue(type56);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int64 = type63.getSort();
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier50.newValue(type63);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getReturnType("Lg/mockito/asm/Type;");
        int int68 = type67.getSize();
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier50.newValue(type67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .;", (java.lang.Object) value49, value69);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(I)V" + "'", str37, "(I)V");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str45, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.mockito.asm.Type" + "'", str46, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "V" + "'", str52, "V");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "C" + "'", str60, "C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(value69);
    }

    @Test
    public void test11979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11979");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value19);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter1.ternaryOperation(abstractInsnNode2, value7, value13, value19);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.merge(value7, value42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass45 = type44.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        java.lang.String str50 = type49.getClassName();
        java.lang.String str51 = type49.getClassName();
        org.mockito.asm.Type type52 = type49.getElementType();
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier0.newValue(type49);
        org.mockito.asm.Type type54 = null;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier0.newValue(type54);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        org.mockito.asm.tree.analysis.Value value57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value58 = basicVerifier0.unaryOperation(abstractInsnNode56, value57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/Type" + "'", str48, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.mockito.asm.Type" + "'", str50, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.mockito.asm.Type" + "'", str51, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value55);
    }

    @Test
    public void test11980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11980");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass1 = type0.getClass();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        int int3 = type2.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str8 = type7.toString();
        int int9 = type7.getSort();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type7, type10, type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type17, type20, type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray22);
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray22);
        int int27 = type2.getOpcode(142);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type29 = null;
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter28.newValue(type29);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode31 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value50);
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter32.ternaryOperation(abstractInsnNode33, value38, value44, value50);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter55 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type56 = null;
        org.mockito.asm.tree.analysis.Value value57 = basicInterpreter55.newValue(type56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter28.ternaryOperation(abstractInsnNode31, value44, value57, value61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.Value value66 = basicInterpreter28.newValue(type64);
        boolean boolean67 = type2.equals((java.lang.Object) value66);
        int int68 = type2.getDimensions();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(VVI)J" + "'", str13, "(VVI)J");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VVI)J" + "'", str24, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str25, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 146 + "'", int27 == 146);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value52);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }

    @Test
    public void test11981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11981");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str5 = type4.toString();
        int int6 = type4.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type4, type7, type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.Value value11 = basicInterpreter0.newValue(type2);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str13 = type12.toString();
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str21 = type20.toString();
        int int22 = type20.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type20, type23, type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray25);
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter16.newValue(type18);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean31 = type29.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean37 = type35.equals((java.lang.Object) 180);
        java.lang.String str38 = type35.toString();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type18, type28, type29, type33, type35, type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray40);
        int int42 = type12.getSort();
        org.mockito.asm.tree.analysis.Value value43 = basicInterpreter0.newValue(type12);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str47 = type46.toString();
        int int48 = type46.getSort();
        java.lang.String str49 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier45.newValue(type52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter0.copyOperation(abstractInsnNode44, value53);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        java.lang.Object obj57 = null;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("J");
        int int61 = type60.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.toString();
        int int65 = type63.getSort();
        java.lang.String str66 = type63.getDescriptor();
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getObjectType("(I)Z");
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier62.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/BasicValue: expected Z, but found R", (java.lang.Object) int61, value70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("", obj57, value70);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter0.copyOperation(abstractInsnNode55, value70);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean77 = type75.equals((java.lang.Object) 88);
        int int78 = type75.getSize();
        int int79 = type75.getSort();
        java.lang.String str80 = type75.getDescriptor();
        java.lang.String str81 = type75.toString();
        java.lang.String str82 = type75.getDescriptor();
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter0.newValue(type75);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(VVI)J" + "'", str10, "(VVI)J");
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "V" + "'", str21, "V");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(VVI)J" + "'", str26, "(VVI)J");
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(JDCJCI)V" + "'", str41, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(value43);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L(I)V;" + "'", str80, "L(I)V;");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L(I)V;" + "'", str81, "L(I)V;");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L(I)V;" + "'", str82, "L(I)V;");
        org.junit.Assert.assertNotNull(value83);
    }

    @Test
    public void test11982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11982");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray43);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter0.newValue(type40);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        int int47 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter0.newValue(type46);
        java.lang.String str49 = type46.getClassName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("(I)V");
        java.lang.String str52 = type51.getClassName();
        org.mockito.asm.Type[] typeArray54 = org.mockito.asm.Type.getArgumentTypes("(I)V");
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray54);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray54);
        int int57 = type46.getSize();
        int int58 = type46.getSize();
        java.lang.Throwable throwable60 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/AnalyzerException;", throwable60);
        java.lang.Throwable throwable65 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable65);
        java.lang.Throwable[] throwableArray67 = analyzerException66.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException66);
        java.lang.Throwable[] throwableArray69 = analyzerException66.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException66);
        analyzerException61.addSuppressed((java.lang.Throwable) analyzerException66);
        boolean boolean72 = type46.equals((java.lang.Object) analyzerException61);
        org.mockito.asm.Type[] typeArray74 = org.mockito.asm.Type.getArgumentTypes("(I)B");
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray74);
        java.lang.String str76 = type46.toString();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(I)V" + "'", str44, "(I)V");
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "char" + "'", str49, "char");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "void" + "'", str52, "void");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(I)V" + "'", str55, "(I)V");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(I)C" + "'", str56, "(I)C");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(I)C" + "'", str75, "(I)C");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "C" + "'", str76, "C");
    }

    @Test
    public void test11983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11983");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType("(I)LVVI)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier0.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.toString();
        int int16 = type14.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type14, type17, type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type24, type27, type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray29);
        int int33 = type12.getOpcode((int) 'a');
        java.lang.String str34 = type12.getClassName();
        int int35 = type12.getSort();
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier0.newValue(type12);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getObjectType("(I)V");
        org.mockito.asm.Type type39 = type38.getElementType();
        java.lang.String str40 = type38.toString();
        int int41 = type38.getDimensions();
        int int42 = type38.getDimensions();
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier0.newValue(type38);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier0.newValue(type44);
        int int47 = type44.getOpcode(8204);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(VVI)J" + "'", str20, "(VVI)J");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VVI)J" + "'", str30, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(VVI)J" + "'", str31, "(VVI)J");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 98 + "'", int33 == 98);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "long" + "'", str34, "long");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 7 + "'", int35 == 7);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L(I)V;" + "'", str40, "L(I)V;");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8204 + "'", int47 == 8204);
    }

    @Test
    public void test11984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11984");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int14 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.newValue(type13);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getObjectType("(I)V");
        boolean boolean19 = type17.equals((java.lang.Object) 88);
        java.lang.String str20 = type17.toString();
        boolean boolean22 = type17.equals((java.lang.Object) 0);
        int int24 = type17.getOpcode(116);
        java.lang.String str25 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier0.newValue(type17);
        int int27 = value26.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L(I)V;" + "'", str20, "L(I)V;");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 120 + "'", int24 == 120);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L(I)V;" + "'", str25, "L(I)V;");
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test11985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11985");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        boolean boolean5 = type1.equals((java.lang.Object) 169);
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier0.newValue(type1);
        int int7 = type1.getSort();
        int int9 = type1.getOpcode(191);
        int int10 = type1.getSort();
        int int11 = type1.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 196 + "'", int9 == 196);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test11986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11986");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean10 = type8.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass11 = type8.getClass();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass11);
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass11);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        int int18 = type17.getDimensions();
        java.lang.String str19 = type17.getDescriptor();
        org.mockito.asm.Type type20 = type17.getElementType();
        java.lang.String str21 = type20.getDescriptor();
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter0.newValue(type20);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newOperation(abstractInsnNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/Type" + "'", str13, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/Type" + "'", str14, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str19, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lg/mockito/asm/Type;" + "'", str21, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value22);
    }

    @Test
    public void test11987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11987");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean21 = type19.equals((java.lang.Object) 180);
        java.lang.String str22 = type19.toString();
        java.lang.String str23 = type19.getDescriptor();
        int int24 = type19.getSort();
        org.mockito.asm.Type[] typeArray26 = org.mockito.asm.Type.getArgumentTypes("(VVI)I");
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        int int28 = type19.getSize();
        int int29 = type19.getSize();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter30 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.tree.analysis.Value value32 = basicInterpreter30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean35 = type33.equals((java.lang.Object) 180);
        java.lang.String str36 = type33.toString();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter30.newValue(type33);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter38 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode39 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter38.ternaryOperation(abstractInsnNode39, value44, value50, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value63);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter65 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str70 = type69.toString();
        int int71 = type69.getSort();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type73 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type69, type72, type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray74);
        org.mockito.asm.tree.analysis.Value value76 = basicInterpreter65.newValue(type67);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter38.merge(value63, value76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean80 = type78.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass81 = type78.getClass();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass81);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter38.newValue(type82);
        org.mockito.asm.tree.analysis.Value value84 = basicInterpreter30.newValue(type82);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Object) int29, value84);
        int int86 = value84.getSize();
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter0.copyOperation(abstractInsnNode17, value84);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode88 = null;
        java.util.List list89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value90 = basicInterpreter0.naryOperation(abstractInsnNode88, list89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "C" + "'", str22, "C");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(VVI)C" + "'", str27, "(VVI)C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNull(value58);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "V" + "'", str70, "V");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(VVI)J" + "'", str75, "(VVI)J");
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test11988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11988");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter16 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type17 = null;
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter16.newValue(type17);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter20 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value38);
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter20.ternaryOperation(abstractInsnNode21, value26, value32, value38);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter43.newValue(type44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.Value value50 = basicInterpreter16.ternaryOperation(abstractInsnNode19, value32, value45, value49);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode51 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter16.copyOperation(abstractInsnNode51, value56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) type15, value56);
        int int60 = value56.getSize();
        int int61 = value56.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: (I)Lorg/mockito/asm/Type;;", (java.lang.Object) type12, value56);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNull(value40);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNull(value50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
    }

    @Test
    public void test11989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11989");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.Value value8 = basicInterpreter6.newValue(type7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value13);
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.merge(value8, value13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.toString();
        int int18 = type16.getSort();
        int int19 = type16.getSort();
        java.lang.String str20 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier0.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str25 = type24.toString();
        int int26 = type24.getSort();
        java.lang.String str27 = type24.getDescriptor();
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier23.newValue(type24);
        java.lang.String str29 = type24.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type33 = null;
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(I)J", (java.lang.Object) type24, value34);
        java.lang.String str37 = type24.toString();
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier0.newValue(type24);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        int int41 = type40.getSort();
        java.lang.String str42 = type40.getInternalName();
        java.lang.String str43 = type40.getInternalName();
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier0.newValue(type40);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter45 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type46 = null;
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean50 = type48.equals((java.lang.Object) 180);
        java.lang.String str51 = type48.toString();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter45.newValue(type48);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value58);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter45.copyOperation(abstractInsnNode53, value58);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("C");
        int int64 = type63.getSort();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter45.newValue(type63);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int69 = type67.getOpcode((int) (byte) 1);
        int int70 = type67.getSize();
        org.mockito.asm.tree.analysis.Value value71 = basicInterpreter45.newValue(type67);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean74 = type72.equals((java.lang.Object) 180);
        java.lang.String str75 = type72.toString();
        int int76 = type72.getSort();
        java.lang.String str77 = type72.getDescriptor();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter45.newValue(type72);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType("L(I)V;");
        java.lang.String str81 = type80.getClassName();
        org.mockito.asm.Type type82 = type80.getElementType();
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter45.newValue(type82);
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier0.newValue(type82);
        java.lang.String str85 = type82.getClassName();
        java.lang.String str86 = type82.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "void" + "'", str20, "void");
        org.junit.Assert.assertNull(value21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertNull(value28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found ." + "'", str42, "org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found ." + "'", str43, "org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected 156, but found .");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "C" + "'", str75, "C");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(I)V" + "'", str81, "(I)V");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "int" + "'", str85, "int");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "I" + "'", str86, "I");
    }

    @Test
    public void test11990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11990");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value25);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.toString();
        int int33 = type31.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type31, type34, type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        org.mockito.asm.tree.analysis.Value value38 = basicInterpreter27.newValue(type29);
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter0.merge(value25, value38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter41 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter41.ternaryOperation(abstractInsnNode42, value47, value53, value59);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter0.copyOperation(abstractInsnNode40, value59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BYTE_TYPE;
        int int64 = type63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter0.newValue(type63);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = type63.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VVI)J" + "'", str37, "(VVI)J");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNull(value61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
    }

    @Test
    public void test11991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11991");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str1 = type0.toString();
        int int2 = type0.getSort();
        java.lang.String str3 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str9 = type8.toString();
        int int10 = type8.getSort();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type8, type11, type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        org.mockito.asm.tree.analysis.Value value15 = basicInterpreter4.newValue(type6);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean19 = type17.equals((java.lang.Object) 180);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean25 = type23.equals((java.lang.Object) 180);
        java.lang.String str26 = type23.toString();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type6, type16, type17, type21, type23, type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray28);
        int int30 = type0.getSort();
        int int31 = type0.getSort();
        java.lang.String str32 = type0.toString();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value52);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter34.ternaryOperation(abstractInsnNode35, value40, value46, value52);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter55 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter55.ternaryOperation(abstractInsnNode56, value61, value67, value73);
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier33.merge(value40, value75);
        boolean boolean77 = type0.equals((java.lang.Object) basicVerifier33);
        org.mockito.asm.Type type78 = null;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier33.newValue(type78);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode80 = null;
        org.mockito.asm.tree.analysis.Value value81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value82 = basicVerifier33.unaryOperation(abstractInsnNode80, value81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "V" + "'", str1, "V");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(VVI)J" + "'", str14, "(VVI)J");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(JDCJCI)V" + "'", str29, "(JDCJCI)V");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNull(value54);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(value79);
    }

    @Test
    public void test11992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11992");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray4 = analyzerException3.getSuppressed();
        java.lang.Throwable[] throwableArray5 = analyzerException3.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str9 = type8.toString();
        int int10 = type8.getSort();
        java.lang.String str11 = type8.getDescriptor();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean15 = type13.equals((java.lang.Object) 180);
        java.lang.String str16 = type13.toString();
        java.lang.String str17 = type13.getDescriptor();
        int int18 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier7.newValue(type13);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int21 = type20.getSort();
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier7.newValue(type20);
        java.lang.String str23 = type20.toString();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter24 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type25 = null;
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter24.newValue(type25);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter28 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value46);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter28.ternaryOperation(abstractInsnNode29, value34, value40, value46);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter51 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type52 = null;
        org.mockito.asm.tree.analysis.Value value53 = basicInterpreter51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter24.ternaryOperation(abstractInsnNode27, value40, value53, value57);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter24.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue", (java.lang.Object) type20, value61);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("Z", (java.lang.Throwable) analyzerException62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("L(VVI)C;", (java.lang.Throwable) analyzerException64);
        java.lang.Class<?> wildcardClass66 = analyzerException65.getClass();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "V" + "'", str9, "V");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "V" + "'", str11, "V");
        org.junit.Assert.assertNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "C" + "'", str16, "C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Z" + "'", str23, "Z");
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNull(value48);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(type67);
    }

    @Test
    public void test11993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11993");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int14 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.newValue(type13);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type18 = null;
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter17.newValue(type18);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter21 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value39);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter21.ternaryOperation(abstractInsnNode22, value27, value33, value39);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter44 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type45 = null;
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter44.newValue(type45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) 156, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.Value value51 = basicInterpreter17.ternaryOperation(abstractInsnNode20, value33, value46, value50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode52 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter53 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode54 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value71);
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter53.ternaryOperation(abstractInsnNode54, value59, value65, value71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value78);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter80 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str85 = type84.toString();
        int int86 = type84.getSort();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type88 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type84, type87, type88 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray89);
        org.mockito.asm.tree.analysis.Value value91 = basicInterpreter80.newValue(type82);
        org.mockito.asm.tree.analysis.Value value92 = basicInterpreter53.merge(value78, value91);
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter17.copyOperation(abstractInsnNode52, value91);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = basicVerifier0.unaryOperation(abstractInsnNode16, value93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNull(value41);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNull(value73);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "V" + "'", str85, "V");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VVI)J" + "'", str90, "(VVI)J");
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(value93);
    }

    @Test
    public void test11994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11994");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value18);
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.ternaryOperation(abstractInsnNode1, value6, value12, value18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str22 = type21.toString();
        int int23 = type21.getSort();
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (I)L(I)V;");
        org.mockito.asm.tree.analysis.Value value27 = basicInterpreter0.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str30 = type29.toString();
        int int31 = type29.getSort();
        java.lang.String str32 = type29.getDescriptor();
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter34 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type35 = null;
        org.mockito.asm.tree.analysis.Value value36 = basicInterpreter34.newValue(type35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value41);
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier28.merge(value36, value41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.toString();
        int int46 = type44.getSort();
        int int47 = type44.getSort();
        java.lang.String str48 = type44.getClassName();
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier28.newValue(type44);
        java.lang.String str50 = type44.getClassName();
        java.lang.String str51 = type44.getClassName();
        java.lang.String str52 = type44.getClassName();
        int int54 = type44.getOpcode(181);
        int int55 = type44.getSize();
        org.mockito.asm.tree.analysis.Value value56 = basicInterpreter0.newValue(type44);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        java.util.List list58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value59 = basicInterpreter0.naryOperation(abstractInsnNode57, list58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "V" + "'", str22, "V");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertNull(value33);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "void" + "'", str48, "void");
        org.junit.Assert.assertNull(value49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "void" + "'", str50, "void");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "void" + "'", str51, "void");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "void" + "'", str52, "void");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 186 + "'", int54 == 186);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNull(value56);
    }

    @Test
    public void test11995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11995");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(VVI)C");
        int int24 = type22.getOpcode((int) (byte) 1);
        int int25 = type22.getSize();
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter0.newValue(type22);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
        org.mockito.asm.Type type29 = type28.getElementType();
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter0.newValue(type28);
        int int31 = type28.getSort();
        int int33 = type28.getOpcode(5);
        java.lang.String str34 = type28.getDescriptor();
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 9 + "'", int33 == 9);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str34, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
    }

    @Test
    public void test11996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11996");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.String str9 = type6.toString();
        java.lang.String str10 = type6.getDescriptor();
        int int11 = type6.getSort();
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier0.newValue(type6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int14 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier0.newValue(type13);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(VVI)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.BasicValue;");
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier0.newValue(type17);
        org.mockito.asm.Type type19 = null;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier0.newValue(type19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter23 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type27, type30, type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter23.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        int int38 = value37.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) basicInterpreter23, value37);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter42 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value60);
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter42.ternaryOperation(abstractInsnNode43, value48, value54, value60);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter63 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode64 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value75);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value81);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter63.ternaryOperation(abstractInsnNode64, value69, value75, value81);
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier41.merge(value48, value83);
        org.mockito.asm.tree.analysis.Value value85 = basicInterpreter23.copyOperation(abstractInsnNode40, value48);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value86 = basicVerifier0.copyOperation(abstractInsnNode21, value85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "V" + "'", str4, "V");
        org.junit.Assert.assertNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "C" + "'", str10, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(VVI)J" + "'", str33, "(VVI)J");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNull(value62);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value85);
    }

    @Test
    public void test11997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11997");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.tree.analysis.Value value2 = basicInterpreter0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean5 = type3.equals((java.lang.Object) 180);
        java.lang.String str6 = type3.toString();
        org.mockito.asm.tree.analysis.Value value7 = basicInterpreter0.newValue(type3);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J", (java.lang.Object) "C", value13);
        org.mockito.asm.tree.analysis.Value value16 = basicInterpreter0.copyOperation(abstractInsnNode8, value13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        int int19 = type18.getSort();
        org.mockito.asm.tree.analysis.Value value20 = basicInterpreter0.newValue(type18);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter22 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value40);
        org.mockito.asm.tree.analysis.Value value42 = basicInterpreter22.ternaryOperation(abstractInsnNode23, value28, value34, value40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value47);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter49 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.toString();
        int int55 = type53.getSort();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type53, type56, type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter49.newValue(type51);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter22.merge(value47, value60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str63 = type62.toString();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter22.newValue(type62);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value70 = basicInterpreter22.newValue(type69);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter71 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = basicInterpreter71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean76 = type74.equals((java.lang.Object) 180);
        java.lang.String str77 = type74.toString();
        org.mockito.asm.tree.analysis.Value value78 = basicInterpreter71.newValue(type74);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter22.newValue(type74);
        org.mockito.asm.tree.analysis.Value value80 = basicInterpreter0.copyOperation(abstractInsnNode21, value79);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value82 = basicInterpreter0.newOperation(abstractInsnNode81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "C" + "'", str6, "C");
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNull(value42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VVI)J" + "'", str59, "(VVI)J");
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "V" + "'", str63, "V");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(I)V" + "'", str66, "(I)V");
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
    }

    @Test
    public void test11998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11998");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("");
        java.lang.Throwable throwable6 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("", throwable6);
        java.lang.Throwable[] throwableArray8 = analyzerException7.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException7);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("LJ;", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type");
        java.lang.Throwable[] throwableArray14 = analyzerException13.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException21);
        analyzerException13.addSuppressed((java.lang.Throwable) analyzerException21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (VVI)J: expected 123, but found J");
        analyzerException13.addSuppressed((java.lang.Throwable) analyzerException25);
        analyzerException11.addSuppressed((java.lang.Throwable) analyzerException13);
        java.lang.Throwable[] throwableArray28 = analyzerException13.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("I)Lorg.mockito.asm.tree.analysis.BasicValue", (java.lang.Throwable) analyzerException13);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(throwableArray28);
    }

    @Test
    public void test11999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11999");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean3 = type1.equals((java.lang.Object) 180);
        java.lang.String str4 = type1.toString();
        int int5 = type1.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value24);
        org.mockito.asm.tree.analysis.Value value26 = basicInterpreter6.ternaryOperation(abstractInsnNode7, value12, value18, value24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value31);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter33 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str38 = type37.toString();
        int int39 = type37.getSort();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type37, type40, type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter33.newValue(type35);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter6.merge(value31, value44);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter47 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(VVI)J", (java.lang.Object) 123, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) ' ', value65);
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter47.ternaryOperation(abstractInsnNode48, value53, value59, value65);
        org.mockito.asm.tree.analysis.Value value68 = basicInterpreter6.copyOperation(abstractInsnNode46, value65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type1, value68);
        java.lang.String str70 = type1.toString();
        int int71 = type1.getSort();
        int int73 = type1.getOpcode(90);
        int int75 = type1.getOpcode(167);
        java.lang.String str76 = type1.getClassName();
        java.lang.String str77 = type1.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "C" + "'", str4, "C");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "V" + "'", str38, "V");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VVI)J" + "'", str43, "(VVI)J");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNull(value67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "C" + "'", str70, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 90 + "'", int73 == 90);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 167 + "'", int75 == 167);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "char" + "'", str76, "char");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "char" + "'", str77, "char");
    }

    @Test
    public void test12000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test12000");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(I)V");
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getDescriptor();
        java.lang.Class<?> wildcardClass4 = type1.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        boolean boolean8 = type6.equals((java.lang.Object) 180);
        java.lang.Class<?> wildcardClass9 = type6.getClass();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass9);
        java.lang.String str11 = type10.toString();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.lang.String str13 = type12.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str18 = type17.toString();
        int int19 = type17.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type17, type20, type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.toString();
        int int29 = type27.getSort();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type27, type30, type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray32);
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray32);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray32);
        org.mockito.asm.Type type37 = type10.getElementType();
        org.mockito.asm.Type type38 = type10.getElementType();
        int int39 = type38.getDimensions();
        boolean boolean40 = type5.equals((java.lang.Object) type38);
        org.mockito.asm.Type type41 = type38.getElementType();
        int int42 = type41.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "V" + "'", str3, "V");
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str11, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "char" + "'", str13, "char");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "V" + "'", str18, "V");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VVI)J" + "'", str23, "(VVI)J");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(VVI)J" + "'", str33, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VVI)J" + "'", str34, "(VVI)J");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VVI)C" + "'", str35, "(VVI)C");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VVI)Lorg/mockito/asm/Type;" + "'", str36, "(VVI)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }
}

