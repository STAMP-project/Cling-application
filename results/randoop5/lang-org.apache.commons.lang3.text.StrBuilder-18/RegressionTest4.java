import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        char[] charArray47 = strBuilder42.toCharArray();
        char[] charArray48 = strBuilder26.getChars(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder20.appendln(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder5.append(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("ass j", "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.ensureCapacity(45);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.setNewLineText("97########");
        java.util.stream.IntStream intStream60 = strBuilder59.codePoints();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.insert(32, "true\n10\nclass java.lang.Object10.0-1.0true\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ ]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(intStream60);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(7);
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.insert(0, 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendSeparator('t');
        java.io.Reader reader17 = strBuilder16.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        char[] charArray13 = strBuilder6.toCharArray();
        int int14 = strBuilder6.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder6.appendSeparator('a', 'a');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 200 + "'", int14 == 200);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        java.lang.String str9 = strBuilder8.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        java.lang.String str19 = strBuilder15.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendNewLine();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str36 = strBuilder32.rightString((int) '4');
        java.lang.Object[] objArray37 = new java.lang.Object[] { strBuilder24, wildcardClass29, 10.0d, (-1.0d), str36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder8.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replace(strMatcher42, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        java.lang.String str57 = strBuilder53.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendln(true);
        int int67 = strBuilder60.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        java.lang.String str74 = strBuilder73.getNewLineText();
        boolean boolean75 = strBuilder60.equals(strBuilder73);
        java.lang.String str76 = strBuilder73.toString();
        java.lang.StringBuffer stringBuffer77 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder53.appendln(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder39.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder5.appendln(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder5.appendNull();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true\n10" + "'", str19, "true\n10");
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\n" + "'", str36, "\n");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n10" + "'", str57, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder10.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder10.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        int int28 = strBuilder21.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        java.lang.String str35 = strBuilder34.getNewLineText();
        boolean boolean36 = strBuilder21.equals(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        boolean boolean43 = strBuilder41.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder34.appendln(strBuilder46);
        boolean boolean50 = strBuilder9.equals((java.lang.Object) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder9.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator(' ', 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        java.util.Iterator<java.lang.String> strItor4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendAll(strItor4);
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(charArray6, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append(strBuilder10);
        int int13 = strBuilder11.lastIndexOf('t');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.appendln(stringBuffer17, (int) (byte) -1, 10);
        int int23 = strBuilder20.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer27, "");
        int int30 = strBuilder9.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt((int) (byte) 10);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendln((double) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.insert(40, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder46.appendSeparator('\000', 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append("\ntrue\n\n100.04-1.0 true");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        int int27 = strBuilder24.indexOf(strMatcher25, 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln('a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence16 = strBuilder7.subSequence((int) 't', (int) 't');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 116");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder5.lastIndexOf(strMatcher6, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendSeparator("\n1.0\ntrue\n10############################### true\n\n", "false");
        boolean boolean13 = strBuilder11.endsWith("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendSeparator('r', '\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.insert((int) (short) 0, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator("\ntrue\n\n", "rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendln(stringBuffer22, (int) (short) -1, 5);
        java.util.stream.IntStream intStream26 = strBuilder21.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strBuilder28.asTokenizer();
        boolean boolean31 = strBuilder28.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder12.append(strBuilder28);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder4.setNewLineText("ass j");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder4.delete(38, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        java.util.stream.IntStream intStream34 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst(' ');
        java.io.Reader reader40 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.appendln((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        int int54 = strBuilder52.lastIndexOf(strMatcher53);
        java.lang.StringBuffer stringBuffer55 = strBuilder52.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "435\ntrue\n");
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("", 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder0.asTokenizer();
        java.lang.String str6 = strBuilder0.getNewLineText();
        java.util.stream.IntStream intStream7 = strBuilder0.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(true);
        int int15 = strBuilder8.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder8.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        java.lang.String str22 = strBuilder21.getNewLineText();
        boolean boolean23 = strBuilder8.equals(strBuilder21);
        java.lang.String str24 = strBuilder21.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        int int27 = strBuilder21.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str40 = strBuilder39.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str51 = strBuilder50.getNewLineText();
        java.lang.Object[] objArray56 = new java.lang.Object[] { strBuilder46, strBuilder50, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.appendAll(objArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.appendln(stringBuffer64, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.deleteFirst(strMatcher68);
        boolean boolean71 = strBuilder69.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteAll('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strBuilder75.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer76, "t");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer76, "97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer76, "t");
        java.util.stream.IntStream intStream83 = strBuilder82.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(intStream83);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        boolean boolean27 = strBuilder13.equalsIgnoreCase(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.append((java.lang.Object) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        char[] charArray34 = strBuilder29.toCharArray();
        char[] charArray35 = strBuilder13.getChars(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.append(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str40 = strBuilder39.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((long) (byte) 10);
        java.lang.String str50 = strBuilder46.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendNewLine();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln("");
        java.lang.String str67 = strBuilder63.rightString((int) '4');
        java.lang.Object[] objArray68 = new java.lang.Object[] { strBuilder55, wildcardClass60, 10.0d, (-1.0d), str67 };
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder46.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln(true);
        java.util.stream.IntStream intStream78 = strBuilder77.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder84.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.deleteAll("true\n10100.0 \n");
        boolean boolean88 = strBuilder0.equals(strBuilder85);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ ]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true\n10" + "'", str50, "true\n10");
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.setCharAt((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll('r', '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteAll(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceFirst('#', '#');
        java.io.Reader reader14 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.replaceAll('a', '#');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.deleteAll(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder43.setLength(78);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder43.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = strBuilder43.substring(113);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        int int64 = strBuilder57.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendSeparator("");
        char[] charArray74 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.appendln(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder52.insert(0, charArray74);
        boolean boolean78 = strBuilder76.startsWith("\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.appendSeparator("tr", "\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert((int) (byte) 0, true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceFirst('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.replaceAll("lse41\na\n", "\nfalse\n");
        boolean boolean41 = strBuilder39.endsWith("\n\ntrue\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.insert(0, (long) 210);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendSeparator('r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln(stringBuffer61, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendln(stringBuffer65);
        boolean boolean67 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.replaceAll(strMatcher68, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendln((java.lang.Object) "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder0.ensureCapacity(22);
        int int75 = strBuilder0.lastIndexOf("0");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder0.replaceFirst(strMatcher76, " ");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 36 + "'", int75 == 36);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadRight(19, 5, '\n');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 10);
        java.lang.String str51 = strBuilder47.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNewLine();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln("");
        java.lang.String str68 = strBuilder64.rightString((int) '4');
        java.lang.Object[] objArray69 = new java.lang.Object[] { strBuilder56, wildcardClass61, 10.0d, (-1.0d), str68 };
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder47.appendAll(objArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendln(true);
        java.lang.StringBuffer stringBuffer80 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.append(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder41.appendln(stringBuffer80);
        java.lang.String str83 = strBuilder41.getNullText();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10" + "'", str51, "true\n10");
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\n" + "'", str68, "\n");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n1.0\n");
        java.lang.String str14 = strBuilder12.leftString(45);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        boolean boolean24 = strBuilder12.equals((java.lang.Object) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.deleteAll("true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "false" + "'", str14, "false");
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.appendln("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.setLength(36);
        int int63 = strBuilder60.lastIndexOf('3', (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(true);
        int int72 = strBuilder65.lastIndexOf("");
        char[] charArray73 = strBuilder65.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.insert(0, charArray73);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteFirst('r');
        boolean boolean8 = strBuilder0.contains('a');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceFirst('#', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.insert(6, false);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str13 = strBuilder9.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replace(5, 50, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadLeft(39, 34, '\000');
        int int26 = strBuilder20.lastIndexOf('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str41 = strBuilder40.getNewLineText();
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder36, strBuilder40, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        java.util.stream.IntStream intStream54 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder29.append(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln("");
        java.lang.String str71 = strBuilder70.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln(true);
        java.util.stream.IntStream intStream78 = strBuilder77.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln("");
        java.lang.String str82 = strBuilder81.getNewLineText();
        java.lang.Object[] objArray87 = new java.lang.Object[] { strBuilder77, strBuilder81, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder70.appendAll(objArray87);
        java.lang.StringBuffer stringBuffer89 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder67.append(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder20.appendln(stringBuffer89);
        java.lang.StringBuffer stringBuffer92 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder20.appendln(stringBuffer92);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\n" + "'", str13, "\n");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 9 + "'", int26 == 9);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "\ntrue\n\n100.04-1.0 ");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("true\n10100.0 \n", "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendSeparator("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendFixedWidthPadLeft(34, 106, 't');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceFirst(strMatcher14, "\n\n0.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        int int56 = strBuilder49.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.replaceFirst(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendNewLine();
        boolean boolean79 = strBuilder65.equalsIgnoreCase(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.append((java.lang.Object) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strBuilder82.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder46.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer83, "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln('#');
        boolean boolean90 = strBuilder88.contains("4true\n1004");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendPadding(7, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((long) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder13.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.appendln((long) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.replace(strMatcher41, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((long) (byte) 10);
        java.lang.String str56 = strBuilder52.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append((java.lang.CharSequence) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendln(true);
        int int66 = strBuilder59.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder59.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        java.lang.String str73 = strBuilder72.getNewLineText();
        boolean boolean74 = strBuilder59.equals(strBuilder72);
        java.lang.String str75 = strBuilder72.toString();
        java.lang.StringBuffer stringBuffer76 = strBuilder72.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder52.appendln(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder38.append(stringBuffer76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder4.append(stringBuffer76, 23, 26);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "true\n10" + "'", str56, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 10);
        java.lang.String str51 = strBuilder47.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        int int61 = strBuilder54.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        java.lang.String str68 = strBuilder67.getNewLineText();
        boolean boolean69 = strBuilder54.equals(strBuilder67);
        java.lang.String str70 = strBuilder67.toString();
        java.lang.StringBuffer stringBuffer71 = strBuilder67.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.appendln(stringBuffer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder33.append(stringBuffer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder33.appendln((float) 45);
        java.lang.String str76 = strBuilder33.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10" + "'", str51, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append((java.lang.CharSequence) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((long) (byte) 10);
        int int54 = strBuilder52.lastIndexOf('#');
        int int57 = strBuilder52.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.minimizeCapacity();
        char[] charArray65 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.appendln(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder59.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(false);
        java.lang.Object obj78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln(obj78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.append((java.lang.CharSequence) strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder44.appendFixedWidthPadLeft((java.lang.Object) strBuilder80, (int) (short) 1, '4');
        boolean boolean85 = strBuilder44.contains('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder44.insert(3, (long) 26);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.appendln((float) (short) 100);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.replaceFirst('\n', '\000');
        boolean boolean31 = strBuilder29.contains('a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.lang.StringBuffer stringBuffer23 = strBuilder17.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, 68, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream39 = strBuilder38.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str43 = strBuilder42.getNewLineText();
        java.lang.Object[] objArray48 = new java.lang.Object[] { strBuilder38, strBuilder42, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder31.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.insert(5, (float) 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append(6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder28.append(strBuilder63, (int) (short) 10, 78);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("true\n10100.0 \n", "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendFixedWidthPadRight(1, (int) '4', '4');
        int int21 = strBuilder14.indexOf("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        java.util.stream.IntStream intStream29 = strBuilder28.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str35 = strBuilder34.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((long) (byte) 10);
        java.lang.String str45 = strBuilder41.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln("");
        java.lang.String str62 = strBuilder58.rightString((int) '4');
        java.lang.Object[] objArray63 = new java.lang.Object[] { strBuilder50, wildcardClass55, 10.0d, (-1.0d), str62 };
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder41.appendAll(objArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder34.appendAll(objArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder31.appendAll(objArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer70 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder14.appendln(stringBuffer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder10.append(stringBuffer70);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "true\n10" + "'", str45, "true\n10");
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\n" + "'", str62, "\n");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(stringBuffer70);
        org.junit.Assert.assertEquals(stringBuffer70.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str13 = strBuilder9.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replace(5, 50, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadLeft(39, 34, '\000');
        int int26 = strBuilder20.lastIndexOf('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str41 = strBuilder40.getNewLineText();
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder36, strBuilder40, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        java.util.stream.IntStream intStream54 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder29.append(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln("");
        java.lang.String str71 = strBuilder70.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln(true);
        java.util.stream.IntStream intStream78 = strBuilder77.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln("");
        java.lang.String str82 = strBuilder81.getNewLineText();
        java.lang.Object[] objArray87 = new java.lang.Object[] { strBuilder77, strBuilder81, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder70.appendAll(objArray87);
        java.lang.StringBuffer stringBuffer89 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder67.append(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder20.appendln(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder91.append(strBuilder92, 1, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder91.append((double) 'r');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\n" + "'", str13, "\n");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 9 + "'", int26 == 9);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "\ntrue\n\n100.04-1.0 ");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("e\n0.0\nass j");
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.append((float) (-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.setNewLineText("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        java.lang.String str23 = strBuilder19.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        int int35 = strBuilder33.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendNull();
        int int50 = strBuilder47.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.replaceAll(strMatcher51, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        java.util.stream.IntStream intStream60 = strBuilder59.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.deleteAll("\n");
        java.lang.StringBuffer stringBuffer63 = strBuilder59.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder47.append(stringBuffer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder43.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendSeparator("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder12.append((java.lang.CharSequence) strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10" + "'", str23, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(intStream60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(stringBuffer63);
        org.junit.Assert.assertEquals(stringBuffer63.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("ass j");
        int int9 = strBuilder6.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.delete(7, 68);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder44.appendFixedWidthPadRight((java.lang.Object) strBuilder57, 17, 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        boolean boolean29 = strBuilder15.equalsIgnoreCase(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.append((java.lang.Object) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        char[] charArray36 = strBuilder31.toCharArray();
        char[] charArray37 = strBuilder15.getChars(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder8.insert(1, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(true);
        int int46 = strBuilder39.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendNewLine();
        boolean boolean69 = strBuilder55.equalsIgnoreCase(strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder50.append((java.lang.Object) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder50.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder72.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer73, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.ensureCapacity(1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.insert(257, (double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 257");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        int int40 = strBuilder35.lastIndexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.insert((int) (byte) 0, 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.ensureCapacity((int) 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNullText("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.replaceAll("97########", "ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        int int20 = strBuilder19.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        java.lang.StringBuffer stringBuffer13 = strBuilder7.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.trim();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(stringBuffer13);
        org.junit.Assert.assertEquals(stringBuffer13.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        int int18 = strBuilder12.lastIndexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendFixedWidthPadRight(1, (int) '4', '4');
        int int29 = strBuilder22.indexOf("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str43 = strBuilder42.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((long) (byte) 10);
        java.lang.String str53 = strBuilder49.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendNewLine();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        java.lang.String str70 = strBuilder66.rightString((int) '4');
        java.lang.Object[] objArray71 = new java.lang.Object[] { strBuilder58, wildcardClass63, 10.0d, (-1.0d), str70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder49.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder42.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder39.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer78 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder22.appendln(stringBuffer78);
        boolean boolean80 = strBuilder12.equals((java.lang.Object) strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder12.ensureCapacity(36);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder12.appendln("\ntrue\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "true\n10" + "'", str53, "true\n10");
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\n" + "'", str70, "\n");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(stringBuffer78);
        org.junit.Assert.assertEquals(stringBuffer78.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        java.util.stream.IntStream intStream14 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        java.util.stream.IntStream intStream21 = strBuilder20.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("");
        java.lang.String str27 = strBuilder26.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder26.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder23.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) (byte) 10);
        java.lang.String str70 = strBuilder66.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        int int74 = strBuilder66.lastIndexOf(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder58.appendln(strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder9.appendln((java.lang.Object) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder66.deleteCharAt(6);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder66.replaceFirst('#', 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(intStream14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "true\n10" + "'", str70, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int11 = strBuilder7.indexOf('#');
        boolean boolean12 = strBuilder7.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("\nfalse\n");
        java.io.Reader reader13 = strBuilder10.asReader();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        boolean boolean17 = strBuilder15.contains(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 10);
        java.lang.String str27 = strBuilder23.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendNewLine();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str44 = strBuilder40.rightString((int) '4');
        java.lang.Object[] objArray45 = new java.lang.Object[] { strBuilder32, wildcardClass37, 10.0d, (-1.0d), str44 };
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder23.appendAll(objArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((long) (byte) 10);
        int int56 = strBuilder54.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.append((java.lang.CharSequence) strBuilder54);
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.append(stringBuffer61, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.appendFixedWidthPadRight((java.lang.Object) strBuilder65, 32, '#');
        java.io.Writer writer72 = strBuilder64.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder64.insert(52, 3);
        boolean boolean76 = strBuilder15.equalsIgnoreCase(strBuilder64);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "true\n10" + "'", str27, "true\n10");
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\n" + "'", str44, "\n");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        java.util.stream.IntStream intStream22 = strBuilder16.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder26.append(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        java.io.Writer writer48 = strBuilder45.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(false);
        char[] charArray66 = strBuilder65.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder58.insert(0, charArray66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder54.insert((int) (short) 10, charArray66, 0, (int) (short) 0);
        char[] charArray71 = strBuilder40.getChars(charArray66);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder14.insert(15, charArray66, 52, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 15");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(writer48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[f, a, l, s, e]");
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.setNewLineText("\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator("############################ true\n\n\n1.0\n", "4true\n1004");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.setCharAt(13, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append("true\n10############################### true\n\n\n1.0\n1.0\n\n\nclassajava.");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.setCharAt(30, 'a');
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.append(stringBuffer53, 4, (int) '\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln("aaaaaaaaaaa32");
        char char12 = strBuilder10.charAt(26);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + 'e' + "'", char12 == 'e');
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendSeparator('a');
        int int20 = strBuilder15.indexOf("4true\n10############################### true\n\n", 32);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int11 = strBuilder8.lastIndexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.insert(0, (double) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = strBuilder17.substring(39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        boolean boolean32 = strBuilder18.equalsIgnoreCase(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendNewLine();
        boolean boolean63 = strBuilder49.equalsIgnoreCase(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder44.append((java.lang.Object) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder44.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder13.appendln((java.lang.Object) strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder13.appendln("true\n0.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder13.append((float) 214);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        int int29 = strBuilder27.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.replaceAll("true\n10100.0 \n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str37 = strBuilder33.rightString((int) '4');
        java.lang.String str39 = strBuilder33.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder33.appendPadding(7, ' ');
        char char46 = strBuilder44.charAt(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln("");
        java.lang.String str55 = strBuilder54.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((long) (byte) 10);
        java.lang.String str65 = strBuilder61.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendNewLine();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln("");
        java.lang.String str82 = strBuilder78.rightString((int) '4');
        java.lang.Object[] objArray83 = new java.lang.Object[] { strBuilder70, wildcardClass75, 10.0d, (-1.0d), str82 };
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder61.appendAll(objArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder54.appendAll(objArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder47.appendAll(objArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder44.appendWithSeparators(objArray83, "4");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder32.appendAll(objArray83);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\n" + "'", str37, "\n");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + char46 + "' != '" + '\n' + "'", char46 == '\n');
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "true\n10" + "'", str65, "true\n10");
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\n" + "'", str82, "\n");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(41);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.setNewLineText("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        char[] charArray30 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendln(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder4.append((java.lang.Object) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str36 = strBuilder35.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln(true);
        java.util.stream.IntStream intStream43 = strBuilder42.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        java.lang.String str47 = strBuilder46.getNewLineText();
        java.lang.Object[] objArray52 = new java.lang.Object[] { strBuilder42, strBuilder46, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder35.appendAll(objArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        java.util.stream.IntStream intStream60 = strBuilder59.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder35.append(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder35.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder74.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strBuilder74.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder67.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer81);
        char[] charArray85 = strBuilder31.toCharArray();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(intStream60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "true\n10100.0 \n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "true\n10100.0 \n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[t, r, u, e, \n, 1, 0, 1, 0, 0, ., 0,  , \n]");
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln(stringBuffer61, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendln(stringBuffer65);
        boolean boolean67 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.replaceAll(strMatcher68, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendln((java.lang.Object) "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder0.ensureCapacity(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((long) (byte) 10);
        int int83 = strBuilder81.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder81.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder90.appendSeparator("\n10", "\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder93.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder95.append((long) 13);
        boolean boolean98 = strBuilder73.equals((java.lang.Object) strBuilder95);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        java.io.Reader reader12 = strBuilder9.asReader();
        java.lang.String str14 = strBuilder9.leftString((int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.append("4true\n1004", (int) '\n', 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(5, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendSeparator('4', 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((java.lang.Object) writer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        boolean boolean31 = strBuilder17.equalsIgnoreCase(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder12.append((java.lang.Object) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder12.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strBuilder34.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.append(strBuilder34);
        java.io.Reader reader39 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder7.appendFixedWidthPadLeft(41, 14, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        java.util.stream.IntStream intStream50 = strBuilder49.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.replaceFirst(strMatcher73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader77 = strBuilder76.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendNewLine();
        boolean boolean84 = strBuilder70.equalsIgnoreCase(strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder65.append((java.lang.Object) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder65.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strBuilder87.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder61.appendAll((java.util.Iterator<java.lang.String>) strTokenizer88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder53.appendln(strBuilder89);
        boolean boolean91 = strBuilder7.equals(strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder90.appendln("ass j");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.insert(5, (float) 'r');
        int int35 = strBuilder32.indexOf('\000', 214);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        char[] charArray9 = strBuilder2.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.ensureCapacity((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append("\n\n0.0\n", 30, (int) '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "\n \n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "\n \n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[\n,  , \n]");
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(170);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        boolean boolean16 = strBuilder12.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append((long) (byte) 10);
        boolean boolean20 = strBuilder12.endsWith("hi!");
        char[] charArray21 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        int int23 = strBuilder12.indexOf(strMatcher22);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "true\n1010");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "true\n1010");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[t, r, u, e, \n, 1, 0, 1, 0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        int int13 = strBuilder5.lastIndexOf(strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        int int15 = strBuilder5.lastIndexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) (byte) 10);
        java.lang.String str25 = strBuilder21.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNewLine();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str42 = strBuilder38.rightString((int) '4');
        java.lang.Object[] objArray43 = new java.lang.Object[] { strBuilder30, wildcardClass35, 10.0d, (-1.0d), str42 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendAll(objArray43);
        java.lang.String str45 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        int int53 = strBuilder46.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        java.lang.String str65 = strBuilder61.rightString((int) '4');
        java.lang.String str67 = strBuilder61.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.appendln(strBuilder73);
        java.lang.CharSequence charSequence77 = strBuilder74.subSequence(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder21.appendln(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder78, 0, '\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        int int84 = strBuilder5.lastIndexOf(strMatcher82, 38);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "true\n10" + "'", str25, "true\n10");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n" + "'", str42, "\n");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n" + "'", str65, "\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        int int21 = strBuilder19.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln(strBuilder30, (int) (byte) -1, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        java.util.stream.IntStream intStream40 = strBuilder39.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.deleteCharAt((int) (short) 1);
        boolean boolean49 = strBuilder47.contains("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder29.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        java.io.Writer writer54 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendNewLine();
        java.lang.String str57 = strBuilder55.rightString(12);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "###########\n" + "'", str57, "###########\n");
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str19 = strBuilder15.rightString((int) '4');
        java.lang.String str21 = strBuilder15.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendln(strBuilder27);
        java.lang.CharSequence charSequence31 = strBuilder28.subSequence(0, 0);
        boolean boolean33 = strBuilder28.contains("false");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\n" + "'", str19, "\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.util.stream.IntStream intStream5 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        java.lang.String str9 = strBuilder8.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        java.lang.String str20 = strBuilder19.getNewLineText();
        java.lang.Object[] objArray25 = new java.lang.Object[] { strBuilder15, strBuilder19, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll(objArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendPadding((-1), 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.appendSeparator("\n", "97########");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strBuilder0.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.append(strBuilder22);
        int int26 = strBuilder23.lastIndexOf("\n1097########", 38);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        java.util.stream.IntStream intStream34 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst(' ');
        java.io.Reader reader40 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.appendln((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.deleteFirst(strMatcher53);
        int int57 = strBuilder50.lastIndexOf("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0", 3);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        java.lang.String str57 = strBuilder53.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendPadding(3, '#');
        boolean boolean67 = strBuilder40.equals((java.lang.Object) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.replaceFirst('4', '3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n10" + "'", str57, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        java.util.stream.IntStream intStream14 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        java.util.stream.IntStream intStream21 = strBuilder20.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("");
        java.lang.String str27 = strBuilder26.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder26.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder23.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) (byte) 10);
        java.lang.String str70 = strBuilder66.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        int int74 = strBuilder66.lastIndexOf(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder58.appendln(strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder9.appendln((java.lang.Object) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder9.append(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(intStream14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "true\n10" + "'", str70, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.replace(0, (int) (short) 10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendSeparator('\n');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        boolean boolean27 = strBuilder13.equalsIgnoreCase(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.append((java.lang.Object) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        char[] charArray34 = strBuilder29.toCharArray();
        char[] charArray35 = strBuilder13.getChars(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.append(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder0.appendPadding((int) 'a', ' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ ]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\n\ntrue\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.setCharAt(210, '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, "ass j");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.deleteAll(strMatcher14);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str36 = strBuilder35.getNewLineText();
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder31, strBuilder35, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendAll(objArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder24.lastIndexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.append("true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder12.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.deleteFirst(strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.replace(strMatcher52, "###3##########################t100.0", (int) (short) 1, (int) ' ', 13);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        java.io.Writer writer15 = strBuilder12.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(false);
        char[] charArray33 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder25.insert(0, charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder21.insert((int) (short) 10, charArray33, 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder9.appendFixedWidthPadLeft((java.lang.Object) strBuilder21, 5, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.replaceAll("true\n10############################### true\n\n", "e\n10");
        int int45 = strBuilder43.lastIndexOf('\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(writer15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst(strMatcher30);
        int int32 = strBuilder31.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 38 + "'", int32 == 38);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        int int21 = strBuilder14.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendNewLine();
        java.io.Writer writer26 = strBuilder23.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.append(strBuilder23);
        java.lang.StringBuffer stringBuffer30 = strBuilder23.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "true\n0.0\n\n100.0");
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(stringBuffer17, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        java.util.stream.IntStream intStream35 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst(' ');
        java.io.Reader reader41 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        java.util.stream.IntStream intStream48 = strBuilder47.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.append(strBuilder51);
        java.lang.StringBuffer stringBuffer53 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder28.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteCharAt(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendSeparator("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.deleteFirst("aaaaaaaaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.setNullText("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.ensureCapacity((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.replaceAll("\n-1", "0");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNewLine();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln("");
        java.lang.String str78 = strBuilder74.rightString((int) '4');
        java.lang.Object[] objArray79 = new java.lang.Object[] { strBuilder66, wildcardClass71, 10.0d, (-1.0d), str78 };
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder57.appendAll(objArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        int int85 = strBuilder80.indexOf(strMatcher83, 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder50.append((java.lang.CharSequence) strBuilder80);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder50.appendln("rue\n10############################### true\n\n\n1.0\n\n", (int) '#', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\n" + "'", str78, "\n");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        int int38 = strBuilder33.indexOf('r', 39);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str53 = strBuilder52.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((long) (byte) 10);
        java.lang.String str63 = strBuilder59.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendNewLine();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("");
        java.lang.String str80 = strBuilder76.rightString((int) '4');
        java.lang.Object[] objArray81 = new java.lang.Object[] { strBuilder68, wildcardClass73, 10.0d, (-1.0d), str80 };
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder59.appendAll(objArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder52.appendAll(objArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder49.appendAll(objArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder40.appendWithSeparators(objArray81, "trueahi!-1\n22.0true");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.insert((int) (short) -1, (long) 50);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "true\n10" + "'", str63, "true\n10");
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\n" + "'", str80, "\n");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendFixedWidthPadRight((int) '#', 45, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append('r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append(true);
        java.lang.String str14 = strBuilder9.midString(9, (int) (byte) 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        int int59 = strBuilder56.lastIndexOf('a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder20.insert((int) '\000', (java.lang.Object) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        int int63 = strBuilder20.indexOf(strMatcher61, 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln("");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "\ntrue\n\n100.04-1.0 true");
        boolean boolean70 = strBuilder20.equalsIgnoreCase(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        java.lang.String str9 = strBuilder5.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.appendFixedWidthPadLeft((int) '4', 210, '4');
        boolean boolean14 = strBuilder5.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.append((long) '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        int int16 = strBuilder9.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendSeparator("");
        char[] charArray25 = strBuilder18.toCharArray((int) (byte) 0, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.append(charArray25);
        java.io.Reader reader27 = strBuilder26.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "true\n0.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "true\n0.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[t, r, u, e, \n, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader27);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.appendSeparator("\n\nclass java.lang.Object10.0-1.0\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.insert(41, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 41");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendln(stringBuffer21, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((long) (byte) 10);
        int int36 = strBuilder34.lastIndexOf('#');
        int int39 = strBuilder34.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder26.appendln(strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.ensureCapacity(45);
        java.util.stream.IntStream intStream52 = strBuilder49.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(true);
        int int60 = strBuilder53.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendNewLine();
        boolean boolean83 = strBuilder69.equalsIgnoreCase(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder64.append((java.lang.Object) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder64.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strBuilder86.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder63.appendAll((java.util.Iterator<java.lang.String>) strTokenizer87);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer87);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder16.append(strBuilder89, 18, (int) 'g');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(intStream52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        boolean boolean14 = strBuilder12.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder7.setNewLineText("rue\n10############################### true\n\n\n1.0\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.append(false);
        char[] charArray10 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(0, charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        java.lang.String str21 = strBuilder17.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        java.lang.String str38 = strBuilder34.rightString((int) '4');
        java.lang.Object[] objArray39 = new java.lang.Object[] { strBuilder26, wildcardClass31, 10.0d, (-1.0d), str38 };
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder17.appendAll(objArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendPadding((int) (byte) 1, '#');
        char[] charArray47 = strBuilder40.toCharArray(0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendNewLine();
        boolean boolean78 = strBuilder64.equalsIgnoreCase(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder59.append((java.lang.Object) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader81 = strBuilder80.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.minimizeCapacity();
        char[] charArray85 = strBuilder80.toCharArray();
        char[] charArray86 = strBuilder64.getChars(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder58.appendln(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder40.append(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder11.appendln(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder11.appendln('3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "true\n10" + "'", str21, "true\n10");
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\n" + "'", str38, "\n");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#]");
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(reader81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ ]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.insert(0, (long) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('g', (int) '3');
        int int25 = strBuilder22.indexOf(' ', (int) (short) 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.append((java.lang.Object) strBuilder27);
        int int31 = strBuilder28.indexOf('\000', 113);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.ensureCapacity(45);
        int int37 = strBuilder32.lastIndexOf("true\n10100.0 \n", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.appendln(stringBuffer42, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.reverse();
        int int48 = strBuilder47.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.io.Writer writer53 = strBuilder50.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(false);
        char[] charArray71 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder63.insert(0, charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder59.insert((int) (short) 10, charArray71, 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, 5, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder59.replaceAll("true\n10############################### true\n\n", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder32.append((java.lang.Object) strBuilder81);
        char[] charArray83 = strBuilder82.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n                                   \n1.0\ne\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n                                   \n1.0\ne\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[t, r, u, e, \n, 1, 0, 1, 0, 0, ., 0, 1, \n, t, r, u, e, \n, 1, 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, t, r, u, e, \n, \n,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  , \n, 1, ., 0, \n, e, \n, 1, 0]");
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        int int10 = strBuilder5.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, 12, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder5.trim();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence44 = strBuilder5.subSequence(12, 40);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 40");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendSeparator("\n", 214);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.trim();
        char[] charArray19 = strBuilder18.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.insert((int) '4', charArray19, 200, 41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[t, r, u, e, \n, 1, 0]");
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder42.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder14.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder14.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.setNullText("\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.append((double) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.deleteFirst("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.appendFixedWidthPadRight((java.lang.Object) strBuilder50, 100, ' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer47 = strBuilder43.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.append((java.lang.Object) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.deleteCharAt(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        java.lang.String str10 = strBuilder5.leftString(0);
        int int13 = strBuilder5.indexOf(' ', 78);
        // The following exception was thrown during execution in test generation
        try {
            char char15 = strBuilder5.charAt(210);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        int int31 = strBuilder28.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendSeparator("ss jfalse\n", "0.0");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceAll(strMatcher45, "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str51 = strBuilder50.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        java.util.stream.IntStream intStream58 = strBuilder57.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str62 = strBuilder61.getNewLineText();
        java.lang.Object[] objArray67 = new java.lang.Object[] { strBuilder57, strBuilder61, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder50.appendAll(objArray67);
        java.lang.StringBuffer stringBuffer69 = strBuilder50.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder44.appendln(stringBuffer69, (int) '\n', (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.append("v.lang.Object10.0-1.0\n");
        java.lang.StringBuffer stringBuffer75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.append(stringBuffer75, 257, (int) 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "\ntrue\n\n100.04-1.0 ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.replaceAll(strMatcher10, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.deleteCharAt(53);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 53");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendPadding(3, '#');
        java.lang.String str21 = strBuilder15.substring((int) '#', (int) '3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "### true\n\n###" + "'", str21, "### true\n\n###");
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.util.stream.IntStream intStream5 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        java.lang.String str9 = strBuilder8.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        java.lang.String str20 = strBuilder19.getNewLineText();
        java.lang.Object[] objArray25 = new java.lang.Object[] { strBuilder15, strBuilder19, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll(objArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendPadding((-1), 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.insert((int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        int int33 = strBuilder28.capacity();
        int int36 = strBuilder28.indexOf("lse41\na\n", 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 68 + "'", int33 == 68);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        java.lang.String str32 = strBuilder31.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendSeparator('\n', 3);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        int int38 = strBuilder33.lastIndexOf(strMatcher37);
        java.util.Iterator<java.lang.String> strItor39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.appendAll(strItor39);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str32, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator("\n\nclass java.lang.Object10.0-1.0\n", "false");
        int int43 = strBuilder42.length();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 66 + "'", int43 == 66);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln((java.lang.Object) 1.0d);
        int int7 = strBuilder2.indexOf('3', (int) 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.deleteFirst("4true\n1004");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.replace(4, 214, "trueahi!-1\n22.0true");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10100.0\n45\n\ntrue\n\n100.0-1.0 true\n\n", "");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.delete(22, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.append((long) '\n');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.insert(32, '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        java.io.Writer writer11 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder8.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.appendln(stringBuffer22, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendNewLine();
        boolean boolean45 = strBuilder31.equalsIgnoreCase(strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder26.append((java.lang.Object) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        char[] charArray52 = strBuilder47.toCharArray();
        char[] charArray53 = strBuilder31.getChars(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder18.append(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder17.appendln(charArray53);
        char[] charArray56 = strBuilder6.getChars(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.append(charArray56);
        java.io.Writer writer58 = strBuilder57.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((float) 14);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ ]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "\n1.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "\n1.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[\n, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(writer58);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNullText("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendln(stringBuffer16, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.reverse();
        int int22 = strBuilder20.size();
        int int23 = strBuilder20.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendln(stringBuffer28, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.reverse();
        int int33 = strBuilder31.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.append(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder9.append((java.lang.CharSequence) strBuilder38);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 32 + "'", int33 == 32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 10);
        java.lang.String str51 = strBuilder47.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        int int61 = strBuilder54.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        java.lang.String str68 = strBuilder67.getNewLineText();
        boolean boolean69 = strBuilder54.equals(strBuilder67);
        java.lang.String str70 = strBuilder67.toString();
        java.lang.StringBuffer stringBuffer71 = strBuilder67.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.appendln(stringBuffer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder33.append(stringBuffer71);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceAll(strMatcher74, "\n\n100 04-1.0 truea");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10" + "'", str51, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(true);
        java.lang.String str32 = strBuilder29.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln("\n\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert(7, (float) 1L);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll(strMatcher38);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        boolean boolean9 = strBuilder7.startsWith("ass j");
        boolean boolean11 = strBuilder7.endsWith("###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendln((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.appendSeparator("false", "true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.setNewLineText("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.trim();
        int int53 = strBuilder49.lastIndexOf("\ntrue\n10\n     ", 322);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.append((double) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = strBuilder29.substring(113, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        boolean boolean10 = strBuilder2.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.deleteFirst("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendNewLine();
        boolean boolean45 = strBuilder31.equalsIgnoreCase(strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder26.append((java.lang.Object) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder26.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strBuilder48.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder22.appendAll((java.util.Iterator<java.lang.String>) strTokenizer49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendNewLine();
        boolean boolean81 = strBuilder67.equalsIgnoreCase(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder62.append((java.lang.Object) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader84 = strBuilder83.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder83.minimizeCapacity();
        char[] charArray88 = strBuilder83.toCharArray();
        char[] charArray89 = strBuilder67.getChars(charArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder61.appendln(charArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder22.appendln(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strBuilder91.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer92, "lse41\na\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[ ]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        java.util.stream.IntStream intStream34 = strBuilder28.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(true);
        int int46 = strBuilder39.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.String str53 = strBuilder52.getNewLineText();
        boolean boolean54 = strBuilder39.equals(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder38.append(strBuilder52);
        java.lang.StringBuffer stringBuffer56 = strBuilder38.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder25.append(stringBuffer56);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(stringBuffer56);
        org.junit.Assert.assertEquals(stringBuffer56.toString(), "true\n52##################################################################################################");
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        boolean boolean32 = strBuilder18.equalsIgnoreCase(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendNewLine();
        boolean boolean63 = strBuilder49.equalsIgnoreCase(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder44.append((java.lang.Object) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder44.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder13.appendln((double) 0L);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendNewLine();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str52 = strBuilder48.rightString((int) '4');
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder40, wildcardClass45, 10.0d, (-1.0d), str52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder31.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder24.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder21.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.minimizeCapacity();
        char[] charArray71 = strBuilder68.toCharArray(20, 24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n" + "'", str52, "\n");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "gnal");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "gnal");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[g, n, a, l]");
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.deleteAll(strMatcher57);
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.deleteAll('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append("\n1.0\ntrue\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((int) (byte) 0);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer47 = strBuilder43.toStringBuffer();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceFirst(strMatcher48, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder43.replaceAll('r', 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(0L);
        java.util.stream.IntStream intStream15 = strBuilder14.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendSeparator('\n', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setNewLineText("\n\nclassajava.");
        int int22 = strBuilder20.lastIndexOf('a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.insert((int) '3', "\n\ntrue\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str13 = strBuilder9.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replace(5, 50, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.reverse();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\n" + "'", str13, "\n");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.deleteFirst(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln(stringBuffer21, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln(stringBuffer25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln("");
        java.lang.String str33 = strBuilder32.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        java.lang.String str43 = strBuilder39.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendNewLine();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        java.lang.String str60 = strBuilder56.rightString((int) '4');
        java.lang.Object[] objArray61 = new java.lang.Object[] { strBuilder48, wildcardClass53, 10.0d, (-1.0d), str60 };
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder39.appendAll(objArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder32.appendAll(objArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder29.appendWithSeparators(objArray61, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer78 = strBuilder77.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.append(strBuilder77);
        char[] charArray80 = strBuilder73.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder29.insert(34, charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder16.appendln(strBuilder81, (int) (short) 0, 50);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true\n10" + "'", str43, "true\n10");
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\n" + "'", str60, "\n");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(writer78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        int int16 = strBuilder12.indexOf("true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10\n###############################\n", 22);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        java.lang.String str25 = strBuilder21.rightString((int) '4');
        boolean boolean26 = strBuilder20.equals((java.lang.Object) str25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.deleteAll(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((long) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadLeft(1, 170, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((int) '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\n" + "'", str25, "\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.setNewLineText("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        java.lang.String str14 = strBuilder10.rightString((int) '4');
        java.util.stream.IntStream intStream15 = strBuilder10.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.deleteAll("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder10.appendSeparator('4', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        int int28 = strBuilder21.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        boolean boolean33 = strBuilder30.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        java.lang.String str37 = strBuilder36.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        java.util.stream.IntStream intStream44 = strBuilder43.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln("");
        java.lang.String str48 = strBuilder47.getNewLineText();
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder43, strBuilder47, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(true);
        boolean boolean57 = strBuilder30.equals((java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder30.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder20.append((java.lang.CharSequence) strBuilder58);
        boolean boolean60 = strBuilder4.equalsIgnoreCase(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder4.append("97########");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\n" + "'", str14, "\n");
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((java.lang.Object) writer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        boolean boolean31 = strBuilder17.equalsIgnoreCase(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder12.append((java.lang.Object) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder12.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strBuilder34.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.append(strBuilder34);
        java.io.Reader reader39 = strBuilder38.asReader();
        java.lang.CharSequence charSequence42 = strBuilder38.subSequence((int) '#', 45);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "uilder$Str" + "'", charSequence42, "uilder$Str");
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        int int43 = strBuilder35.lastIndexOf(strMatcher41, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.append("true\n\n100 04-1.0 true0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert((int) (short) 1, 5);
        char[] charArray35 = strBuilder31.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "t5rue\n10############################### ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "t5rue\n10############################### ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[t, 5, r, u, e, \n, 1, 0, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  ]");
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        int int18 = strBuilder12.indexOf(strMatcher16, (int) '4');
        java.util.stream.IntStream intStream19 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.deleteAll("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendFixedWidthPadLeft(22, 0, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendln((java.lang.Object) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendSeparator(' ', ' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendSeparator(" \nclass java.lang.Object10.0-1.0\n97.0");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendFixedWidthPadRight((-1), (int) '4', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendSeparator('3', 'g');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        java.lang.String str48 = strBuilder47.getNullText();
        int int51 = strBuilder47.lastIndexOf(' ', 7);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert(3, (java.lang.Object) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendNewLine();
        boolean boolean64 = strBuilder50.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder45.append((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.minimizeCapacity();
        char[] charArray71 = strBuilder66.toCharArray();
        char[] charArray72 = strBuilder50.getChars(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder44.appendln(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder44.replaceFirst("hi!", "hi!");
        boolean boolean77 = strBuilder30.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder30.insert(1, (int) (short) 100);
        int int82 = strBuilder80.indexOf("");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ ]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, (int) (short) 1, ' ');
        boolean boolean37 = strBuilder13.equals((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.io.Writer writer45 = strBuilder42.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder13.appendln((java.lang.Object) strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder13.appendln(0.0d);
        java.lang.Class<?> wildcardClass55 = strBuilder13.getClass();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        java.lang.StringBuffer stringBuffer58 = strBuilder57.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(stringBuffer58);
        org.junit.Assert.assertEquals(stringBuffer58.toString(), "###############################\n01\neurt\n0.1-0.01tcejbO.gnal.avaj ssalc\n01\neurt");
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        java.util.Iterator<java.lang.String> strItor4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendAll(strItor4);
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(charArray6, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.trim();
        char[] charArray21 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.insert(0, charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        int int30 = strBuilder23.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        java.lang.String str37 = strBuilder36.getNewLineText();
        boolean boolean38 = strBuilder23.equals(strBuilder36);
        java.lang.String str39 = strBuilder36.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        int int42 = strBuilder36.indexOf(strMatcher40, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        java.lang.String str47 = strBuilder43.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder9.appendFixedWidthPadRight((java.lang.Object) strBuilder36, 0, '\n');
        java.lang.StringBuffer stringBuffer54 = strBuilder53.toStringBuffer();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\n" + "'", str47, "\n");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(stringBuffer54);
        org.junit.Assert.assertEquals(stringBuffer54.toString(), "true\n10 \n");
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        int int42 = strBuilder39.length();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int45 = strBuilder39.lastIndexOf(strMatcher43, (int) (short) 100);
        int int46 = strBuilder39.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteAll("");
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.lang.StringBuffer stringBuffer23 = strBuilder17.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, 68, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer39 = strBuilder38.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append((java.lang.Object) writer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNewLine();
        boolean boolean60 = strBuilder46.equalsIgnoreCase(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.append((java.lang.Object) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder41.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder63.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder36.append(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder28.append(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("e\n10############################### true\n\n\n1.0\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(30);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader4 = strBuilder3.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.append((java.lang.CharSequence) strBuilder3);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (byte) 10);
        java.lang.String str11 = strBuilder7.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendNewLine();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("");
        java.lang.String str28 = strBuilder24.rightString((int) '4');
        java.lang.Object[] objArray29 = new java.lang.Object[] { strBuilder16, wildcardClass21, 10.0d, (-1.0d), str28 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder7.appendAll(objArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((long) (byte) 10);
        int int40 = strBuilder38.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.append((java.lang.CharSequence) strBuilder38);
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(stringBuffer45, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendFixedWidthPadRight((int) 'a', 10, '#');
        java.lang.String str55 = strBuilder48.midString((int) (short) 10, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.append(strBuilder56);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "true\n10" + "'", str11, "true\n10");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\n" + "'", str28, "\n");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ass j" + "'", str55, "ass j");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        int int46 = strBuilder43.lastIndexOf("97########");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.deleteAll(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.deleteAll("true\n0.0\ntrue\nra");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        java.util.stream.IntStream intStream18 = strBuilder17.codePoints();
        java.lang.StringBuffer stringBuffer19 = strBuilder17.toStringBuffer();
        java.io.Reader reader20 = strBuilder17.asReader();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
        org.junit.Assert.assertNotNull(stringBuffer19);
        org.junit.Assert.assertEquals(stringBuffer19.toString(), "true\n0.0\n#");
        org.junit.Assert.assertNotNull(reader20);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteAll("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendSeparator("aaaaaaaaaaaaaaaaa", 55);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.replace(0, (int) (short) 10, "");
        java.lang.String str44 = strBuilder39.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendNull();
        java.lang.String str46 = strBuilder39.getNullText();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        java.lang.String str25 = strBuilder21.rightString((int) '4');
        boolean boolean26 = strBuilder20.equals((java.lang.Object) str25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.deleteAll(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        char[] charArray31 = strBuilder30.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\n" + "'", str25, "\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "\ntrue\n\n100.04-1.0 false\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "\ntrue\n\n100.04-1.0 false\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[\n, t, r, u, e, \n, \n, 1, 0, 0, ., 0, 4, -, 1, ., 0,  , f, a, l, s, e, \n]");
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.setNewLineText("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(2);
        java.lang.StringBuffer stringBuffer55 = strBuilder54.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "true\n10ass j\n-1.0\nava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.02\n\nclass java.lang.Object10.0-1.0\n");
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.appendln(stringBuffer10, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        boolean boolean33 = strBuilder19.equalsIgnoreCase(strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.append((java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        char[] charArray40 = strBuilder35.toCharArray();
        char[] charArray41 = strBuilder19.getChars(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder6.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder2.insert(4, charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        java.util.stream.IntStream intStream52 = strBuilder51.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendln(strBuilder65, 68, (int) '\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        int int70 = strBuilder62.lastIndexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder43.append(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ ]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(intStream52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((double) 19);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendNull();
        java.util.stream.IntStream intStream7 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.deleteAll('a');
        java.util.stream.IntStream intStream10 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(36);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst(' ');
        java.io.Reader reader29 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(true);
        java.util.stream.IntStream intStream36 = strBuilder35.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder12.appendln((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder2.appendln((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder2.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder2.appendln('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(intStream36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln(stringBuffer16, (int) (short) -1, 5);
        java.util.stream.IntStream intStream20 = strBuilder15.codePoints();
        boolean boolean21 = strBuilder11.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendln((float) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendFixedWidthPadRight(0, (int) (short) -1, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        int int43 = strBuilder36.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder31.appendln((java.lang.Object) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append("4true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder27.append((java.lang.Object) "4true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strBuilder50.asTokenizer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer51);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.setCharAt((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        boolean boolean25 = strBuilder2.contains(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder2.appendSeparator('t');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceAll("444444444", "4");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        java.io.Writer writer24 = strBuilder21.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        int int38 = strBuilder31.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.lang.String str45 = strBuilder44.getNewLineText();
        boolean boolean46 = strBuilder31.equals(strBuilder44);
        java.lang.String str47 = strBuilder44.toString();
        boolean boolean48 = strBuilder27.equals((java.lang.Object) str47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln(stringBuffer53, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("");
        java.lang.String str65 = strBuilder64.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.append((long) (byte) 10);
        java.lang.String str75 = strBuilder71.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader77 = strBuilder76.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendNewLine();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.appendln("");
        java.lang.String str92 = strBuilder88.rightString((int) '4');
        java.lang.Object[] objArray93 = new java.lang.Object[] { strBuilder80, wildcardClass85, 10.0d, (-1.0d), str92 };
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder71.appendAll(objArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder64.appendAll(objArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder61.appendWithSeparators(objArray93, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder27.appendAll(objArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder19.appendAll(objArray93);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 4 + "'", int38 == 4);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "true\n10" + "'", str75, "true\n10");
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "\n" + "'", str92, "\n");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.appendln(stringBuffer10, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        boolean boolean33 = strBuilder19.equalsIgnoreCase(strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.append((java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        char[] charArray40 = strBuilder35.toCharArray();
        char[] charArray41 = strBuilder19.getChars(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder6.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder2.insert(4, charArray41);
        java.io.Writer writer44 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder2.appendln("tr");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder2.append((float) 257);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ ]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(writer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        boolean boolean11 = strBuilder9.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.appendln('3');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.insert(210, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        java.lang.String str57 = strBuilder53.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendPadding(3, '#');
        boolean boolean67 = strBuilder40.equals((java.lang.Object) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append((java.lang.CharSequence) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendln(strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder40.appendln((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder40.appendln(30);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(strMatcher81, "\ntrue\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n10" + "'", str57, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.lang.StringBuffer stringBuffer23 = strBuilder17.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, 68, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.replaceFirst("ass j", "444444444");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert(50, (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 50");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteAll(strMatcher9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = strBuilder10.substring(20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        int int18 = strBuilder12.lastIndexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendFixedWidthPadRight(1, (int) '4', '4');
        int int29 = strBuilder22.indexOf("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str43 = strBuilder42.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((long) (byte) 10);
        java.lang.String str53 = strBuilder49.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendNewLine();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        java.lang.String str70 = strBuilder66.rightString((int) '4');
        java.lang.Object[] objArray71 = new java.lang.Object[] { strBuilder58, wildcardClass63, 10.0d, (-1.0d), str70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder49.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder42.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder39.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer78 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder22.appendln(stringBuffer78);
        boolean boolean80 = strBuilder12.equals((java.lang.Object) strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendln(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "true\n10" + "'", str53, "true\n10");
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\n" + "'", str70, "\n");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(stringBuffer78);
        org.junit.Assert.assertEquals(stringBuffer78.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln(stringBuffer31, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendln(stringBuffer35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((long) (byte) 10);
        java.lang.String str50 = strBuilder46.rightString(10);
        boolean boolean52 = strBuilder46.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder53.appendFixedWidthPadLeft((java.lang.Object) strBuilder66, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder53, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append((java.lang.CharSequence) strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendln(true);
        java.lang.StringBuffer stringBuffer79 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder46.appendln(stringBuffer79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst("true\n10############################### true\n\n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.append(45);
        java.lang.String str86 = strBuilder83.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader89 = strBuilder88.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.append((java.lang.CharSequence) strBuilder88);
        java.lang.StringBuffer stringBuffer91 = strBuilder88.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder83.appendln(stringBuffer91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder39.appendln(stringBuffer91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder24.append((java.lang.CharSequence) strBuilder39);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true\n10" + "'", str50, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(stringBuffer79);
        org.junit.Assert.assertEquals(stringBuffer79.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(reader89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(stringBuffer91);
        org.junit.Assert.assertEquals(stringBuffer91.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendPadding(10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendPadding(5, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.setNewLineText("true\n100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.trim();
        char[] charArray20 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(stringBuffer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.append((float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder19.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) (byte) 10);
        java.lang.String str70 = strBuilder66.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append((java.lang.CharSequence) strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendln(true);
        int int80 = strBuilder73.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader85 = strBuilder84.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.append((java.lang.CharSequence) strBuilder84);
        java.lang.String str87 = strBuilder86.getNewLineText();
        boolean boolean88 = strBuilder73.equals(strBuilder86);
        java.lang.String str89 = strBuilder86.toString();
        java.lang.StringBuffer stringBuffer90 = strBuilder86.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder66.appendln(stringBuffer90);
        boolean boolean92 = strBuilder57.equalsIgnoreCase(strBuilder91);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder57, 3, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder6.appendFixedWidthPadLeft((java.lang.Object) strBuilder95, 20, '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "true\n10" + "'", str70, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 4 + "'", int80 == 4);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(reader85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(stringBuffer90);
        org.junit.Assert.assertEquals(stringBuffer90.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        boolean boolean27 = strBuilder13.equalsIgnoreCase(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.append((java.lang.Object) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        char[] charArray34 = strBuilder29.toCharArray();
        char[] charArray35 = strBuilder13.getChars(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.append(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str40 = strBuilder39.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((long) (byte) 10);
        java.lang.String str50 = strBuilder46.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendNewLine();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln("");
        java.lang.String str67 = strBuilder63.rightString((int) '4');
        java.lang.Object[] objArray68 = new java.lang.Object[] { strBuilder55, wildcardClass60, 10.0d, (-1.0d), str67 };
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder46.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteAll('e');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ ]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true\n10" + "'", str50, "true\n10");
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        java.io.Writer writer54 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.insert(52, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.append((long) (byte) 10);
        java.lang.String str74 = strBuilder70.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        int int78 = strBuilder70.lastIndexOf(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder62.appendln(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder57.appendFixedWidthPadRight((java.lang.Object) strBuilder62, 1, '#');
        java.lang.String str84 = strBuilder82.substring(6);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "true\n10" + "'", str74, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "0\nclass java.lang.Object10.0-1.0\ntrue\n10\n#####3##########################t" + "'", str84, "0\nclass java.lang.Object10.0-1.0\ntrue\n10\n#####3##########################t");
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder10.appendln(false);
        int int30 = strBuilder29.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("\nfalse\n", "\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(78);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append("lse41\na\n", 10, (int) '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 210 + "'", int30 == 210);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.deleteFirst("");
        java.lang.String str12 = strBuilder0.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.append((float) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        java.lang.String str24 = strBuilder20.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.minimizeCapacity();
        int int29 = strBuilder27.indexOf("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((long) (byte) 10);
        java.lang.String str40 = strBuilder36.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str57 = strBuilder53.rightString((int) '4');
        java.lang.Object[] objArray58 = new java.lang.Object[] { strBuilder45, wildcardClass50, 10.0d, (-1.0d), str57 };
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder36.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder30.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder14.appendWithSeparators(objArray58, "");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n" + "'", str12, "\n");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true\n10" + "'", str24, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "true\n10" + "'", str40, "true\n10");
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n" + "'", str57, "\n");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln(stringBuffer12);
        boolean boolean14 = strBuilder3.equals((java.lang.Object) strBuilder7);
        java.lang.String str15 = strBuilder3.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) (byte) 10);
        java.lang.String str25 = strBuilder21.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNewLine();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str42 = strBuilder38.rightString((int) '4');
        java.lang.Object[] objArray43 = new java.lang.Object[] { strBuilder30, wildcardClass35, 10.0d, (-1.0d), str42 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendAll(objArray43);
        java.lang.String str45 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        int int53 = strBuilder46.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        java.lang.String str65 = strBuilder61.rightString((int) '4');
        java.lang.String str67 = strBuilder61.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.appendln(strBuilder73);
        java.lang.CharSequence charSequence77 = strBuilder74.subSequence(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder21.appendln(strBuilder74);
        java.lang.Class<?> wildcardClass79 = strBuilder74.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder3.append((java.lang.Object) strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\n" + "'", str15, "\n");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "true\n10" + "'", str25, "true\n10");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n" + "'", str42, "\n");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n" + "'", str65, "\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder6.deleteFirst("4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("\n-1");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        int int12 = strBuilder8.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        int int20 = strBuilder13.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        java.lang.String str27 = strBuilder26.getNewLineText();
        boolean boolean28 = strBuilder13.equals(strBuilder26);
        java.lang.String str29 = strBuilder26.toString();
        java.lang.StringBuffer stringBuffer30 = strBuilder26.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder8.appendFixedWidthPadLeft((java.lang.Object) strBuilder26, (int) ' ', 't');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.deleteAll(strMatcher34);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendSeparator("true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.deleteAll(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        java.lang.String str23 = strBuilder19.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln("");
        java.lang.String str40 = strBuilder36.rightString((int) '4');
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder28, wildcardClass33, 10.0d, (-1.0d), str40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder19.appendAll(objArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        int int52 = strBuilder50.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder42.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.append(stringBuffer57, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.append(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder56.clear();
        char[] charArray67 = strBuilder66.toCharArray();
        char[] charArray68 = strBuilder13.getChars(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder1.appendln(charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.replace(strMatcher70, "true\n", 15, 20, (int) 'g');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10" + "'", str23, "true\n10");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\n" + "'", str40, "\n");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(13, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder16.append(12);
        char[] charArray36 = strBuilder16.toCharArray();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "true\n10100.032.0true5.0\n-1.0\na12");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "true\n10100.032.0true5.0\n-1.0\na12");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[t, r, u, e, \n, 1, 0, 1, 0, 0, ., 0, 3, 2, ., 0, t, r, u, e, 5, ., 0, \n, -, 1, ., 0, \n, a, 1, 2]");
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(36);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append((float) 214);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.ensureCapacity(26);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        java.lang.StringBuffer stringBuffer17 = strBuilder13.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(false);
        char[] charArray29 = strBuilder28.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.insert(0, charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.insert((int) (byte) 0, charArray29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder13.insert((int) ' ', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(stringBuffer17);
        org.junit.Assert.assertEquals(stringBuffer17.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("", 5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteCharAt((int) 'g');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 103");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        java.util.Iterator<java.lang.String> strItor4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendAll(strItor4);
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(charArray6, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.trim();
        char[] charArray21 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.insert(0, charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        int int30 = strBuilder23.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        java.lang.String str37 = strBuilder36.getNewLineText();
        boolean boolean38 = strBuilder23.equals(strBuilder36);
        java.lang.String str39 = strBuilder36.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        int int42 = strBuilder36.indexOf(strMatcher40, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        java.lang.String str47 = strBuilder43.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder9.appendFixedWidthPadRight((java.lang.Object) strBuilder36, 0, '\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        boolean boolean55 = strBuilder36.contains(strMatcher54);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\n" + "'", str47, "\n");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("true\n10100.0 \n", "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendSeparator("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 10);
        java.lang.String str51 = strBuilder47.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        int int61 = strBuilder54.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        java.lang.String str68 = strBuilder67.getNewLineText();
        boolean boolean69 = strBuilder54.equals(strBuilder67);
        java.lang.String str70 = strBuilder67.toString();
        java.lang.StringBuffer stringBuffer71 = strBuilder67.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.appendln(stringBuffer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder33.append(stringBuffer71);
        java.lang.StringBuffer stringBuffer74 = strBuilder73.toStringBuffer();
        int int75 = strBuilder73.capacity();
        int int77 = strBuilder73.indexOf('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceAll(strMatcher78, "lang.Object10.0-1.0\ntaue\n10\n###############################");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10" + "'", str51, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 66 + "'", int75 == 66);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.deleteCharAt(15);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        int int42 = strBuilder40.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendSeparator('a', 8);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 13 + "'", int42 == 13);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.String str30 = strBuilder28.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        int int33 = strBuilder28.lastIndexOf(strMatcher31, 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        java.lang.String str43 = strBuilder39.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendNewLine();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        java.lang.String str60 = strBuilder56.rightString((int) '4');
        java.lang.Object[] objArray61 = new java.lang.Object[] { strBuilder48, wildcardClass53, 10.0d, (-1.0d), str60 };
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder39.appendAll(objArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendPadding((int) (byte) 1, '#');
        char[] charArray69 = strBuilder62.toCharArray(0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder28.appendln(charArray69);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true\n10" + "'", str43, "true\n10");
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\n" + "'", str60, "\n");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#]");
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendln((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.append((float) 106);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('r', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator('#', 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        boolean boolean11 = strBuilder9.contains(strMatcher10);
        int int14 = strBuilder9.indexOf("true\n0.01\n", (int) 'e');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) (byte) 10);
        java.lang.String str29 = strBuilder25.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendNewLine();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str46 = strBuilder42.rightString((int) '4');
        java.lang.Object[] objArray47 = new java.lang.Object[] { strBuilder34, wildcardClass39, 10.0d, (-1.0d), str46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder25.appendAll(objArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(true);
        java.lang.String str52 = strBuilder51.toString();
        boolean boolean53 = strBuilder19.equalsIgnoreCase(strBuilder51);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "true\n10" + "'", str29, "true\n10");
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\n" + "'", str46, "\n");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str52, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.util.stream.IntStream intStream5 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        java.lang.String str9 = strBuilder8.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        java.lang.String str20 = strBuilder19.getNewLineText();
        java.lang.Object[] objArray25 = new java.lang.Object[] { strBuilder15, strBuilder19, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll(objArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendPadding((-1), 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        int int42 = strBuilder39.indexOf('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        int int38 = strBuilder36.lastIndexOf('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append((long) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll('a');
        char[] charArray53 = strBuilder50.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.insert(66, charArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 19 + "'", int38 == 19);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "true\n100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "true\n100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[t, r, u, e, \n, 1, 0, 0, ., 0]");
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        boolean boolean8 = strBuilder5.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(charArray22);
        java.lang.Class<?> wildcardClass24 = strBuilder23.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) wildcardClass24, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str37 = strBuilder33.rightString((int) '4');
        java.lang.String str39 = strBuilder33.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll(strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        int int52 = strBuilder49.lastIndexOf(strMatcher50, (int) (byte) 0);
        int int53 = strBuilder49.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder32.appendFixedWidthPadLeft((java.lang.Object) strBuilder55, 170, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append('t');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\n" + "'", str37, "\n");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 14 + "'", int53 == 14);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        java.lang.String str26 = strBuilder22.getNullText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(stringBuffer52, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.appendFixedWidthPadRight((java.lang.Object) strBuilder56, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder7.append(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.setLength(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendPadding(9, '\n');
        int int71 = strBuilder65.indexOf("true\n\n100 04-1.0 true0", 66);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        int int21 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendNewLine();
        boolean boolean41 = strBuilder27.equalsIgnoreCase(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder22.append((java.lang.Object) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendSeparator('\n', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder0.appendln(strBuilder42);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder0.deleteAll(strMatcher49);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder40.setNewLineText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) (byte) 10);
        int int70 = strBuilder68.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteAll("true\n10############################### true\n\n");
        int int77 = strBuilder73.indexOf("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader79 = strBuilder78.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.append(' ');
        java.util.Iterator<java.lang.String> strItor82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendAll(strItor82);
        char[] charArray84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.append(charArray84, 13, (-1));
        boolean boolean88 = strBuilder73.equalsIgnoreCase(strBuilder87);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder60.appendln((java.lang.Object) strBuilder73);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(reader79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        int int10 = strBuilder5.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, 12, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder5.insert((int) (short) 0, (float) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder5.replaceAll(strMatcher44, "4-1.0 true");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder5.deleteFirst(strMatcher47);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        java.util.stream.IntStream intStream28 = strBuilder27.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        java.lang.Object[] objArray37 = new java.lang.Object[] { strBuilder27, strBuilder31, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.appendln(stringBuffer45, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.deleteFirst(strMatcher49);
        boolean boolean52 = strBuilder50.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder50.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder38.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteAll('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer57, "t");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer57);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        java.lang.StringBuffer stringBuffer33 = strBuilder28.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        int int41 = strBuilder34.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendSeparator("");
        char[] charArray51 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.appendln(charArray51);
        java.io.Reader reader53 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.append((java.lang.CharSequence) strBuilder43, (int) (short) 1, 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.deleteAll('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(stringBuffer33);
        org.junit.Assert.assertEquals(stringBuffer33.toString(), "#");
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendSeparator('#', 'a');
        int int17 = strBuilder7.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replaceFirst('a', '\n');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.insert((int) '4', (double) 'r');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str46 = strBuilder42.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.insert((int) '#', 100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        java.util.stream.IntStream intStream58 = strBuilder57.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.appendln(stringBuffer69, (int) (byte) -1, 10);
        int int75 = strBuilder72.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strBuilder78.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder61.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer79, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder51.append(strBuilder61);
        java.lang.String str84 = strBuilder82.rightString(41);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\n" + "'", str46, "\n");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "#####################100.0### true\n\ntrue4" + "'", str84, "#####################100.0### true\n\ntrue4");
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.deleteFirst('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        int int58 = strBuilder40.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        boolean boolean60 = strBuilder40.contains(strMatcher59);
        int int62 = strBuilder40.indexOf("\n1097########");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder40.replaceAll(strMatcher63, "ng.Object10.0-1.0\ntrue\n10\n ");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        int int56 = strBuilder49.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.replaceFirst(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendNewLine();
        boolean boolean79 = strBuilder65.equalsIgnoreCase(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.append((java.lang.Object) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strBuilder82.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder46.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer83, "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder46.appendSeparator("35\n");
        char[] charArray89 = strBuilder46.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "truetrue\n104\n100.0\n35\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "truetrue\n104\n100.0\n35\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[t, r, u, e, t, r, u, e, \n, 1, 0, 4, \n, 1, 0, 0, ., 0, \n, 3, 5, \n]");
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        boolean boolean8 = strBuilder5.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(charArray22);
        java.lang.Class<?> wildcardClass24 = strBuilder23.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) wildcardClass24, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(" \n\nrue\n", "true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((long) 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendln(stringBuffer15, (int) (byte) -1, 10);
        int int21 = strBuilder18.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strBuilder24.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer25);
        boolean boolean28 = strBuilder10.startsWith("\ntrue\n10\n     ");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("");
        char[] charArray17 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("\ntrue\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll('a', 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        int int6 = strBuilder3.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.replaceAll(strMatcher7, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.deleteAll("\n");
        java.lang.StringBuffer stringBuffer19 = strBuilder15.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.append(stringBuffer19);
        int int21 = strBuilder3.capacity();
        java.lang.String str22 = strBuilder3.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(stringBuffer19);
        org.junit.Assert.assertEquals(stringBuffer19.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendFixedWidthPadLeft((java.lang.Object) strBuilder13, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        java.io.Writer writer23 = strBuilder20.asWriter();
        boolean boolean24 = strBuilder13.equals((java.lang.Object) writer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendln((long) 7);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        java.lang.String str32 = strBuilder31.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendSeparator('4', 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher36, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.setNewLineText("true\n100.0\n");
        java.lang.String str42 = strBuilder38.substring(19);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str32, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "lang.Object10.0-1.0true\n" + "'", str42, "lang.Object10.0-1.0true\n");
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        java.lang.String str37 = strBuilder36.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        java.util.stream.IntStream intStream44 = strBuilder43.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln("");
        java.lang.String str48 = strBuilder47.getNewLineText();
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder43, strBuilder47, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.appendAll(objArray53);
        java.lang.StringBuffer stringBuffer55 = strBuilder36.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder33.appendln(stringBuffer55, 19, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "\ntrue\n\n100.04-1.0 ");
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.insert((int) 't', (float) 32);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 116");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append("e\n10");
        java.lang.String str15 = strBuilder9.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        java.util.stream.IntStream intStream28 = strBuilder27.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.appendFixedWidthPadRight(52, 78, '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer31 = strBuilder30.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder13.append((java.lang.Object) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str40 = strBuilder39.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str51 = strBuilder50.getNewLineText();
        java.lang.Object[] objArray56 = new java.lang.Object[] { strBuilder46, strBuilder50, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.appendAll(objArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.appendln(stringBuffer64, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.deleteFirst(strMatcher68);
        boolean boolean71 = strBuilder69.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder36.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer72, "ue");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        java.lang.String str52 = strBuilder48.rightString(10);
        boolean boolean54 = strBuilder48.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder55.appendFixedWidthPadLeft((java.lang.Object) strBuilder68, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder48.appendFixedWidthPadLeft((java.lang.Object) strBuilder55, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader77 = strBuilder76.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append((java.lang.CharSequence) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.appendln(true);
        java.lang.StringBuffer stringBuffer81 = strBuilder75.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder48.appendln(stringBuffer81);
        java.lang.String str84 = strBuilder82.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("");
        java.lang.String str89 = strBuilder85.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strBuilder85.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder82.appendAll((java.util.Iterator<java.lang.String>) strTokenizer90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder41.appendAll((java.util.Iterator<java.lang.String>) strTokenizer90);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder92.replace(strMatcher93, "trueahi!-1\n22.03\n", 17, 0, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10" + "'", str52, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "true\n10############################### true\n\n" + "'", str84, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\n" + "'", str89, "\n");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.append((java.lang.Object) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("#########");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNullText("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.insert(10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(stringBuffer29);
        boolean boolean31 = strBuilder20.equals((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.append((java.lang.CharSequence) strBuilder24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strBuilder57.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder23.appendln(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder23.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.append((java.lang.CharSequence) strBuilder81, (int) (short) 1, 14);
        boolean boolean86 = strBuilder81.contains('r');
        java.lang.String str87 = strBuilder81.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((java.lang.Object) writer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln((double) 22);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        boolean boolean11 = strBuilder9.contains(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append(false);
        int int14 = strBuilder9.size();
        int int16 = strBuilder9.indexOf("ass j");
        java.lang.StringBuffer stringBuffer17 = strBuilder9.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 11 + "'", int14 == 11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer17);
        org.junit.Assert.assertEquals(stringBuffer17.toString(), "\nfalsefalse");
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendFixedWidthPadRight(100, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str35 = strBuilder34.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        java.lang.String str46 = strBuilder45.getNewLineText();
        java.lang.Object[] objArray51 = new java.lang.Object[] { strBuilder41, strBuilder45, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str57 = strBuilder53.rightString((int) '4');
        boolean boolean58 = strBuilder52.equals((java.lang.Object) str57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.deleteAll(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder31.append((java.lang.CharSequence) strBuilder62);
        java.lang.StringBuffer stringBuffer64 = strBuilder31.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n" + "'", str57, "\n");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(stringBuffer64);
        org.junit.Assert.assertEquals(stringBuffer64.toString(), "4true\n1004444444444444444444444444444444\ntrue\n\n100.04-1.0 false\n");
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator("true\n10############################### true\n\n", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.insert(14, "\ntrue\n\n100.04-1.0 true");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst(strMatcher51);
        java.lang.String str54 = strBuilder52.substring(3);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "e\n10\nclass \ntrue\n\n100.04-1.0 truejava.lang.Object10.0-1.0\ntrue\n1010\ntrue\n10############################### true\n\n" + "'", str54, "e\n10\nclass \ntrue\n\n100.04-1.0 truejava.lang.Object10.0-1.0\ntrue\n1010\ntrue\n10############################### true\n\n");
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        int int40 = strBuilder35.lastIndexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendPadding(10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendln(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int10 = strBuilder3.indexOf("\n1.0\n", 1);
        java.lang.String str13 = strBuilder3.substring(3, 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.setNewLineText("\n\n100 04-1.0 truea");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "444444444" + "'", str13, "444444444");
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append((int) (byte) 10);
        int int5 = strBuilder1.indexOf('\n');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        java.util.stream.IntStream intStream9 = strBuilder8.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        java.lang.String str28 = strBuilder24.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendNewLine();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        java.lang.String str45 = strBuilder41.rightString((int) '4');
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder33, wildcardClass38, 10.0d, (-1.0d), str45 };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder24.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder17.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder10.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder8.appendWithSeparators(objArray46, "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10\n###############################\n");
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true\n10" + "'", str28, "true\n10");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\n" + "'", str45, "\n");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder5.lastIndexOf(strMatcher13);
        java.lang.String str16 = strBuilder5.leftString(30);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("false", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append(0.0f);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((double) 39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.insert(19, ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 19");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((double) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder8.append(strBuilder55, 56, 41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        java.lang.String str47 = strBuilder43.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln("");
        java.lang.String str64 = strBuilder60.rightString((int) '4');
        java.lang.Object[] objArray65 = new java.lang.Object[] { strBuilder52, wildcardClass57, 10.0d, (-1.0d), str64 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder43.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(true);
        java.lang.StringBuffer stringBuffer76 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.append(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder33.appendln(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst(" \nclass java.lang.Object10.0-1.0\n97.0", "aaaaaaaaaaaaaaaaa");
        int int85 = strBuilder82.indexOf('\n', (int) (byte) 1);
        java.lang.Object obj86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder82.appendFixedWidthPadRight(obj86, 66, '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "true\n10" + "'", str47, "true\n10");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\n" + "'", str64, "\n");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str9 = strBuilder7.rightString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.ensureCapacity(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator('4');
        java.lang.StringBuffer stringBuffer14 = strBuilder7.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(stringBuffer14);
        org.junit.Assert.assertEquals(stringBuffer14.toString(), "\n1.0\n4");
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        int int31 = strBuilder24.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.String str38 = strBuilder37.getNewLineText();
        boolean boolean39 = strBuilder24.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendln(false);
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.append(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.replaceAll('a', '4');
        boolean boolean51 = strBuilder49.startsWith("\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 210 + "'", int43 == 210);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(1.0f);
        int int21 = strBuilder3.lastIndexOf(' ', (int) 'e');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.trim();
        char[] charArray8 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln(stringBuffer13, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.append((float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        boolean boolean42 = strBuilder28.equalsIgnoreCase(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder23.append((java.lang.Object) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder23.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((long) (byte) 10);
        java.lang.String str58 = strBuilder54.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        java.lang.String str77 = strBuilder74.toString();
        java.lang.StringBuffer stringBuffer78 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder54.appendln(stringBuffer78);
        boolean boolean80 = strBuilder45.equalsIgnoreCase(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder45, 3, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder22.replaceFirst('\000', 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "true\n10" + "'", str58, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(stringBuffer78);
        org.junit.Assert.assertEquals(stringBuffer78.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln('a');
        int int4 = strBuilder1.length();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.insert(5, (float) 'r');
        java.lang.String str33 = strBuilder32.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.replaceAll("\n ", "4-1.0 true");
        int int37 = strBuilder36.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\ntrue114.0\n\n100.04-1.0 true\n\n" + "'", str33, "\ntrue114.0\n\n100.04-1.0 true\n\n");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder2.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.setNewLineText("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.insert((int) (short) 1, false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        int int4 = strBuilder3.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((long) (byte) 10);
        java.lang.String str15 = strBuilder11.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendNewLine();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln("");
        java.lang.String str32 = strBuilder28.rightString((int) '4');
        java.lang.Object[] objArray33 = new java.lang.Object[] { strBuilder20, wildcardClass25, 10.0d, (-1.0d), str32 };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.appendAll(objArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((long) (byte) 10);
        int int44 = strBuilder42.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder34.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("true\n10", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder3.insert((int) (byte) 1, (java.lang.Object) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.appendln((java.lang.Object) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder1.append(38);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder1.deleteFirst(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendSeparator("");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 39 + "'", int4 == 39);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "true\n10" + "'", str15, "true\n10");
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\n" + "'", str32, "\n");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(13, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        java.lang.String str43 = strBuilder39.rightString(10);
        boolean boolean45 = strBuilder39.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder39.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendln(true);
        java.lang.StringBuffer stringBuffer72 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder39.appendln(stringBuffer72);
        java.lang.String str75 = strBuilder73.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("");
        java.lang.String str80 = strBuilder76.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strBuilder76.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.appendAll((java.util.Iterator<java.lang.String>) strTokenizer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder32.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        int int87 = strBuilder32.lastIndexOf(strMatcher85, 170);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true\n10" + "'", str43, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "true\n10############################### true\n\n" + "'", str75, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\n" + "'", str80, "\n");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int11 = strBuilder7.indexOf('#');
        int int13 = strBuilder7.lastIndexOf("\n\nclass java.lang.Object10.0-1.0\n");
        int int16 = strBuilder7.indexOf("## true\n\n###\n", 26);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        int int31 = strBuilder24.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.String str38 = strBuilder37.getNewLineText();
        boolean boolean39 = strBuilder24.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendln(false);
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.append(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln(stringBuffer51, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendNewLine();
        boolean boolean77 = strBuilder63.equalsIgnoreCase(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder58.append((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.minimizeCapacity();
        char[] charArray84 = strBuilder79.toCharArray();
        char[] charArray85 = strBuilder63.getChars(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder54.insert((int) (short) 1, charArray85);
        char[] charArray87 = strBuilder45.getChars(charArray85);
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 210 + "'", int43 == 210);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ ]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "true\n52##################################################################################################false\n36");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "true\n52##################################################################################################false\n36");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[t, r, u, e, \n, 5, 2, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, f, a, l, s, e, \n, 3, 6]");
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendPadding(40, '#');
        int int18 = strBuilder16.lastIndexOf("true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('r', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append((float) 68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst('\000', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append('a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strBuilder57.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder23.appendln(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder23.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.append((java.lang.CharSequence) strBuilder81, (int) (short) 1, 14);
        java.lang.String str87 = strBuilder84.midString(257, (int) '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(false);
        char[] charArray13 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendln(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        int int22 = strBuilder15.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        boolean boolean27 = strBuilder24.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln("");
        java.lang.String str31 = strBuilder30.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.util.stream.IntStream intStream38 = strBuilder37.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str42 = strBuilder41.getNewLineText();
        java.lang.Object[] objArray47 = new java.lang.Object[] { strBuilder37, strBuilder41, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll(objArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(true);
        boolean boolean51 = strBuilder24.equals((java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        java.util.stream.IntStream intStream61 = strBuilder60.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        java.lang.StringBuffer stringBuffer72 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder54.append(stringBuffer72);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder5.appendln(stringBuffer72, (int) (byte) 1, 322);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "true4\nhi!");
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        int int46 = strBuilder43.lastIndexOf("97########");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.deleteAll(strMatcher47);
        java.io.Writer writer49 = strBuilder48.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.insert(0, (float) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((long) 11);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(writer49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        int int34 = strBuilder32.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((long) (byte) 10);
        java.lang.String str46 = strBuilder42.rightString(10);
        boolean boolean48 = strBuilder42.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder49.appendFixedWidthPadLeft((java.lang.Object) strBuilder62, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder42.appendFixedWidthPadLeft((java.lang.Object) strBuilder49, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.lang.StringBuffer stringBuffer75 = strBuilder69.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder42.appendln(stringBuffer75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.appendln((java.lang.Object) strBuilder79);
        boolean boolean82 = strBuilder36.equals((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder36.minimizeCapacity();
        int int85 = strBuilder83.indexOf("###3##########################t100.0");
        // The following exception was thrown during execution in test generation
        try {
            char char87 = strBuilder83.charAt(41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 41");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "true\n10" + "'", str46, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(stringBuffer75);
        org.junit.Assert.assertEquals(stringBuffer75.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.ensureCapacity(45);
        int int37 = strBuilder32.lastIndexOf("true\n10100.0 \n", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.appendln(stringBuffer42, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.reverse();
        int int48 = strBuilder47.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.io.Writer writer53 = strBuilder50.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(false);
        char[] charArray71 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder63.insert(0, charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder59.insert((int) (short) 10, charArray71, 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, 5, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder59.replaceAll("true\n10############################### true\n\n", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder32.append((java.lang.Object) strBuilder81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.append((long) 24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendNewLine();
        boolean boolean50 = strBuilder36.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.append((java.lang.Object) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder31.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strBuilder53.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder19.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        int int64 = strBuilder57.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append((java.lang.CharSequence) strBuilder68);
        java.lang.String str71 = strBuilder70.getNewLineText();
        boolean boolean72 = strBuilder57.equals(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder57.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder19.append((java.lang.CharSequence) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.append((java.lang.CharSequence) strBuilder79);
        java.lang.StringBuffer stringBuffer82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.appendln(stringBuffer82, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder85.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder86.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder86.insert((int) (short) 0, (double) 0);
        char[] charArray91 = strBuilder90.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder76.appendln(charArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder76.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder9.appendln((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder9.append((float) 257);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "0.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "0.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder6.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        boolean boolean8 = strBuilder5.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(charArray22);
        java.lang.Class<?> wildcardClass24 = strBuilder23.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) wildcardClass24, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.setLength((int) (short) 10);
        char[] charArray30 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder5.asTokenizer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "falser\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "falser\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[f, a, l, s, e, r, \000, \000, \000, \000]");
        org.junit.Assert.assertNotNull(strTokenizer31);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        boolean boolean11 = strBuilder9.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.appendSeparator('\n', '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str19 = strBuilder15.rightString((int) '4');
        java.lang.String str21 = strBuilder15.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendln(strBuilder27);
        java.lang.CharSequence charSequence31 = strBuilder28.subSequence(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        int int39 = strBuilder32.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder32.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder32.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendFixedWidthPadLeft((int) 'r', 32, '4');
        boolean boolean52 = strBuilder28.equalsIgnoreCase(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str56 = strBuilder55.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        java.util.stream.IntStream intStream63 = strBuilder62.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln("");
        java.lang.String str67 = strBuilder66.getNewLineText();
        java.lang.Object[] objArray72 = new java.lang.Object[] { strBuilder62, strBuilder66, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder55.appendAll(objArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.appendPadding((-1), 'a');
        int int86 = strBuilder82.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder28.append((java.lang.CharSequence) strBuilder87, (int) '\n', 113);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\n" + "'", str19, "\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(intStream63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 24 + "'", int86 == 24);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str8 = strBuilder1.getNewLineText();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.appendSeparator(".0-1.0\n", "ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        boolean boolean14 = strBuilder13.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(strBuilder12);
        int int17 = strBuilder12.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(' ');
        java.io.Reader reader22 = strBuilder21.asReader();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        int int21 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.replaceFirst('a', '4');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replaceFirst('a', '\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder39.replaceAll(strMatcher48, "\n1.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.deleteFirst('a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('r', '3');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder10.appendln(false);
        int int30 = strBuilder29.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((long) 36);
        char char34 = strBuilder29.charAt(38);
        java.lang.StringBuffer stringBuffer35 = strBuilder29.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder36.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll(strMatcher47, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) 16);
        boolean boolean52 = strBuilder29.equalsIgnoreCase(strBuilder49);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 210 + "'", int30 == 210);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + char34 + "' != '" + '#' + "'", char34 == '#');
        org.junit.Assert.assertNotNull(stringBuffer35);
        org.junit.Assert.assertEquals(stringBuffer35.toString(), "true\n52##################################################################################################false\n36");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        boolean boolean28 = strBuilder22.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder29.appendFixedWidthPadLeft((java.lang.Object) strBuilder42, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder29, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        java.lang.StringBuffer stringBuffer55 = strBuilder49.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder22.appendln(stringBuffer55);
        java.lang.String str58 = strBuilder56.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str63 = strBuilder59.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder59.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.appendAll((java.util.Iterator<java.lang.String>) strTokenizer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder56.insert(32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.setLength((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder14.appendFixedWidthPadRight((java.lang.Object) (short) 10, 18, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "true\n10############################### true\n\n" + "'", str58, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n" + "'", str63, "\n");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        java.util.stream.IntStream intStream7 = strBuilder0.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteAll("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replace((int) '\000', (int) (byte) 10, "true\n0.0\ntrue\nra");
        java.io.Reader reader14 = strBuilder13.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int54 = strBuilder47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.appendSeparator('a', 22);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        int int60 = strBuilder47.lastIndexOf(strMatcher58, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder47.setNewLineText("97########");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        int int11 = strBuilder8.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendln(stringBuffer16, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.reverse();
        int int21 = strBuilder19.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder8.append(strBuilder19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.delete((int) (byte) 100, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        java.lang.String str28 = strBuilder26.leftString((int) ' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\ntrue\n\n100.04-1.0 true\n\n" + "'", str28, "\ntrue\n\n100.04-1.0 true\n\n");
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder55.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.appendFixedWidthPadLeft(76, 20, 'a');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        int int21 = strBuilder18.indexOf("ueahi!-1\n#", 10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) 'g');
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "aaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertNotNull(strBuilder4);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        java.util.stream.IntStream intStream29 = strBuilder28.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        char[] charArray49 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.appendln(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder22.append(charArray49);
        int int53 = strBuilder22.lastIndexOf('3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder0.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendSeparator("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendln(stringBuffer15);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        boolean boolean22 = strBuilder8.equalsIgnoreCase(strBuilder18);
        boolean boolean23 = strBuilder0.equals(strBuilder18);
        java.lang.String str24 = strBuilder18.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln(stringBuffer29, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendNull();
        java.lang.String str34 = strBuilder28.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder18.append((java.lang.Object) str34);
        int int38 = strBuilder18.lastIndexOf('#', 0);
        int int41 = strBuilder18.lastIndexOf('a', (int) (short) -1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\n" + "'", str24, "\n");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n" + "'", str34, "\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteAll(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceFirst('\n', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendSeparator("\n", "\n\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.append(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteCharAt(6);
        boolean boolean44 = strBuilder23.equalsIgnoreCase(strBuilder39);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(false);
        java.lang.Object obj33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(obj33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.replaceFirst(strMatcher36, "");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.deleteCharAt(76);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 76");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(strMatcher36, "97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder41.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder41.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        int int59 = strBuilder52.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        java.lang.String str66 = strBuilder65.getNewLineText();
        boolean boolean67 = strBuilder52.equals(strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder51.append(strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        java.io.Writer writer73 = strBuilder70.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader87 = strBuilder86.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.append((java.lang.CharSequence) strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.append(false);
        char[] charArray91 = strBuilder90.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder83.insert(0, charArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder79.insert((int) (short) 10, charArray91, 0, (int) (short) 0);
        char[] charArray96 = strBuilder65.getChars(charArray91);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder35.getChars(12, 0, charArray96, (int) '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(writer73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[f, a, l, s, e]");
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst(' ');
        java.io.Reader reader38 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(true);
        java.util.stream.IntStream intStream45 = strBuilder44.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder35.append(strBuilder48);
        java.lang.StringBuffer stringBuffer50 = strBuilder48.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder12.append(stringBuffer50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        java.util.stream.IntStream intStream58 = strBuilder57.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.appendln(stringBuffer69, (int) (byte) -1, 10);
        int int75 = strBuilder72.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strBuilder78.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder61.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer79, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteFirst("35\n");
        boolean boolean84 = strBuilder51.equals(strBuilder81);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.replaceAll(" ", "4true\n10044444444444444444444444444444444");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(stringBuffer50);
        org.junit.Assert.assertEquals(stringBuffer50.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        int int13 = strBuilder7.lastIndexOf('4', 1);
        int int16 = strBuilder7.lastIndexOf(' ', 66);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendln(strBuilder17);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        int int12 = strBuilder8.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.minimizeCapacity();
        int int27 = strBuilder25.indexOf("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        java.lang.String str38 = strBuilder34.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendNewLine();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln("");
        java.lang.String str55 = strBuilder51.rightString((int) '4');
        java.lang.Object[] objArray56 = new java.lang.Object[] { strBuilder43, wildcardClass48, 10.0d, (-1.0d), str55 };
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder34.appendAll(objArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder28.appendAll(objArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder8.appendAll(objArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder8.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "true\n10" + "'", str38, "true\n10");
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n" + "'", str55, "\n");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendPadding(24, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteAll(strMatcher13);
        java.lang.Class<?> wildcardClass15 = strBuilder11.getClass();
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        int int19 = strBuilder12.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        java.lang.String str26 = strBuilder25.getNewLineText();
        boolean boolean27 = strBuilder12.equals(strBuilder25);
        java.lang.String str28 = strBuilder25.toString();
        java.lang.StringBuffer stringBuffer29 = strBuilder25.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder5.appendln(stringBuffer29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.util.stream.IntStream intStream38 = strBuilder37.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        java.util.stream.IntStream intStream54 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln("");
        java.lang.String str60 = strBuilder59.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) (byte) 10);
        java.lang.String str70 = strBuilder66.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendNewLine();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.appendln("");
        java.lang.String str87 = strBuilder83.rightString((int) '4');
        java.lang.Object[] objArray88 = new java.lang.Object[] { strBuilder75, wildcardClass80, 10.0d, (-1.0d), str87 };
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder66.appendAll(objArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder59.appendAll(objArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder56.appendAll(objArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder47.appendAll(objArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder92.insert(3, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder30.appendln(strBuilder92, (int) (byte) 0, 6);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "true\n10" + "'", str70, "true\n10");
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "\n" + "'", str87, "\n");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder6.replaceFirst("", "04-1.0 true\n0.0\ntrue\nra");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader84 = strBuilder83.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.append((java.lang.CharSequence) strBuilder83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.appendln(true);
        java.util.stream.IntStream intStream88 = strBuilder82.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder81.appendFixedWidthPadRight((java.lang.Object) strBuilder82, 39, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder82.appendln((float) 39);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(intStream88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        java.lang.String str23 = strBuilder14.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.insert((int) (short) 0, (float) 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("###### true\n\n###", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst('#', 'a');
        java.util.stream.IntStream intStream58 = strBuilder57.codePoints();
        boolean boolean59 = strBuilder29.equals(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln("");
        boolean boolean64 = strBuilder62.startsWith("\n");
        int int66 = strBuilder62.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.insert(0, (float) (short) 0);
        boolean boolean72 = strBuilder57.equals(strBuilder71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.insert(40, "97########");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 40");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10100.0 \n" + "'", str23, "true\n10100.0 \n");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((-1L));
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteFirst(strMatcher10);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.append(stringBuffer12, 10, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.replace(56, 40, "0.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.appendln((double) 4);
        java.lang.String str21 = strBuilder20.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\ntrue\n\n1.0\n4.0\n" + "'", str21, "\ntrue\n\n1.0\n4.0\n");
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        int int12 = strBuilder8.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst(strMatcher14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert((int) (byte) 100, '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        java.lang.String str35 = strBuilder2.substring((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.setCharAt(0, '4');
        int int41 = strBuilder38.indexOf("\n1.0\n", 38);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n\nclass java.lang.Object10.0-1.0\n" + "'", str35, "\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        int int16 = strBuilder14.lastIndexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert(3, (java.lang.Object) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendNewLine();
        boolean boolean64 = strBuilder50.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder45.append((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.minimizeCapacity();
        char[] charArray71 = strBuilder66.toCharArray();
        char[] charArray72 = strBuilder50.getChars(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder44.appendln(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder44.replaceFirst("hi!", "hi!");
        boolean boolean77 = strBuilder30.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder30.append((long) 78);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ ]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strItor23, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNull();
        int int32 = strBuilder29.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.replaceAll(strMatcher33, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteAll("\n");
        java.lang.StringBuffer stringBuffer45 = strBuilder41.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder22.replaceAll("e\n10", "true\n100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder22.deleteAll(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder22.deleteAll('t');
        java.lang.String str57 = strBuilder22.midString((int) '4', 55);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteCharAt(7);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        int int11 = strBuilder8.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendSeparator('\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        int int16 = strBuilder8.indexOf(strMatcher14, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder8.appendln(' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder8.deleteAll(strMatcher44);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.setNewLineText("\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.insert((int) (byte) 1, (long) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder0.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int7 = strBuilder0.lastIndexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(true);
        java.util.stream.IntStream intStream14 = strBuilder13.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendNewLine();
        boolean boolean48 = strBuilder34.equalsIgnoreCase(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder29.append((java.lang.Object) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder29.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder25.appendAll((java.util.Iterator<java.lang.String>) strTokenizer52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder17.appendln(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        int int62 = strBuilder55.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder55.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        java.lang.String str69 = strBuilder68.getNewLineText();
        boolean boolean70 = strBuilder55.equals(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder17.append((java.lang.CharSequence) strBuilder74);
        char[] charArray76 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder0.append(charArray76, 4, 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(intStream14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "truetrue\n104\ntrue\n0.0\n14444444444444444444444444444444444");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "truetrue\n104\ntrue\n0.0\n14444444444444444444444444444444444");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[t, r, u, e, t, r, u, e, \n, 1, 0, 4, \n, t, r, u, e, \n, 0, ., 0, \n, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNull();
        java.util.stream.IntStream intStream35 = strBuilder31.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.deleteAll('a');
        java.util.stream.IntStream intStream38 = strBuilder31.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        java.lang.String str52 = strBuilder48.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendNewLine();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln("");
        java.lang.String str69 = strBuilder65.rightString((int) '4');
        java.lang.Object[] objArray70 = new java.lang.Object[] { strBuilder57, wildcardClass62, 10.0d, (-1.0d), str69 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder48.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((long) (byte) 10);
        int int81 = strBuilder79.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder71.append((java.lang.CharSequence) strBuilder79);
        java.lang.StringBuffer stringBuffer86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.append(stringBuffer86, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader91 = strBuilder90.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder90.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder85.append(strBuilder93);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder85.clear();
        char[] charArray96 = strBuilder95.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder42.append(charArray96);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder26.append(charArray96);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10" + "'", str52, "true\n10");
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\n" + "'", str69, "\n");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(reader91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[]");
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendFixedWidthPadRight((int) '#', 45, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln(stringBuffer61, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendln(stringBuffer65);
        boolean boolean67 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.replaceAll(strMatcher68, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendln((java.lang.Object) "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder0.append((float) 7);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        java.lang.String str25 = strBuilder21.rightString((int) '4');
        boolean boolean26 = strBuilder20.equals((java.lang.Object) str25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.append((double) 210);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.replaceAll("falsefalse\n", "lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\n" + "'", str25, "\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        java.util.stream.IntStream intStream26 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceFirst(strMatcher27, "");
        int int31 = strBuilder22.lastIndexOf("e\n0.0\nass j");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendPadding(4, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(10.0d);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln(stringBuffer12);
        boolean boolean14 = strBuilder3.equals((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.replaceAll(' ', '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        java.util.stream.IntStream intStream24 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((long) (byte) 10);
        java.lang.String str40 = strBuilder36.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str57 = strBuilder53.rightString((int) '4');
        java.lang.Object[] objArray58 = new java.lang.Object[] { strBuilder45, wildcardClass50, 10.0d, (-1.0d), str57 };
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder36.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder26.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((long) (byte) 10);
        java.lang.String str73 = strBuilder69.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        int int77 = strBuilder69.lastIndexOf(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder61.appendln(strBuilder69);
        boolean boolean79 = strBuilder17.equals(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "true\n10" + "'", str40, "true\n10");
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n" + "'", str57, "\n");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "true\n10" + "'", str73, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.deleteFirst('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.ensureCapacity(23);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(14);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(false);
        java.lang.Object obj34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(obj34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((long) (byte) 10);
        java.lang.String str46 = strBuilder42.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendNewLine();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str63 = strBuilder59.rightString((int) '4');
        java.lang.Object[] objArray64 = new java.lang.Object[] { strBuilder51, wildcardClass56, 10.0d, (-1.0d), str63 };
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder42.appendAll(objArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.append((long) (byte) 10);
        int int75 = strBuilder73.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append((java.lang.CharSequence) strBuilder73);
        java.lang.StringBuffer stringBuffer80 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.append(stringBuffer80, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder83.appendFixedWidthPadRight((java.lang.Object) strBuilder84, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder35.append(strBuilder84);
        boolean boolean93 = strBuilder91.contains("e\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = null;
        int int95 = strBuilder91.indexOf(strMatcher94);
        boolean boolean96 = strBuilder27.equalsIgnoreCase(strBuilder91);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "true\n10" + "'", str46, "true\n10");
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n" + "'", str63, "\n");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strBuilder0.asTokenizer();
        int int8 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        char[] charArray15 = strBuilder14.toCharArray();
        char[] charArray16 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendPadding(17, '3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("\ntrue\n10\n     ");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        int int23 = strBuilder4.lastIndexOf("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder4.append((long) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('4', 6);
        java.lang.StringBuffer stringBuffer29 = strBuilder25.toStringBuffer();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "true\n10\n14");
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        int int14 = strBuilder11.indexOf("\n\nclass java.lang.Object10.0-1.0\n", (int) (short) -1);
        java.lang.String str16 = strBuilder11.rightString(24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replace(40, 13, "ng.Object10.0-1.0\ntrue\n10\n ");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, (int) (short) 1, ' ');
        boolean boolean37 = strBuilder13.equals((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.replaceAll('a', 'a');
        java.io.Reader reader41 = strBuilder13.asReader();
        java.lang.String str42 = strBuilder13.getNullText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln(stringBuffer12);
        boolean boolean14 = strBuilder3.equals((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.replaceAll(strMatcher15, "\n1097########");
        java.util.stream.IntStream intStream18 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strBuilder3.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.setNewLineText("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        boolean boolean47 = strBuilder45.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(true);
        java.util.stream.IntStream intStream59 = strBuilder53.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(true);
        int int71 = strBuilder64.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder64.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        java.lang.String str78 = strBuilder77.getNewLineText();
        boolean boolean79 = strBuilder64.equals(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder63.append(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln("");
        boolean boolean86 = strBuilder84.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.replaceAll(strMatcher87, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder77.appendln(strBuilder89);
        boolean boolean93 = strBuilder52.equals((java.lang.Object) strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder52.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder40.appendln(strBuilder52);
        int int99 = strBuilder96.indexOf('t', (int) (short) -1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 2 + "'", int99 == 2);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        int int21 = strBuilder19.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNull();
        int int36 = strBuilder33.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.replaceAll(strMatcher37, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        java.util.stream.IntStream intStream46 = strBuilder45.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.deleteAll("\n");
        java.lang.StringBuffer stringBuffer49 = strBuilder45.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.append(stringBuffer49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder29.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendSeparator("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceAll("true\n0.0\n\n", "4true\n10############################### true\n\n");
        boolean boolean58 = strBuilder56.startsWith("rue\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(stringBuffer49);
        org.junit.Assert.assertEquals(stringBuffer49.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        int int21 = strBuilder19.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        java.io.Writer writer39 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendln(stringBuffer50, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        boolean boolean73 = strBuilder59.equalsIgnoreCase(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder54.append((java.lang.Object) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.minimizeCapacity();
        char[] charArray80 = strBuilder75.toCharArray();
        char[] charArray81 = strBuilder59.getChars(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder46.append(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder45.appendln(charArray81);
        char[] charArray84 = strBuilder34.getChars(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder11.append(charArray81);
        java.lang.String str88 = strBuilder11.substring(0, 39);
        int int89 = strBuilder11.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ ]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "\n1.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "\n1.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[\n, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "true\n10tfalserue\n1050a\n " + "'", str88, "true\n10tfalserue\n1050a\n ");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 32 + "'", int89 == 32);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendPadding(7, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendSeparator("###3##########################t100.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("true\n10100.0 \n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        java.lang.String str9 = strBuilder8.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        java.lang.String str19 = strBuilder15.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendNewLine();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str36 = strBuilder32.rightString((int) '4');
        java.lang.Object[] objArray37 = new java.lang.Object[] { strBuilder24, wildcardClass29, 10.0d, (-1.0d), str36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder8.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replace(strMatcher42, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        java.lang.String str57 = strBuilder53.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendln(true);
        int int67 = strBuilder60.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        java.lang.String str74 = strBuilder73.getNewLineText();
        boolean boolean75 = strBuilder60.equals(strBuilder73);
        java.lang.String str76 = strBuilder73.toString();
        java.lang.StringBuffer stringBuffer77 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder53.appendln(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder39.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder5.appendln(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln((long) 36);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true\n10" + "'", str19, "true\n10");
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\n" + "'", str36, "\n");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n10" + "'", str57, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.setLength(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.ensureCapacity((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.setNullText("true\n10ass j\nrrrr");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append(10);
        int int12 = strBuilder8.lastIndexOf('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.deleteFirst("\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("\n1.0 \n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str46 = strBuilder42.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.insert(32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((long) 56);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\n" + "'", str46, "\n");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln(stringBuffer21, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.appendln((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.appendln(stringBuffer33, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.insert((int) (short) 0, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("ass j", (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append((java.lang.CharSequence) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((long) (byte) 10);
        java.lang.String str54 = strBuilder50.rightString(10);
        boolean boolean56 = strBuilder50.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder57.appendFixedWidthPadLeft((java.lang.Object) strBuilder70, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder50.appendFixedWidthPadLeft((java.lang.Object) strBuilder57, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader79 = strBuilder78.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append((java.lang.CharSequence) strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.appendln(true);
        java.lang.StringBuffer stringBuffer83 = strBuilder77.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder50.appendln(stringBuffer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder41.appendln(stringBuffer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder28.append(stringBuffer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln((double) (-1L));
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "true\n10" + "'", str54, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(stringBuffer83);
        org.junit.Assert.assertEquals(stringBuffer83.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendPadding((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        boolean boolean56 = strBuilder42.equalsIgnoreCase(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder37.append((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder37.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strBuilder59.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.appendNewLine();
        boolean boolean82 = strBuilder68.equalsIgnoreCase(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder63.append((java.lang.Object) strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader85 = strBuilder84.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.minimizeCapacity();
        char[] charArray89 = strBuilder84.toCharArray();
        char[] charArray90 = strBuilder68.getChars(charArray89);
        char[] charArray91 = strBuilder59.getChars(charArray89);
        char[] charArray92 = strBuilder36.getChars(charArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder0.append(charArray92);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder0.appendSeparator("4-1.0 true", (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder96.replaceFirst(strMatcher97, "true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[#]");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder7.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll("35\n", ".0-1.0\n");
        int int13 = strBuilder7.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        boolean boolean22 = strBuilder8.equalsIgnoreCase(strBuilder18);
        boolean boolean23 = strBuilder0.equals(strBuilder18);
        java.lang.String str24 = strBuilder18.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln(stringBuffer29, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendNull();
        java.lang.String str34 = strBuilder28.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder18.append((java.lang.Object) str34);
        int int38 = strBuilder35.lastIndexOf('r', 100);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\n" + "'", str24, "\n");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n" + "'", str34, "\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder7.lastIndexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln("");
        java.lang.String str23 = strBuilder22.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        java.lang.String str33 = strBuilder29.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("");
        java.lang.String str50 = strBuilder46.rightString((int) '4');
        java.lang.Object[] objArray51 = new java.lang.Object[] { strBuilder38, wildcardClass43, 10.0d, (-1.0d), str50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder29.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder22.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder15.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder7.appendWithSeparators(objArray51, ".0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.setLength((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append((java.lang.CharSequence) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((long) (byte) 10);
        int int68 = strBuilder66.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendSeparator("", 5);
        int int73 = strBuilder71.lastIndexOf("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendSeparator('\000', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.append(0.0f);
        boolean boolean80 = strBuilder78.endsWith("tr");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder58.append(strBuilder78, 0, (int) (short) 1);
        int int84 = strBuilder78.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true\n10" + "'", str33, "true\n10");
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n" + "'", str50, "\n");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 11 + "'", int84 == 11);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        int int33 = strBuilder28.indexOf(strMatcher31, 52);
        java.lang.String str34 = strBuilder28.getNewLineText();
        char[] charArray35 = strBuilder28.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.replaceAll('g', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert(39, 1L);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "true\n10\nclass java.lang.Object10.0-1.0\n0.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "true\n10\nclass java.lang.Object10.0-1.0\n0.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[t, r, u, e, \n, 1, 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(5, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator("true\n10", (int) (byte) 100);
        int int52 = strBuilder50.lastIndexOf("true\n10tfalserue\n1050a\n ");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        java.io.Reader reader12 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder9.append(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.appendNull();
        int int27 = strBuilder9.lastIndexOf("true\n0.0\ntrue\nra", 40);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        java.lang.StringBuffer stringBuffer11 = strBuilder0.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(stringBuffer11);
        org.junit.Assert.assertEquals(stringBuffer11.toString(), "true\n52##################################################################################################");
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator(' ', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.deleteAll(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((long) (byte) 10);
        java.lang.String str39 = strBuilder35.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendNewLine();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln("");
        java.lang.String str56 = strBuilder52.rightString((int) '4');
        java.lang.Object[] objArray57 = new java.lang.Object[] { strBuilder44, wildcardClass49, 10.0d, (-1.0d), str56 };
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder35.appendAll(objArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append((java.lang.CharSequence) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((long) (byte) 10);
        int int68 = strBuilder66.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder58.append((java.lang.CharSequence) strBuilder66);
        java.lang.StringBuffer stringBuffer73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.append(stringBuffer73, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader78 = strBuilder77.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder72.append(strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder72.clear();
        char[] charArray83 = strBuilder82.toCharArray();
        char[] charArray84 = strBuilder29.getChars(charArray83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder15.insert(13, charArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "true\n10" + "'", str39, "true\n10");
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n" + "'", str56, "\n");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]");
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append((float) (short) 10);
        char[] charArray40 = strBuilder37.toCharArray(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.deleteAll('a');
        boolean boolean44 = strBuilder42.endsWith("4true\n1004");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replaceFirst('3', 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append("true\n", 26, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[\n]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        int int13 = strBuilder11.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        boolean boolean18 = strBuilder3.equals(strBuilder17);
        boolean boolean20 = strBuilder17.startsWith("\n\n100 04-1.0 truea");
        boolean boolean22 = strBuilder17.startsWith("444444444");
        java.lang.String str24 = strBuilder17.rightString((int) (short) 0);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        int int38 = strBuilder36.lastIndexOf('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append((long) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((long) (byte) 10);
        java.lang.String str50 = strBuilder46.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendNewLine();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln("");
        java.lang.String str67 = strBuilder63.rightString((int) '4');
        java.lang.Object[] objArray68 = new java.lang.Object[] { strBuilder55, wildcardClass60, 10.0d, (-1.0d), str67 };
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder46.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.append((long) (byte) 10);
        int int79 = strBuilder77.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder69.append((java.lang.CharSequence) strBuilder77);
        java.lang.StringBuffer stringBuffer84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder83.append(stringBuffer84, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder87.appendFixedWidthPadRight((int) (short) 1, (int) (byte) -1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.appendln((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder40.appendFixedWidthPadRight((java.lang.Object) strBuilder91, 7, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 19 + "'", int38 == 19);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true\n10" + "'", str50, "true\n10");
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.replaceFirst("4-1.0 true", "v.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder40.appendSeparator('r');
        java.util.stream.IntStream intStream64 = strBuilder63.chars();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.append((long) '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        int int16 = strBuilder9.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln(stringBuffer26, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.deleteFirst(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder22.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        java.util.stream.IntStream intStream40 = strBuilder39.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(true);
        java.util.stream.IntStream intStream56 = strBuilder55.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str62 = strBuilder61.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append((long) (byte) 10);
        java.lang.String str72 = strBuilder68.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendNewLine();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("");
        java.lang.String str89 = strBuilder85.rightString((int) '4');
        java.lang.Object[] objArray90 = new java.lang.Object[] { strBuilder77, wildcardClass82, 10.0d, (-1.0d), str89 };
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder68.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder61.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder58.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder49.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder33.appendWithSeparators(objArray90, "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder18.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder0.appendAll(objArray90);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "true\n10" + "'", str72, "true\n10");
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\n" + "'", str89, "\n");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("true\n10############################### true\n\n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst('\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        int int21 = strBuilder19.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln(strBuilder30, (int) (byte) -1, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln(stringBuffer42, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendln(stringBuffer46);
        boolean boolean48 = strBuilder37.equals((java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        java.util.stream.IntStream intStream55 = strBuilder49.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder49.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendln(true);
        int int67 = strBuilder60.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        java.lang.String str74 = strBuilder73.getNewLineText();
        boolean boolean75 = strBuilder60.equals(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder59.append(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln("");
        boolean boolean82 = strBuilder80.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.replaceAll(strMatcher83, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder73.appendln(strBuilder85);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.deleteFirst(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder41.appendln(strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder33.appendln((java.lang.Object) strBuilder91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder33.insert(100, (double) '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(intStream55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        java.util.stream.IntStream intStream26 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendNewLine();
        boolean boolean75 = strBuilder61.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder56.append((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader78 = strBuilder77.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.minimizeCapacity();
        char[] charArray82 = strBuilder77.toCharArray();
        char[] charArray83 = strBuilder61.getChars(charArray82);
        char[] charArray84 = strBuilder52.getChars(charArray82);
        char[] charArray85 = strBuilder29.getChars(charArray82);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[ ]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[ ]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[4, t, r, u, e, \n]");
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        int int18 = strBuilder12.lastIndexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceFirst('\n', '3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        java.lang.String str23 = strBuilder19.rightString(10);
        boolean boolean25 = strBuilder19.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.appendFixedWidthPadLeft((java.lang.Object) strBuilder39, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder19.appendFixedWidthPadLeft((java.lang.Object) strBuilder26, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        java.lang.StringBuffer stringBuffer52 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder19.appendln(stringBuffer52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("true\n10############################### true\n\n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append(45);
        java.lang.String str59 = strBuilder56.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        java.lang.StringBuffer stringBuffer64 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.appendln(stringBuffer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder12.appendln(stringBuffer64);
        java.lang.String str67 = strBuilder66.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10" + "'", str23, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(stringBuffer64);
        org.junit.Assert.assertEquals(stringBuffer64.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n\n\n" + "'", str67, "\n\n\n");
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        java.lang.String str24 = strBuilder20.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str41 = strBuilder37.rightString((int) '4');
        java.lang.Object[] objArray42 = new java.lang.Object[] { strBuilder29, wildcardClass34, 10.0d, (-1.0d), str41 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder20.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder5.append(strBuilder46);
        boolean boolean49 = strBuilder47.contains("0.0");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true\n10" + "'", str24, "true\n10");
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n" + "'", str41, "\n");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        int int18 = strBuilder16.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("\n1097########", "tr");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendPadding(4, 'r');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strBuilder44.asTokenizer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        java.lang.String str13 = strBuilder12.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        java.lang.String str23 = strBuilder19.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln("");
        java.lang.String str40 = strBuilder36.rightString((int) '4');
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder28, wildcardClass33, 10.0d, (-1.0d), str40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder19.appendAll(objArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder12.appendAll(objArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.replace(strMatcher46, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(true);
        int int71 = strBuilder64.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder64.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        java.lang.String str78 = strBuilder77.getNewLineText();
        boolean boolean79 = strBuilder64.equals(strBuilder77);
        java.lang.String str80 = strBuilder77.toString();
        java.lang.StringBuffer stringBuffer81 = strBuilder77.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder57.appendln(stringBuffer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder43.append(stringBuffer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.appendln(stringBuffer81);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray87 = strBuilder84.toCharArray(22, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10" + "'", str23, "true\n10");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\n" + "'", str40, "\n");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder7.lastIndexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln("");
        java.lang.String str23 = strBuilder22.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        java.lang.String str33 = strBuilder29.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("");
        java.lang.String str50 = strBuilder46.rightString((int) '4');
        java.lang.Object[] objArray51 = new java.lang.Object[] { strBuilder38, wildcardClass43, 10.0d, (-1.0d), str50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder29.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder22.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder15.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder7.appendWithSeparators(objArray51, ".0-1.0\n");
        char[] charArray57 = strBuilder7.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder7.insert(322, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 322");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true\n10" + "'", str33, "true\n10");
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n" + "'", str50, "\n");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[t, r, u, e, \n, 1, 0, \n, ., 0, -, 1, ., 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, ., 0, -, 1, ., 0, \n, 1, 0, ., 0, ., 0, -, 1, ., 0, \n, -, 1, ., 0, ., 0, -, 1, ., 0, \n, \n]");
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        int int18 = strBuilder12.indexOf("");
        java.util.stream.IntStream intStream19 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((long) (byte) 10);
        java.lang.String str30 = strBuilder26.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.minimizeCapacity();
        int int35 = strBuilder33.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendFixedWidthPadLeft(13, (int) (short) 1, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((long) (byte) 10);
        java.lang.String str49 = strBuilder45.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder45.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendPadding(3, '#');
        java.lang.String str61 = strBuilder58.substring((int) ' ', 50);
        char[] charArray62 = strBuilder58.toCharArray();
        char[] charArray63 = strBuilder39.getChars(charArray62);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder12.insert((int) (short) 1, charArray62, 210, 45);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "true\n10" + "'", str30, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "true\n10" + "'", str49, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "###### true\n\n###" + "'", str61, "###### true\n\n###");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "true\n103############################## true\n\n###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "true\n103############################## true\n\n###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[t, r, u, e, \n, 1, 0, 3, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  , t, r, u, e, \n, \n, #, #, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "true\n103############################## true\n\n###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "true\n103############################## true\n\n###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[t, r, u, e, \n, 1, 0, 3, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  , t, r, u, e, \n, \n, #, #, #]");
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.minimizeCapacity();
        boolean boolean19 = strBuilder17.endsWith("true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        java.io.Writer writer54 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.insert(52, 3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder46.appendln("\ntrue114.0\n\n100.04-1.0 true\n\n", 32, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append((long) 14);
        boolean boolean42 = strBuilder40.startsWith("4true\n1004");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder40.lastIndexOf(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        char char12 = strBuilder8.charAt(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.deleteFirst(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.appendln((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.appendln(stringBuffer35, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.reverse();
        int int41 = strBuilder40.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        java.io.Writer writer46 = strBuilder43.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(false);
        char[] charArray64 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.insert(0, charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder52.insert((int) (short) 10, charArray64, 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder40.appendFixedWidthPadLeft((java.lang.Object) strBuilder52, 5, 'a');
        char[] charArray72 = strBuilder52.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder29.insert(210, charArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + '\000' + "'", char12 == '\000');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[\n, 1, ., 0, \n, t, r, u, e, \n, 1, 0, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  , t, r, u, e, \n, \n]");
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(stringBuffer52, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.appendFixedWidthPadRight((java.lang.Object) strBuilder56, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder7.append(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.appendSeparator(' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder56.replace(32, 0, "444444444");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("true\n10100.0 \n", "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendSeparator("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.deleteCharAt(0);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        int int12 = strBuilder8.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.deleteAll("");
        java.lang.String str25 = strBuilder18.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder18.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder18.appendln("97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        java.util.stream.IntStream intStream35 = strBuilder29.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendln((java.lang.Object) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        int int43 = strBuilder37.indexOf(strMatcher41, (int) '4');
        java.util.stream.IntStream intStream44 = strBuilder37.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.append((double) (short) 10);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.append(stringBuffer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder8.appendln(stringBuffer47);
        int int50 = strBuilder49.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.insert(76, '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 76");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "\n10.0");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        boolean boolean29 = strBuilder15.equalsIgnoreCase(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.append((java.lang.Object) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        char[] charArray36 = strBuilder31.toCharArray();
        char[] charArray37 = strBuilder15.getChars(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder8.insert(1, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendPadding((int) (short) 10, '\000');
        boolean boolean43 = strBuilder41.contains("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str36 = strBuilder35.getNewLineText();
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder31, strBuilder35, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendAll(objArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder24.lastIndexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.append("true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder12.append((java.lang.CharSequence) strBuilder24);
        int int48 = strBuilder12.size();
        java.io.Writer writer49 = strBuilder12.asWriter();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 41 + "'", int48 == 41);
        org.junit.Assert.assertNotNull(writer49);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((long) (byte) 10);
        int int59 = strBuilder57.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendSeparator("", 5);
        int int64 = strBuilder62.lastIndexOf("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendSeparator('\000', '4');
        boolean boolean68 = strBuilder49.equals((java.lang.Object) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.insert(2, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator('4', ' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        int int43 = strBuilder42.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 78 + "'", int43 == 78);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst('e');
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        java.util.stream.IntStream intStream21 = strBuilder20.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("");
        java.lang.String str27 = strBuilder26.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder26.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder23.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer62 = strBuilder58.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder9.append(strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder9.appendSeparator('\n', '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        boolean boolean13 = strBuilder7.contains(' ');
        int int15 = strBuilder7.indexOf('3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteCharAt(2);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln("");
        java.lang.String str16 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str43 = strBuilder39.rightString((int) '4');
        java.lang.Object[] objArray44 = new java.lang.Object[] { strBuilder31, wildcardClass36, 10.0d, (-1.0d), str43 };
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder15.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder12.appendWithSeparators(objArray44, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer61 = strBuilder60.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.append(strBuilder60);
        char[] charArray63 = strBuilder56.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder12.insert(34, charArray63);
        int int66 = strBuilder12.lastIndexOf("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder12.clear();
        java.lang.String str69 = strBuilder12.rightString(68);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n" + "'", str43, "\n");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendSeparator("true\n10");
        int int22 = strBuilder0.lastIndexOf(".0-1.0\n", (int) (byte) 1);
        java.lang.String str24 = strBuilder0.leftString(32);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true\n0.0\n#true\n10" + "'", str24, "true\n0.0\n#true\n10");
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        int int38 = strBuilder33.indexOf('r', 39);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln('e');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder29, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder15.appendln(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.replaceAll("", "tr");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        int int20 = strBuilder0.lastIndexOf('4', 9);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.deleteFirst(strMatcher21);
        int int25 = strBuilder22.indexOf("true\n0.0\n#true\n10", 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendNewLine();
        int int9 = strBuilder7.lastIndexOf('a');
        int int11 = strBuilder7.lastIndexOf("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        java.lang.String str27 = strBuilder24.toString();
        boolean boolean28 = strBuilder7.equals((java.lang.Object) str27);
        java.lang.String str30 = strBuilder7.rightString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln("");
        java.lang.String str39 = strBuilder38.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((long) (byte) 10);
        java.lang.String str49 = strBuilder45.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendNewLine();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("");
        java.lang.String str66 = strBuilder62.rightString((int) '4');
        java.lang.Object[] objArray67 = new java.lang.Object[] { strBuilder54, wildcardClass59, 10.0d, (-1.0d), str66 };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder45.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder31.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) strBuilder71, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder71.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder71.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder7.appendln(strBuilder86);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.insert(210, (float) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n1.0\ntrue\n10############################### true\n\n" + "'", str30, "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "true\n10" + "'", str49, "true\n10");
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\n" + "'", str66, "\n");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendln(stringBuffer14, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.reverse();
        int int19 = strBuilder17.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceAll(strMatcher20, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln(stringBuffer29, (int) (short) -1, 5);
        java.util.stream.IntStream intStream33 = strBuilder28.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strBuilder35.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer36, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder9.appendAll((java.util.Iterator<java.lang.String>) strTokenizer36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((double) (byte) 100);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) (-1.0f));
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        int int9 = strBuilder0.lastIndexOf(strMatcher7, 17);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        boolean boolean22 = strBuilder8.equalsIgnoreCase(strBuilder18);
        boolean boolean23 = strBuilder0.equals(strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        java.lang.String str33 = strBuilder29.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln(stringBuffer40, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder29.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder18.appendFixedWidthPadRight((java.lang.Object) strBuilder39, (-1), ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str51 = strBuilder50.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        java.util.stream.IntStream intStream58 = strBuilder57.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str62 = strBuilder61.getNewLineText();
        java.lang.Object[] objArray67 = new java.lang.Object[] { strBuilder57, strBuilder61, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder50.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder50.append(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder50.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder47.appendln(strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder85.appendNull();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true\n10" + "'", str33, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strItor23, "ass j");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        int int27 = strBuilder22.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.deleteFirst(strMatcher28);
        char[] charArray30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.appendln(charArray30);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\ntrue\n10\n     ");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        java.lang.StringBuffer stringBuffer13 = strBuilder7.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.insert((int) '\000', false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln("");
        java.lang.String str27 = strBuilder23.rightString((int) '4');
        java.util.stream.IntStream intStream28 = strBuilder23.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.deleteAll("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str43 = strBuilder42.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((long) (byte) 10);
        java.lang.String str53 = strBuilder49.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendNewLine();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        java.lang.String str70 = strBuilder66.rightString((int) '4');
        java.lang.Object[] objArray71 = new java.lang.Object[] { strBuilder58, wildcardClass63, 10.0d, (-1.0d), str70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder49.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder42.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder39.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder30.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder16.appendWithSeparators(objArray71, "\ntrue\n10\n     ");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder16.deleteFirst("hi!");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(stringBuffer13);
        org.junit.Assert.assertEquals(stringBuffer13.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\n" + "'", str27, "\n");
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "true\n10" + "'", str53, "true\n10");
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\n" + "'", str70, "\n");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendln((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        int int23 = strBuilder21.lastIndexOf('#');
        int int26 = strBuilder21.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        int int28 = strBuilder21.lastIndexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        java.lang.String str37 = strBuilder36.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        java.lang.String str47 = strBuilder43.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln("");
        java.lang.String str64 = strBuilder60.rightString((int) '4');
        java.lang.Object[] objArray65 = new java.lang.Object[] { strBuilder52, wildcardClass57, 10.0d, (-1.0d), str64 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder43.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder36.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder29.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder21.appendWithSeparators(objArray65, ".0-1.0\n");
        char[] charArray71 = strBuilder21.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder5.insert(257, charArray71, (int) '\n', 15);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 257");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "true\n10" + "'", str47, "true\n10");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\n" + "'", str64, "\n");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[t, r, u, e, \n, 1, 0, \n, ., 0, -, 1, ., 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, ., 0, -, 1, ., 0, \n, 1, 0, ., 0, ., 0, -, 1, ., 0, \n, -, 1, ., 0, ., 0, -, 1, ., 0, \n, \n]");
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        java.lang.String str24 = strBuilder20.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str41 = strBuilder37.rightString((int) '4');
        java.lang.Object[] objArray42 = new java.lang.Object[] { strBuilder29, wildcardClass34, 10.0d, (-1.0d), str41 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder20.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder5.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder5.appendln(20);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true\n10" + "'", str24, "true\n10");
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n" + "'", str41, "\n");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((double) (byte) 1);
        boolean boolean47 = strBuilder5.equals(strBuilder46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        boolean boolean49 = strBuilder5.contains(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder5.append((float) 214);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.appendSeparator("ass j", (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((java.lang.Object) "\ntrue\n\n100.04-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator('e', (int) '\n');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strItor23, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNull();
        int int32 = strBuilder29.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.replaceAll(strMatcher33, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteAll("\n");
        java.lang.StringBuffer stringBuffer45 = strBuilder41.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder22.appendln((double) 10.0f);
        int int50 = strBuilder49.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight((int) 'a', 10, '#');
        java.lang.String str53 = strBuilder46.midString((int) (short) 10, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.setCharAt(1, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.appendln("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        int int61 = strBuilder59.lastIndexOf(strMatcher60);
        boolean boolean62 = strBuilder59.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ass j" + "'", str53, "ass j");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        java.lang.String str12 = strBuilder5.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append('\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.insert(52, (double) 15);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNewLine();
        int int59 = strBuilder55.indexOf("", 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(true);
        java.util.stream.IntStream intStream69 = strBuilder68.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.append(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder61.insert(0, (java.lang.Object) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder79.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator("0.0\n", "trueahi!-1\n22.0true");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(intStream69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str13 = strBuilder9.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        int int19 = strBuilder17.indexOf(strMatcher18);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\n" + "'", str13, "\n");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        java.util.stream.IntStream intStream45 = strBuilder44.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append("true\n \n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln("");
        java.lang.String str16 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("");
        java.lang.String str27 = strBuilder26.getNewLineText();
        java.lang.Object[] objArray32 = new java.lang.Object[] { strBuilder22, strBuilder26, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder15.appendAll(objArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(true);
        boolean boolean36 = strBuilder9.equals((java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((int) (short) 1);
        java.lang.String str41 = strBuilder37.leftString(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append(false);
        char[] charArray48 = strBuilder47.toCharArray();
        java.lang.String str50 = strBuilder47.leftString((int) ' ');
        int int52 = strBuilder47.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendNewLine();
        boolean boolean72 = strBuilder58.equalsIgnoreCase(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder53.append((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder53.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strBuilder75.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendln(true);
        java.util.stream.IntStream intStream79 = strBuilder75.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder47.appendFixedWidthPadLeft((java.lang.Object) strBuilder75, 12, '#');
        char[] charArray83 = strBuilder82.toCharArray();
        char[] charArray84 = strBuilder37.getChars(charArray83);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n0.01\n" + "'", str41, "true\n0.01\n");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "false" + "'", str50, "false");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(intStream79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "true\n0.01\n#4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "true\n0.01\n#4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[t, r, u, e, \n, 0, ., 0, 1, \n, #, 4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "true\n0.01\n#4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "true\n0.01\n#4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[t, r, u, e, \n, 0, ., 0, 1, \n, #, 4, t, r, u, e, \n]");
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(39, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.ensureCapacity(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) 2);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(38);
        java.util.stream.IntStream intStream2 = strBuilder1.chars();
        java.util.stream.IntStream intStream3 = strBuilder1.codePoints();
        org.junit.Assert.assertNotNull(intStream2);
        org.junit.Assert.assertNotNull(intStream3);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendln((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.appendSeparator("false", "true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((long) (byte) 10);
        int int58 = strBuilder56.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendSeparator("", 5);
        int int63 = strBuilder61.lastIndexOf("ass j");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder48.appendln(strBuilder61, 4, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n1.0\n");
        java.lang.String str14 = strBuilder12.leftString(45);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        boolean boolean24 = strBuilder12.equals((java.lang.Object) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.appendln((float) 15);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str35 = strBuilder34.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((long) (byte) 10);
        java.lang.String str45 = strBuilder41.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln("");
        java.lang.String str62 = strBuilder58.rightString((int) '4');
        java.lang.Object[] objArray63 = new java.lang.Object[] { strBuilder50, wildcardClass55, 10.0d, (-1.0d), str62 };
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder41.appendAll(objArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder34.appendAll(objArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder27.appendAll(objArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append((java.lang.CharSequence) strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.appendln(true);
        int int74 = strBuilder67.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder67.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder27.appendFixedWidthPadRight((java.lang.Object) strBuilder67, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder67.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder67.setNewLineText("\n1097########");
        java.util.stream.IntStream intStream85 = strBuilder67.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader87 = strBuilder86.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder89.appendFixedWidthPadRight(1, (int) '4', '4');
        int int94 = strBuilder93.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder67.appendFixedWidthPadLeft((java.lang.Object) strBuilder93, 41, '4');
        boolean boolean98 = strBuilder12.equals(strBuilder93);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "false" + "'", str14, "false");
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "true\n10" + "'", str45, "true\n10");
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\n" + "'", str62, "\n");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(intStream85);
        org.junit.Assert.assertNotNull(reader87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append((float) 22);
        java.lang.String str41 = strBuilder34.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        java.util.stream.IntStream intStream48 = strBuilder47.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln("");
        java.lang.String str54 = strBuilder53.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((long) (byte) 10);
        java.lang.String str64 = strBuilder60.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln("");
        java.lang.String str81 = strBuilder77.rightString((int) '4');
        java.lang.Object[] objArray82 = new java.lang.Object[] { strBuilder69, wildcardClass74, 10.0d, (-1.0d), str81 };
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder60.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder53.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder50.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder50, (int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.setLength((int) 'r');
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = null;
        boolean boolean92 = strBuilder88.contains(strMatcher91);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "true\n10" + "'", str64, "true\n10");
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\n" + "'", str81, "\n");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.setLength(24);
        char[] charArray59 = strBuilder40.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder40.append("true\n0.0\ntrue\nra", (int) (byte) -1, 68);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "true\n0.0\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "true\n0.0\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[t, r, u, e, \n, 0, ., 0, \n, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000]");
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(strMatcher36, "97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendSeparator("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNull();
        java.lang.String str42 = strBuilder38.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.deleteAll(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n35\n" + "'", str42, "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n35\n");
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        java.lang.String str10 = strBuilder6.rightString((int) '4');
        java.util.stream.IntStream intStream11 = strBuilder6.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendSeparator("\n1.0\n", 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        java.lang.String str24 = strBuilder20.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str41 = strBuilder37.rightString((int) '4');
        java.lang.Object[] objArray42 = new java.lang.Object[] { strBuilder29, wildcardClass34, 10.0d, (-1.0d), str41 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder20.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((long) (byte) 10);
        int int53 = strBuilder51.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder43.append((java.lang.CharSequence) strBuilder51);
        char[] charArray58 = strBuilder57.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder6.appendln(charArray58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder0.insert(66, charArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n" + "'", str10, "\n");
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true\n10" + "'", str24, "true\n10");
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n" + "'", str41, "\n");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[t, r, u, e, \n, 1, 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendNewLine();
        boolean boolean50 = strBuilder36.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.append((java.lang.Object) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder31.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strBuilder53.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder19.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        int int64 = strBuilder57.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append((java.lang.CharSequence) strBuilder68);
        java.lang.String str71 = strBuilder70.getNewLineText();
        boolean boolean72 = strBuilder57.equals(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder57.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder19.append((java.lang.CharSequence) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.append((java.lang.CharSequence) strBuilder79);
        java.lang.StringBuffer stringBuffer82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.appendln(stringBuffer82, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder85.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder86.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder86.insert((int) (short) 0, (double) 0);
        char[] charArray91 = strBuilder90.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder76.appendln(charArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder76.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder9.appendln((java.lang.Object) strBuilder76);
        char[] charArray96 = strBuilder76.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "0.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "0.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "true\n0.0\n144444444444444444444444444444444440.0\n\n0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "true\n0.0\n144444444444444444444444444444444440.0\n\n0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[t, r, u, e, \n, 0, ., 0, \n, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, ., 0, \n, \n, 0]");
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendSeparator("hi!");
        boolean boolean31 = strBuilder30.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        java.lang.String str43 = strBuilder39.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendFixedWidthPadLeft((int) (short) 1, (int) '4', '4');
        char[] charArray55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.append(charArray55, 13, 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer70 = strBuilder69.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder65.append(strBuilder69);
        char[] charArray72 = strBuilder65.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder50.appendln(charArray72);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder30.getChars(17, (int) (short) 1, charArray72, (int) 'e');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true\n10" + "'", str43, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(writer70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(0, charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder10.insert((int) (short) 10, charArray22, 0, (int) (short) 0);
        boolean boolean28 = strBuilder26.startsWith("\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) '#');
        java.lang.String str57 = strBuilder50.substring((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append((java.lang.CharSequence) strBuilder59);
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.appendln(stringBuffer62, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.lang.StringBuffer stringBuffer75 = strBuilder69.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader78 = strBuilder77.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.append((java.lang.CharSequence) strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.append(false);
        char[] charArray82 = strBuilder81.toCharArray();
        char[] charArray83 = strBuilder69.getChars(charArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder65.appendln(charArray83);
        char[] charArray85 = strBuilder50.getChars(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder26.insert(20, charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder26.clear();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "35\n" + "'", str57, "35\n");
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(stringBuffer75);
        org.junit.Assert.assertEquals(stringBuffer75.toString(), "true\n");
        org.junit.Assert.assertNotNull(reader78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "435\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "435\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[4, 3, 5, \n, \n]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "435\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "435\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[4, 3, 5, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "435\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "435\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[4, 3, 5, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(true);
        int int54 = strBuilder47.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.String str61 = strBuilder60.getNewLineText();
        boolean boolean62 = strBuilder47.equals(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder47.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder9.append((java.lang.CharSequence) strBuilder66);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.appendln("4true\n10############################### true\n\n", 34, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("tr");
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.setNewLineText("0.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.appendSeparator('\000', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder40.setNewLineText("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.minimizeCapacity();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(stringBuffer17, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        java.util.stream.IntStream intStream35 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst(' ');
        java.io.Reader reader41 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        java.util.stream.IntStream intStream48 = strBuilder47.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.append(strBuilder51);
        java.lang.StringBuffer stringBuffer53 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder28.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.append('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder28.append('a');
        java.lang.String str59 = strBuilder58.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.deleteFirst(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append((-1.0f));
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "true\n0.0\ntrue\nra" + "'", str59, "true\n0.0\ntrue\nra");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        java.lang.String str12 = strBuilder7.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) (byte) 10);
        java.lang.String str31 = strBuilder27.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        java.lang.String str48 = strBuilder44.rightString((int) '4');
        java.lang.Object[] objArray49 = new java.lang.Object[] { strBuilder36, wildcardClass41, 10.0d, (-1.0d), str48 };
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder27.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder13.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator("\n\nclass java.lang.Object10.0-1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln((long) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.appendFixedWidthPadRight((int) (byte) 100, 66, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append((java.lang.CharSequence) strBuilder64);
        java.lang.StringBuffer stringBuffer67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.appendln(stringBuffer67, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.insert((int) (short) 0, (double) 0);
        char[] charArray76 = strBuilder75.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder61.insert((int) '\000', charArray76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder7.appendln(charArray76, 1, 38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 38");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n " + "'", str12, "\n ");
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "true\n10" + "'", str31, "true\n10");
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\n" + "'", str48, "\n");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "0.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "0.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.appendln((double) 38);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceFirst('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.replaceAll("lse41\na\n", "\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        java.lang.String str50 = strBuilder49.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 10);
        java.lang.String str60 = strBuilder56.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendNewLine();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln("");
        java.lang.String str77 = strBuilder73.rightString((int) '4');
        java.lang.Object[] objArray78 = new java.lang.Object[] { strBuilder65, wildcardClass70, 10.0d, (-1.0d), str77 };
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder56.appendAll(objArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder49.appendAll(objArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder42.appendAll(objArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append((float) 'a');
        java.io.Writer writer84 = strBuilder83.asWriter();
        java.lang.String str85 = strBuilder83.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder83.replaceAll('#', 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder41.append(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "true\n10" + "'", str60, "true\n10");
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\n" + "'", str77, "\n");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(writer84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + " \nclass java.lang.Object10.0-1.0\n97.0" + "'", str85, " \nclass java.lang.Object10.0-1.0\n97.0");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder2.trim();
        int int39 = strBuilder37.indexOf("t");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.deleteAll("97########");
        java.lang.String str42 = strBuilder41.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        boolean boolean44 = strBuilder41.contains(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        int int13 = strBuilder7.lastIndexOf('4', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.io.Writer writer19 = strBuilder16.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendln(stringBuffer30, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendNewLine();
        boolean boolean53 = strBuilder39.equalsIgnoreCase(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        char[] charArray60 = strBuilder55.toCharArray();
        char[] charArray61 = strBuilder39.getChars(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder26.append(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder25.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder7.insert(1, (java.lang.Object) charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder7.appendln((long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln((float) 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendPadding(16, 'e');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ ]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendSeparator("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln("");
        java.lang.String str23 = strBuilder22.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        java.lang.String str33 = strBuilder29.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("");
        java.lang.String str50 = strBuilder46.rightString((int) '4');
        java.lang.Object[] objArray51 = new java.lang.Object[] { strBuilder38, wildcardClass43, 10.0d, (-1.0d), str50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder29.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder22.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.replace(strMatcher56, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((long) (byte) 10);
        java.lang.String str71 = strBuilder67.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendln(true);
        int int81 = strBuilder74.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder74.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader86 = strBuilder85.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.append((java.lang.CharSequence) strBuilder85);
        java.lang.String str88 = strBuilder87.getNewLineText();
        boolean boolean89 = strBuilder74.equals(strBuilder87);
        java.lang.String str90 = strBuilder87.toString();
        java.lang.StringBuffer stringBuffer91 = strBuilder87.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder67.appendln(stringBuffer91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder53.append(stringBuffer91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder0.appendln(stringBuffer91, 32, 322);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true\n10" + "'", str33, "true\n10");
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n" + "'", str50, "\n");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "true\n10" + "'", str71, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 4 + "'", int81 == 4);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertNotNull(stringBuffer91);
        org.junit.Assert.assertEquals(stringBuffer91.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst("\n1.0\n", "false");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln("t", 17, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.replaceFirst('a', '#');
        java.lang.String str9 = strBuilder7.rightString(19);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        java.lang.String str10 = strBuilder5.leftString(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.deleteAll(strMatcher11);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.deleteFirst("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.setNewLineText("\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst('g');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        int int14 = strBuilder12.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadLeft(13, (int) (short) 1, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer29 = strBuilder28.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append((java.lang.Object) writer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendNewLine();
        boolean boolean50 = strBuilder36.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.append((java.lang.Object) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder31.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strBuilder53.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder26.append(strBuilder53);
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((double) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder18.appendFixedWidthPadRight((java.lang.Object) strBuilder60, 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        char[] charArray26 = strBuilder21.toCharArray();
        char[] charArray27 = strBuilder5.getChars(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        java.util.stream.IntStream intStream34 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str40 = strBuilder39.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((long) (byte) 10);
        java.lang.String str50 = strBuilder46.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendNewLine();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln("");
        java.lang.String str67 = strBuilder63.rightString((int) '4');
        java.lang.Object[] objArray68 = new java.lang.Object[] { strBuilder55, wildcardClass60, 10.0d, (-1.0d), str67 };
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder46.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder36.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator("ass j", (int) (byte) 10);
        boolean boolean75 = strBuilder5.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder5.appendSeparator('#');
        java.lang.String str79 = strBuilder5.leftString((int) 'a');
        boolean boolean81 = strBuilder5.endsWith("## true\n\n###\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ ]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ ]");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true\n10" + "'", str50, "true\n10");
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        java.util.stream.IntStream intStream14 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendFixedWidthPadLeft(7, 4, 'r');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        boolean boolean20 = strBuilder18.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(true);
        java.util.stream.IntStream intStream31 = strBuilder30.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str35 = strBuilder34.getNewLineText();
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder30, strBuilder34, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder23.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        int int55 = strBuilder48.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append((java.lang.CharSequence) strBuilder59);
        java.lang.String str62 = strBuilder61.getNewLineText();
        boolean boolean63 = strBuilder48.equals(strBuilder61);
        java.lang.String str64 = strBuilder61.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder47.appendln((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.appendSeparator("false", "true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.setNewLineText("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.trim();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder18.append(strBuilder71, 55, 53);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(intStream14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        char char12 = strBuilder8.charAt(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.deleteFirst(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.appendln((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        java.lang.StringBuffer stringBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.appendln(stringBuffer32, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        int int50 = strBuilder45.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder37.appendln(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.deleteFirst(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.setCharAt((int) (short) 0, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder27.appendln(strBuilder70);
        java.io.Reader reader72 = strBuilder70.asReader();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + '\000' + "'", char12 == '\000');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader72);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        boolean boolean29 = strBuilder15.equalsIgnoreCase(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.append((java.lang.Object) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        char[] charArray36 = strBuilder31.toCharArray();
        char[] charArray37 = strBuilder15.getChars(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder8.insert(1, charArray37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence41 = strBuilder38.subSequence(0, 38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 38");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        int int19 = strBuilder12.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        java.lang.String str26 = strBuilder25.getNewLineText();
        boolean boolean27 = strBuilder12.equals(strBuilder25);
        java.lang.String str28 = strBuilder25.toString();
        java.lang.StringBuffer stringBuffer29 = strBuilder25.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder5.appendln(stringBuffer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst('\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.append(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        int int14 = strBuilder12.indexOf("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) (byte) 10);
        java.lang.String str25 = strBuilder21.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNewLine();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str42 = strBuilder38.rightString((int) '4');
        java.lang.Object[] objArray43 = new java.lang.Object[] { strBuilder30, wildcardClass35, 10.0d, (-1.0d), str42 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendAll(objArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder15.appendAll(objArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((long) (byte) 10);
        java.lang.String str55 = strBuilder51.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendNewLine();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln("");
        java.lang.String str72 = strBuilder68.rightString((int) '4');
        java.lang.Object[] objArray73 = new java.lang.Object[] { strBuilder60, wildcardClass65, 10.0d, (-1.0d), str72 };
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder51.appendAll(objArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader77 = strBuilder76.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append((java.lang.CharSequence) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((long) (byte) 10);
        int int84 = strBuilder82.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder74.append((java.lang.CharSequence) strBuilder82);
        char[] charArray89 = strBuilder88.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder45.append(charArray89);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "true\n10" + "'", str25, "true\n10");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n" + "'", str42, "\n");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "true\n10" + "'", str55, "true\n10");
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\n" + "'", str72, "\n");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[t, r, u, e, \n, 1, 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        java.lang.String str35 = strBuilder2.substring((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        int int43 = strBuilder36.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        boolean boolean48 = strBuilder45.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln(stringBuffer53, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strBuilder61.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder45.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer62, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(true);
        java.util.stream.IntStream intStream71 = strBuilder70.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(' ');
        java.io.Reader reader77 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.append((java.lang.CharSequence) strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendln(true);
        java.util.stream.IntStream intStream84 = strBuilder83.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder83.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder74.append(strBuilder87);
        java.lang.StringBuffer stringBuffer89 = strBuilder87.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder64.appendln(stringBuffer89);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder64.deleteFirst(strMatcher91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder2.append((java.lang.CharSequence) strBuilder92);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder2.replaceAll("e\n10", "4");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder96.appendNull();
        java.lang.String str98 = strBuilder97.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n\nclass java.lang.Object10.0-1.0\n" + "'", str35, "\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(intStream71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(intStream84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "\n\nclass java.lang.Object10.0-1.0\ntrue\n0.0\ntrue\n" + "'", str98, "\n\nclass java.lang.Object10.0-1.0\ntrue\n0.0\ntrue\n");
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        java.lang.String str47 = strBuilder43.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln("");
        java.lang.String str64 = strBuilder60.rightString((int) '4');
        java.lang.Object[] objArray65 = new java.lang.Object[] { strBuilder52, wildcardClass57, 10.0d, (-1.0d), str64 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder43.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(true);
        java.lang.StringBuffer stringBuffer76 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.append(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder33.appendln(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst(" \nclass java.lang.Object10.0-1.0\n97.0", "aaaaaaaaaaaaaaaaa");
        boolean boolean84 = strBuilder79.contains('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "true\n10" + "'", str47, "true\n10");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\n" + "'", str64, "\n");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        int int2 = strBuilder1.size();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(39, '#');
        boolean boolean32 = strBuilder28.isEmpty();
        boolean boolean34 = strBuilder28.contains('r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        boolean boolean11 = strBuilder9.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.setNewLineText("true\n10100.0 \n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(214);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 214");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("###########\n");
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert((int) (short) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = strBuilder1.toStringBuffer();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        boolean boolean6 = strBuilder1.contains(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.setLength((int) (short) 100);
        int int19 = strBuilder15.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append("\ntrue\n\n");
        java.lang.CharSequence charSequence22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.append(charSequence22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strBuilder15.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        boolean boolean26 = strBuilder25.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(stringBuffer4);
        org.junit.Assert.assertEquals(stringBuffer4.toString(), "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        java.lang.String str47 = strBuilder43.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln("");
        java.lang.String str64 = strBuilder60.rightString((int) '4');
        java.lang.Object[] objArray65 = new java.lang.Object[] { strBuilder52, wildcardClass57, 10.0d, (-1.0d), str64 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder43.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(true);
        java.lang.StringBuffer stringBuffer76 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.append(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder33.appendln(stringBuffer76);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        boolean boolean80 = strBuilder33.contains(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "true\n10" + "'", str47, "true\n10");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\n" + "'", str64, "\n");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendPadding(3, '#');
        java.lang.String str21 = strBuilder18.substring((int) ' ', 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln(stringBuffer26, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendSeparator(' ', 10);
        int int35 = strBuilder29.lastIndexOf('4', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.io.Writer writer41 = strBuilder38.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.appendln(stringBuffer52, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendNewLine();
        boolean boolean75 = strBuilder61.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder56.append((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader78 = strBuilder77.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.minimizeCapacity();
        char[] charArray82 = strBuilder77.toCharArray();
        char[] charArray83 = strBuilder61.getChars(charArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder48.append(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder47.appendln(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder29.insert(1, (java.lang.Object) charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder29.appendln((long) 10);
        boolean boolean89 = strBuilder18.equals(strBuilder29);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "###### true\n\n###" + "'", str21, "###### true\n\n###");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(writer41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[ ]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.replaceAll(strMatcher45, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.ensureCapacity(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append("\n\nclassajava.");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendSeparator('t', (int) '4');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteFirst(strMatcher11);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.insert((int) (short) 1, '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.setCharAt((int) 'e', '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.insert((int) (short) 0, "true\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(14);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.ensureCapacity((int) (byte) -1);
        boolean boolean38 = strBuilder34.startsWith("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.appendSeparator('\n', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        int int49 = strBuilder42.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        java.lang.String str56 = strBuilder55.getNewLineText();
        boolean boolean57 = strBuilder42.equals(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.replaceAll("444444444", "4");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.append((java.lang.CharSequence) "444444444");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder29.append(strBuilder41);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        boolean boolean64 = strBuilder41.contains(strMatcher63);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.replaceFirst('\n', '\000');
        int int32 = strBuilder29.lastIndexOf("\n ", (int) '3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(strBuilder12);
        int int17 = strBuilder12.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln((double) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.ensureCapacity(7);
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.append(stringBuffer24, (int) 'a', 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(false);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.trim();
        int int13 = strBuilder10.lastIndexOf('a', 38);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        boolean boolean3 = strBuilder0.contains("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln("");
        java.lang.String str7 = strBuilder6.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((long) (byte) 10);
        java.lang.String str17 = strBuilder13.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendNewLine();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln("");
        java.lang.String str34 = strBuilder30.rightString((int) '4');
        java.lang.Object[] objArray35 = new java.lang.Object[] { strBuilder22, wildcardClass27, 10.0d, (-1.0d), str34 };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder13.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder6.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        java.util.stream.IntStream intStream46 = strBuilder45.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        int int58 = strBuilder55.lastIndexOf(strMatcher56, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str62 = strBuilder61.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append((long) (byte) 10);
        java.lang.String str72 = strBuilder68.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendNewLine();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("");
        java.lang.String str89 = strBuilder85.rightString((int) '4');
        java.lang.Object[] objArray90 = new java.lang.Object[] { strBuilder77, wildcardClass82, 10.0d, (-1.0d), str89 };
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder68.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder61.appendAll(objArray90);
        java.lang.Object[] objArray93 = new java.lang.Object[] { strBuilder37, strBuilder39, "\n", 4, int58, strBuilder92 };
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder0.appendWithSeparators(objArray93, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder0.append(0.0d);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "true\n10" + "'", str17, "true\n10");
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n" + "'", str34, "\n");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "true\n10" + "'", str72, "true\n10");
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\n" + "'", str89, "\n");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[\n\nclass java.lang.Object10.0-1.0\n, true\n10, \n, 4, -1, \n\nclass java.lang.Object10.0-1.0\n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[\n\nclass java.lang.Object10.0-1.0\n, true\n10, \n, 4, -1, \n\nclass java.lang.Object10.0-1.0\n]");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        char[] charArray35 = strBuilder28.toCharArray(0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendNewLine();
        boolean boolean66 = strBuilder52.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder47.append((java.lang.Object) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.minimizeCapacity();
        char[] charArray73 = strBuilder68.toCharArray();
        char[] charArray74 = strBuilder52.getChars(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder46.appendln(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder28.append(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader79 = strBuilder78.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append((java.lang.CharSequence) strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append((long) (byte) 10);
        java.lang.String str86 = strBuilder82.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder82.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder82.deleteAll("\n1.0\ntrue\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder82.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder76.append((java.lang.CharSequence) strBuilder91);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#]");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ ]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "true\n10" + "'", str86, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        boolean boolean32 = strBuilder18.equalsIgnoreCase(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendNewLine();
        boolean boolean63 = strBuilder49.equalsIgnoreCase(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder44.append((java.lang.Object) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder44.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder13.appendln((java.lang.Object) strBuilder85);
        int int87 = strBuilder13.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder13.appendln(0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 34 + "'", int87 == 34);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, (int) (short) 1, ' ');
        boolean boolean37 = strBuilder13.equals((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.io.Writer writer45 = strBuilder42.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder13.appendln((java.lang.Object) strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder13.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(' ', 'g');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        java.lang.String str20 = strBuilder19.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((long) (byte) 10);
        java.lang.String str30 = strBuilder26.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendNewLine();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        java.lang.String str47 = strBuilder43.rightString((int) '4');
        java.lang.Object[] objArray48 = new java.lang.Object[] { strBuilder35, wildcardClass40, 10.0d, (-1.0d), str47 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder26.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder19.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder12.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((float) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strBuilder51, (int) (short) 1, ' ');
        java.lang.String str57 = strBuilder5.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder5.clear();
        java.lang.String str59 = strBuilder58.getNewLineText();
        int int62 = strBuilder58.lastIndexOf("true\n0.0\n\n", 257);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "true\n10" + "'", str30, "true\n10");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\n" + "'", str47, "\n");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteAll(strMatcher9);
        java.util.stream.IntStream intStream11 = strBuilder10.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.clear();
        int int13 = strBuilder10.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.setLength(52);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.append(1.0d);
        boolean boolean16 = strBuilder7.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendSeparator('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.deleteFirst("true4");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.replace(5, 52, "###### true\n\n###");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.insert(34, (double) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendPadding(10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendPadding(5, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append((int) (short) 100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str13 = strBuilder9.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replace(5, 50, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadLeft(39, 34, '\000');
        int int26 = strBuilder20.lastIndexOf('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str41 = strBuilder40.getNewLineText();
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder36, strBuilder40, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        java.util.stream.IntStream intStream54 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder29.append(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln("");
        java.lang.String str71 = strBuilder70.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln(true);
        java.util.stream.IntStream intStream78 = strBuilder77.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln("");
        java.lang.String str82 = strBuilder81.getNewLineText();
        java.lang.Object[] objArray87 = new java.lang.Object[] { strBuilder77, strBuilder81, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder70.appendAll(objArray87);
        java.lang.StringBuffer stringBuffer89 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder67.append(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder20.appendln(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder91.append(strBuilder92, 1, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder91.insert(14, (long) '\n');
        java.lang.String str99 = strBuilder91.getNullText();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\n" + "'", str13, "\n");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 9 + "'", int26 == 9);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "\ntrue\n\n100.04-1.0 ");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replaceFirst('a', '\n');
        java.lang.String str49 = strBuilder39.substring((int) (byte) 1);
        java.lang.String str51 = strBuilder39.substring(3);
        int int53 = strBuilder39.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder39.setNullText("\n\n100 04-1.0 truea");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "rue\n10############################### true\n\n\n1.0\n\n" + "'", str49, "rue\n10############################### true\n\n\n1.0\n\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "e\n10############################### true\n\n\n1.0\n\n" + "'", str51, "e\n10############################### true\n\n\n1.0\n\n");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 38 + "'", int53 == 38);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(0, (double) 13);
        java.lang.Class<?> wildcardClass48 = strBuilder47.getClass();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        boolean boolean11 = strBuilder9.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        int int25 = strBuilder22.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        java.lang.String str38 = strBuilder34.rightString(10);
        boolean boolean40 = strBuilder34.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder41.appendFixedWidthPadLeft((java.lang.Object) strBuilder54, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder41, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        java.lang.StringBuffer stringBuffer67 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder34.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder22.append(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder14.appendln((java.lang.Object) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder14.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder14.appendln('3');
        java.lang.String str77 = strBuilder14.midString(4, (int) (byte) -1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "true\n10" + "'", str38, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        int int4 = strBuilder1.indexOf(strMatcher2, 1);
        java.io.Reader reader5 = strBuilder1.asReader();
        int int7 = strBuilder1.lastIndexOf("\ntrue\n10\n10000");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder0.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.replaceFirst(strMatcher6, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendSeparator("true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteAll(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        java.lang.String str33 = strBuilder29.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("");
        java.lang.String str50 = strBuilder46.rightString((int) '4');
        java.lang.Object[] objArray51 = new java.lang.Object[] { strBuilder38, wildcardClass43, 10.0d, (-1.0d), str50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder29.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((long) (byte) 10);
        int int62 = strBuilder60.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder52.append((java.lang.CharSequence) strBuilder60);
        java.lang.StringBuffer stringBuffer67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.append(stringBuffer67, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.append(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder66.clear();
        char[] charArray77 = strBuilder76.toCharArray();
        char[] charArray78 = strBuilder23.getChars(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder11.appendln(charArray78);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder0.insert(19, (java.lang.Object) strBuilder11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 19");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true\n10" + "'", str33, "true\n10");
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n" + "'", str50, "\n");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]");
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str13 = strBuilder9.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replace(5, 50, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadLeft(39, 34, '\000');
        int int26 = strBuilder20.lastIndexOf('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str41 = strBuilder40.getNewLineText();
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder36, strBuilder40, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        java.util.stream.IntStream intStream54 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder29.append(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln("");
        java.lang.String str71 = strBuilder70.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln(true);
        java.util.stream.IntStream intStream78 = strBuilder77.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln("");
        java.lang.String str82 = strBuilder81.getNewLineText();
        java.lang.Object[] objArray87 = new java.lang.Object[] { strBuilder77, strBuilder81, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder70.appendAll(objArray87);
        java.lang.StringBuffer stringBuffer89 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder67.append(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder20.appendln(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder91.appendNewLine();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\n" + "'", str13, "\n");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 9 + "'", int26 == 9);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "\ntrue\n\n100.04-1.0 ");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceAll("4", "tr");
        int int53 = strBuilder46.indexOf("true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10100.0\n45\n\ntrue\n\n100.0-1.0 true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        java.util.stream.IntStream intStream28 = strBuilder27.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        java.lang.Object[] objArray37 = new java.lang.Object[] { strBuilder27, strBuilder31, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(false);
        boolean boolean45 = strBuilder38.equals(strBuilder44);
        boolean boolean47 = strBuilder38.contains("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        int int55 = strBuilder48.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder38.append((java.lang.Object) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.delete((int) '\n', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendln("true\n100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder15.append((java.lang.Object) strBuilder58);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.lang.String str16 = strBuilder14.rightString(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll("\ntrue\n\n100.04-1.0 true\n\ntrue\n10100.01\ntrue\n10\nclas s", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('a', 'r');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.append(strBuilder26, (int) '4', 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "e\n10" + "'", str16, "e\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        boolean boolean8 = strBuilder5.contains(strMatcher7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.setNullText("\ntrue\n\n100.04-1.0 true");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append("false", 38, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln("");
        java.lang.String str16 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str43 = strBuilder39.rightString((int) '4');
        java.lang.Object[] objArray44 = new java.lang.Object[] { strBuilder31, wildcardClass36, 10.0d, (-1.0d), str43 };
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder15.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder12.appendWithSeparators(objArray44, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder12.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator(' ', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendSeparator('t');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n" + "'", str43, "\n");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendln(stringBuffer30, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.reverse();
        int int36 = strBuilder34.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        int int38 = strBuilder34.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 10);
        java.lang.String str48 = strBuilder44.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.deleteAll("");
        java.lang.String str51 = strBuilder44.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strBuilder44.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder44.appendln("97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        java.util.stream.IntStream intStream61 = strBuilder55.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.appendln((java.lang.Object) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        int int69 = strBuilder63.indexOf(strMatcher67, (int) '4');
        java.util.stream.IntStream intStream70 = strBuilder63.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder63.append((double) (short) 10);
        java.lang.StringBuffer stringBuffer73 = strBuilder72.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder62.append(stringBuffer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder34.appendln(stringBuffer73);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder22.appendln(stringBuffer73, 36, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "true\n10" + "'", str48, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(intStream70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(stringBuffer73);
        org.junit.Assert.assertEquals(stringBuffer73.toString(), "\n10.0");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append((float) 22);
        java.lang.String str41 = strBuilder34.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        java.util.stream.IntStream intStream48 = strBuilder47.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln("");
        java.lang.String str54 = strBuilder53.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((long) (byte) 10);
        java.lang.String str64 = strBuilder60.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln("");
        java.lang.String str81 = strBuilder77.rightString((int) '4');
        java.lang.Object[] objArray82 = new java.lang.Object[] { strBuilder69, wildcardClass74, 10.0d, (-1.0d), str81 };
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder60.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder53.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder50.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder50, (int) (short) 0, ' ');
        java.lang.String str91 = strBuilder88.substring(3, 32);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "true\n10" + "'", str64, "true\n10");
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\n" + "'", str81, "\n");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "eahi!-1\n22.0" + "'", str91, "eahi!-1\n22.0");
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        int int52 = strBuilder48.indexOf("true\n100.0", (int) '4');
        java.util.stream.IntStream intStream53 = strBuilder48.chars();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.deleteCharAt(17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 17");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(intStream53);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        boolean boolean32 = strBuilder18.equalsIgnoreCase(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendNewLine();
        boolean boolean63 = strBuilder49.equalsIgnoreCase(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder44.append((java.lang.Object) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder44.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder13.appendln((java.lang.Object) strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendPadding(10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendPadding(5, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        java.lang.String str14 = strBuilder10.rightString((int) '4');
        java.util.stream.IntStream intStream15 = strBuilder10.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.appendSeparator("\n1.0\n", 45);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendln(strBuilder18, (int) '\n', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\n" + "'", str14, "\n");
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.deleteFirst(strMatcher5);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        int int38 = strBuilder33.indexOf('r', 39);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder33.appendSeparator("435\n0.0\ntrue\n10\n100", "lse41\na\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        int int23 = strBuilder4.lastIndexOf("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder4.append((long) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('4', 6);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll(strMatcher29, " ja");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.lang.String str3 = strBuilder1.rightString(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendln(stringBuffer10, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendln(stringBuffer14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln("");
        java.lang.String str22 = strBuilder21.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((long) (byte) 10);
        java.lang.String str32 = strBuilder28.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendNewLine();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln("");
        java.lang.String str49 = strBuilder45.rightString((int) '4');
        java.lang.Object[] objArray50 = new java.lang.Object[] { strBuilder37, wildcardClass42, 10.0d, (-1.0d), str49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder28.appendAll(objArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder21.appendAll(objArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder18.appendWithSeparators(objArray50, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder5.appendAll(objArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder5.append((long) 322);
        boolean boolean58 = strBuilder5.isEmpty();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "e\n10" + "'", str3, "e\n10");
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10" + "'", str32, "true\n10");
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n" + "'", str49, "\n");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        java.lang.String str12 = strBuilder7.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        java.io.Writer writer21 = strBuilder18.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator("true\n10############################### true\n\n", "hi!");
        char[] charArray30 = strBuilder24.toCharArray(0, 18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder15.insert(53, charArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 53");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n " + "'", str12, "\n ");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "\n1.0\ntrue\n10######");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "\n1.0\ntrue\n10######");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[\n, 1, ., 0, \n, t, r, u, e, \n, 1, 0, #, #, #, #, #, #]");
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('4', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        java.lang.StringBuffer stringBuffer30 = strBuilder26.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.appendln(stringBuffer30);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "true4\nhi!");
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder42.clear();
        char[] charArray53 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendln(true);
        java.lang.String str57 = strBuilder52.leftString(20);
        int int60 = strBuilder52.lastIndexOf("tr", 4);
        java.lang.String str63 = strBuilder52.midString(45, 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder52.append((long) 78);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n" + "'", str57, "true\n");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        int int13 = strBuilder11.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        boolean boolean18 = strBuilder3.equals(strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(false);
        char[] charArray29 = strBuilder28.toCharArray();
        java.lang.String str31 = strBuilder28.leftString((int) ' ');
        int int33 = strBuilder28.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendNewLine();
        boolean boolean53 = strBuilder39.equalsIgnoreCase(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder34.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream60 = strBuilder56.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder28.appendFixedWidthPadLeft((java.lang.Object) strBuilder56, 12, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln("");
        java.lang.String str68 = strBuilder64.rightString((int) '4');
        java.lang.String str70 = strBuilder64.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.append(0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteAll(strMatcher79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder56.appendln(strBuilder78, (int) (short) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder83.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.append((java.lang.Object) "4");
        boolean boolean89 = strBuilder20.equals((java.lang.Object) "4");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "false" + "'", str31, "false");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(intStream60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\n" + "'", str68, "\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\n" + "'", str70, "\n");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendSeparator("ueahi!-1\n#");
        int int36 = strBuilder28.indexOf("\n\n100 04-1.0 truea", 66);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.lang.StringBuffer stringBuffer23 = strBuilder17.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, 68, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.replaceFirst("ass j", "444444444");
        java.lang.String str34 = strBuilder31.midString(0, 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln("");
        java.lang.String str16 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str43 = strBuilder39.rightString((int) '4');
        java.lang.Object[] objArray44 = new java.lang.Object[] { strBuilder31, wildcardClass36, 10.0d, (-1.0d), str43 };
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder15.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder12.appendWithSeparators(objArray44, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.setNullText("true\n10\nclass java.lang.Object10.0-1.0true\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln("ueahi!-1\n#", 76, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n" + "'", str43, "\n");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int10 = strBuilder3.indexOf("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.appendSeparator('4', 39);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        java.lang.String str42 = strBuilder33.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder33.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendFixedWidthPadRight(36, 13, '\n');
        char[] charArray49 = strBuilder33.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\ntrue36\n\n\n\n\n\n\n\n\n\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\ntrue36\n\n\n\n\n\n\n\n\n\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[\n, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, t, r, u, e, \n, 1, 0, \n, t, r, u, e, 3, 6, \n, \n, \n, \n, \n, \n, \n, \n, \n, \n, \n]");
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        int int10 = strBuilder5.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, 12, '#');
        char[] charArray41 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "false######4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "false######4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[f, a, l, s, e, #, #, #, #, #, #, 4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        boolean boolean51 = strBuilder49.contains("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        java.lang.String str52 = strBuilder49.getNullText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        int int46 = strBuilder43.lastIndexOf("97########");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.deleteAll(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.appendln(stringBuffer53, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.replace(strMatcher60, "e\n10", (int) (byte) 0, 100, 210);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        int int67 = strBuilder56.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append(' ');
        java.util.Iterator<java.lang.String> strItor72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendAll(strItor72);
        char[] charArray74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.append(charArray74, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader83 = strBuilder82.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.append((java.lang.CharSequence) strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder87.trim();
        char[] charArray89 = strBuilder88.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder77.insert(0, charArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder56.append(charArray89);
        char[] charArray92 = strBuilder43.getChars(charArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder43.setLength(14);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(reader83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "\ntrue\n\n100.04-1.0 true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "\ntrue\n\n100.04-1.0 true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[\n, t, r, u, e, \n, \n, 1, 0, 0, ., 0, 4, -, 1, ., 0,  , t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendFixedWidthPadLeft((java.lang.Object) strBuilder13, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append((double) 0);
        int int19 = strBuilder18.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setNewLineText("true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append(257);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.setNullText("###### true\n\n###");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.trim();
        char[] charArray8 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln(stringBuffer13, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.append((float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        boolean boolean42 = strBuilder28.equalsIgnoreCase(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder23.append((java.lang.Object) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder23.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((long) (byte) 10);
        java.lang.String str58 = strBuilder54.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        java.lang.String str77 = strBuilder74.toString();
        java.lang.StringBuffer stringBuffer78 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder54.appendln(stringBuffer78);
        boolean boolean80 = strBuilder45.equalsIgnoreCase(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder45, 3, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.appendln("true\n10\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "true\n10" + "'", str58, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(stringBuffer78);
        org.junit.Assert.assertEquals(stringBuffer78.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replace(0, 50, "true\n10############################### true\n\n");
        int int32 = strBuilder29.indexOf('t', 20);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 39 + "'", int32 == 39);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("true\n10############################### true\n\n");
        int int16 = strBuilder12.indexOf("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append(' ');
        java.util.Iterator<java.lang.String> strItor21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendAll(strItor21);
        char[] charArray23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.append(charArray23, 13, (-1));
        boolean boolean27 = strBuilder12.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.clear();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int11 = strBuilder7.indexOf('#');
        java.lang.String str14 = strBuilder7.midString((-1), 14);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "true\n10" + "'", str14, "true\n10");
    }
}

