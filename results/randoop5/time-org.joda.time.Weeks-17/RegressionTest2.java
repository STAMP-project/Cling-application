import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks0.get(durationFieldType3);
        org.joda.time.Weeks weeks5 = weeks0.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = weeks8.minus(weeks9);
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = weeks11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = weeks13.getFieldType();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        boolean boolean16 = weeks6.isLessThan(weeks15);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks6.plus(0);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = weeks32.get(durationFieldType33);
        org.joda.time.Weeks weeks36 = weeks32.plus((-1));
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = weeks36.negated();
        boolean boolean39 = weeks6.isGreaterThan(weeks38);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-4W" + "'", str37, "P-4W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks30 = weeks27.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks11.minus(1030);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks18.plus(weeks19);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        boolean boolean36 = weeks18.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks38 = weeks18.plus((int) '#');
        org.joda.time.Weeks weeks39 = weeks17.minus(weeks18);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = weeks39.isSupported(durationFieldType40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks50.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.MutablePeriod mutablePeriod56 = weeks55.toMutablePeriod();
        org.joda.time.Weeks weeks57 = weeks53.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks42.plus(weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        boolean boolean62 = weeks60.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks63.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        java.lang.String str67 = weeks66.toString();
        boolean boolean68 = weeks60.isLessThan(weeks66);
        org.joda.time.Weeks weeks69 = weeks59.plus(weeks60);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType71 = weeks70.getFieldType();
        boolean boolean72 = weeks69.isSupported(durationFieldType71);
        int int73 = weeks57.get(durationFieldType71);
        org.joda.time.Weeks weeks75 = weeks57.minus((int) ' ');
        boolean boolean76 = weeks39.isGreaterThan(weeks57);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks78 = weeks77.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks81 = weeks79.dividedBy((int) '4');
        org.joda.time.Weeks weeks83 = weeks79.multipliedBy((int) (short) 0);
        int int84 = weeks79.size();
        org.joda.time.Weeks weeks85 = weeks39.minus(weeks79);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "P-3W" + "'", str67, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(weeks85);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType5 = weeks4.getPeriodType();
        org.joda.time.Weeks weeks7 = weeks4.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks9 = weeks4.dividedBy((int) 'a');
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks10.plus(weeks11);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        boolean boolean28 = weeks10.isGreaterThan(weeks26);
        int int29 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks10);
        org.joda.time.DurationFieldType durationFieldType30 = weeks9.getFieldType();
        int int31 = weeks3.get(durationFieldType30);
        org.joda.time.MutablePeriod mutablePeriod32 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks3.plus(4);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(weeks34);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks11.minus((-3));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks20.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks13.plus(weeks20);
        org.joda.time.DurationFieldType durationFieldType28 = weeks27.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(durationFieldType28);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.Weeks weeks14 = weeks3.minus((int) (byte) 100);
        int int15 = weeks14.size();
        org.joda.time.Weeks weeks17 = weeks14.plus(400);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(weeks17);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks24 = weeks19.minus((int) (short) 10);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period26 = weeks25.toPeriod();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks29.dividedBy((int) '4');
        org.joda.time.Weeks weeks33 = weeks29.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks34 = weeks25.minus(weeks33);
        org.joda.time.Weeks weeks36 = weeks34.dividedBy(103);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks40 = weeks38.plus((-4));
        org.joda.time.Weeks weeks41 = weeks38.negated();
        boolean boolean42 = weeks34.equals((java.lang.Object) weeks41);
        org.joda.time.Weeks weeks43 = weeks19.minus(weeks34);
        java.lang.String str44 = weeks34.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P2W" + "'", str44, "P2W");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        int int13 = weeks8.get(durationFieldType12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks14.plus(weeks15);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        boolean boolean32 = weeks14.isGreaterThan(weeks30);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType35 = weeks34.getPeriodType();
        org.joda.time.Weeks weeks37 = weeks34.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        boolean boolean56 = weeks38.isGreaterThan(weeks54);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType58 = weeks57.getFieldType();
        int int59 = weeks54.get(durationFieldType58);
        boolean boolean60 = weeks34.isSupported(durationFieldType58);
        boolean boolean61 = weeks14.isSupported(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType62 = weeks14.getFieldType();
        boolean boolean63 = weeks8.isSupported(durationFieldType62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        boolean boolean66 = weeks64.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        boolean boolean72 = weeks64.isLessThan(weeks70);
        org.joda.time.Weeks weeks73 = weeks70.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.MutablePeriod mutablePeriod76 = weeks75.toMutablePeriod();
        org.joda.time.Weeks weeks77 = weeks73.plus(weeks75);
        int int78 = weeks75.size();
        org.joda.time.DurationFieldType durationFieldType79 = null;
        boolean boolean80 = weeks75.isSupported(durationFieldType79);
        org.joda.time.Weeks weeks82 = weeks75.multipliedBy((-1027));
        org.joda.time.Weeks weeks84 = weeks75.dividedBy((-927));
        boolean boolean85 = weeks8.isLessThan(weeks75);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks1.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        int int19 = weeks18.size();
        org.joda.time.Weeks weeks20 = weeks18.negated();
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks20);
        org.joda.time.Weeks weeks24 = weeks20.plus((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = weeks24.getValue((-14));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -14");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.plus(0);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Period period11 = weeks7.toPeriod();
        org.joda.time.DurationFieldType durationFieldType12 = weeks7.getFieldType();
        boolean boolean13 = weeks4.isSupported(durationFieldType12);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks4.equals((java.lang.Object) str19);
        int int22 = weeks4.getValue(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-4W" + "'", str19, "P-4W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-3) + "'", int22 == (-3));
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.PeriodType periodType29 = weeks0.getPeriodType();
        int int30 = weeks0.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks13 = weeks11.multipliedBy(101);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-2W");
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        boolean boolean6 = weeks3.equals((java.lang.Object) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod7 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = weeks8.plus(weeks14);
        org.joda.time.Weeks weeks18 = weeks14.dividedBy(3);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks19.plus(weeks20);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType31 = weeks30.getFieldType();
        boolean boolean32 = weeks29.isSupported(durationFieldType31);
        boolean boolean33 = weeks14.isSupported(durationFieldType31);
        boolean boolean34 = weeks3.isSupported(durationFieldType31);
        int int35 = weeks1.get(durationFieldType31);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType8 = weeks7.getFieldType();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = weeks18.plus(weeks20);
        org.joda.time.Weeks weeks23 = weeks7.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.dividedBy((int) (short) 100);
        boolean boolean26 = weeks5.isGreaterThan(weeks22);
        org.joda.time.DurationFieldType durationFieldType27 = weeks5.getFieldType();
        org.joda.time.Weeks weeks28 = null;
        org.joda.time.Weeks weeks29 = weeks5.plus(weeks28);
        java.lang.String str30 = weeks5.toString();
        int int31 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-3W" + "'", str30, "P-3W");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = weeks30.minus(weeks31);
        org.joda.time.DurationFieldType durationFieldType34 = weeks31.getFieldType();
        boolean boolean35 = weeks28.isSupported(durationFieldType34);
        org.joda.time.Weeks weeks37 = weeks28.multipliedBy((int) (short) 100);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = weeks38.plus(weeks44);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        java.lang.String str52 = weeks51.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.weeks((-1));
        int int55 = weeks54.size();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks60 = weeks58.dividedBy((int) '4');
        int int61 = weeks58.size();
        org.joda.time.Period period62 = weeks58.toPeriod();
        org.joda.time.DurationFieldType durationFieldType63 = weeks58.getFieldType();
        org.joda.time.Weeks weeks64 = weeks54.minus(weeks58);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks65.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        boolean boolean73 = weeks65.isLessThan(weeks71);
        org.joda.time.Weeks weeks74 = weeks71.negated();
        org.joda.time.Weeks weeks75 = weeks54.plus(weeks74);
        boolean boolean76 = weeks51.isLessThan(weeks75);
        org.joda.time.MutablePeriod mutablePeriod77 = weeks51.toMutablePeriod();
        int int78 = weeks51.getWeeks();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks82 = weeks81.negated();
        org.joda.time.Weeks weeks83 = weeks80.minus(weeks81);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks85 = weeks84.negated();
        org.joda.time.PeriodType periodType86 = weeks84.getPeriodType();
        boolean boolean87 = weeks80.isGreaterThan(weeks84);
        org.joda.time.Weeks weeks89 = weeks84.minus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType90 = weeks89.getFieldType();
        boolean boolean91 = weeks51.isSupported(durationFieldType90);
        boolean boolean92 = weeks47.equals((java.lang.Object) durationFieldType90);
        int int93 = weeks37.get(durationFieldType90);
        int int94 = weeks26.get(durationFieldType90);
        java.lang.Class<?> wildcardClass95 = durationFieldType90.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-3W" + "'", str52, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 3200 + "'", int93 == 3200);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-3) + "'", int94 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.DurationFieldType durationFieldType27 = weeks6.getFieldType();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        boolean boolean31 = weeks28.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks32 = weeks6.plus(weeks28);
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        java.lang.String str6 = weeks2.toString();
        org.joda.time.Weeks weeks8 = weeks2.dividedBy((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        java.lang.Class<?> wildcardClass10 = weeks9.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.PeriodType periodType15 = weeks14.getPeriodType();
        java.lang.Class<?> wildcardClass16 = periodType15.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = weeks12.getFieldType();
        int int14 = weeks1.get(durationFieldType13);
        org.joda.time.Weeks weeks16 = weeks1.minus((int) ' ');
        org.joda.time.Weeks weeks18 = weeks16.multipliedBy(1030);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod4 = weeks0.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks0.multipliedBy((int) (short) 1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks2 = weeks0.minus((-1));
        org.joda.time.PeriodType periodType3 = weeks0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours4 = weeks0.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 168");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks7.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        int int17 = weeks14.size();
        org.joda.time.Weeks weeks18 = weeks14.negated();
        boolean boolean19 = weeks11.isGreaterThan(weeks14);
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        int int21 = weeks4.get(durationFieldType20);
        org.joda.time.PeriodType periodType22 = weeks4.getPeriodType();
        java.lang.String str23 = weeks4.toString();
        org.joda.time.Weeks weeks24 = weeks1.minus(weeks4);
        int int25 = weeks24.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P100W" + "'", str23, "P100W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-100) + "'", int25 == (-100));
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks7.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        int int17 = weeks14.size();
        org.joda.time.Weeks weeks18 = weeks14.negated();
        boolean boolean19 = weeks11.isGreaterThan(weeks14);
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        int int21 = weeks4.get(durationFieldType20);
        org.joda.time.PeriodType periodType22 = weeks4.getPeriodType();
        java.lang.String str23 = weeks4.toString();
        org.joda.time.Weeks weeks24 = weeks1.minus(weeks4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType26 = weeks4.getFieldType((-927));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -927");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P100W" + "'", str23, "P100W");
        org.junit.Assert.assertNotNull(weeks24);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P10W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks0.multipliedBy((-100));
        org.joda.time.MutablePeriod mutablePeriod21 = weeks0.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks24.size();
        org.joda.time.Weeks weeks28 = weeks24.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Weeks weeks35 = weeks31.negated();
        boolean boolean36 = weeks28.isGreaterThan(weeks31);
        org.joda.time.DurationFieldType durationFieldType37 = weeks28.getFieldType();
        org.joda.time.Weeks weeks39 = weeks28.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeks((-1));
        int int42 = weeks41.size();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks47 = weeks45.dividedBy((int) '4');
        int int48 = weeks45.size();
        org.joda.time.Period period49 = weeks45.toPeriod();
        org.joda.time.DurationFieldType durationFieldType50 = weeks45.getFieldType();
        org.joda.time.Weeks weeks51 = weeks41.minus(weeks45);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = weeks41.plus(weeks61);
        org.joda.time.Weeks weeks63 = weeks39.plus(weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.TWO;
        int int65 = weeks64.size();
        org.joda.time.Weeks weeks67 = weeks64.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks68 = weeks62.plus(weeks64);
        int int69 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        java.lang.String str74 = weeks73.toString();
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.ONE;
        int int76 = weeks73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks75);
        org.joda.time.Weeks weeks78 = weeks75.plus((int) (short) -1);
        org.joda.time.Weeks weeks80 = weeks75.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks82 = weeks80.dividedBy((int) (byte) 1);
        org.joda.time.Weeks weeks83 = weeks68.minus(weeks80);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "P-3W" + "'", str74, "P-3W");
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        org.joda.time.PeriodType periodType44 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks46.plus((int) (short) 0);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        boolean boolean50 = weeks0.isLessThan(weeks48);
        org.joda.time.DurationFieldType durationFieldType51 = weeks48.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(durationFieldType51);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int31 = weeks3.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType32 = weeks3.getFieldType();
        int int34 = weeks3.getValue(0);
        int int35 = weeks3.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks10 = weeks0.dividedBy(100);
        org.joda.time.Weeks weeks12 = weeks10.plus(1);
        org.joda.time.Weeks weeks13 = weeks10.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType(0);
        org.joda.time.Weeks weeks9 = weeks2.plus(weeks5);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        org.joda.time.Weeks weeks18 = weeks10.plus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks24.plus((int) (short) -1);
        int int28 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        int int29 = weeks27.getWeeks();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType31 = weeks30.getFieldType();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks38.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.MutablePeriod mutablePeriod44 = weeks43.toMutablePeriod();
        org.joda.time.Weeks weeks45 = weeks41.plus(weeks43);
        org.joda.time.Weeks weeks46 = weeks30.plus(weeks45);
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (short) 100);
        boolean boolean49 = weeks27.isGreaterThan(weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = weeks50.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.MutablePeriod mutablePeriod64 = weeks63.toMutablePeriod();
        org.joda.time.Weeks weeks65 = weeks61.plus(weeks63);
        org.joda.time.Weeks weeks66 = weeks50.plus(weeks65);
        org.joda.time.Weeks weeks68 = weeks65.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        boolean boolean71 = weeks69.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        java.lang.String str76 = weeks75.toString();
        org.joda.time.Weeks weeks77 = weeks69.plus(weeks75);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks79 = weeks78.negated();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        java.lang.String str82 = weeks81.toString();
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.ONE;
        int int84 = weeks81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks83);
        org.joda.time.Weeks weeks86 = weeks83.plus((int) (short) -1);
        int int87 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks86);
        org.joda.time.Weeks weeks89 = weeks69.plus((int) (short) 100);
        org.joda.time.Weeks weeks91 = weeks69.multipliedBy(3);
        org.joda.time.Weeks weeks92 = weeks68.minus(weeks69);
        boolean boolean93 = weeks48.isGreaterThan(weeks69);
        boolean boolean94 = weeks9.isLessThan(weeks69);
        org.joda.time.Weeks weeks96 = weeks69.plus((int) (short) 10);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "P-3W" + "'", str76, "P-3W");
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "P-3W" + "'", str82, "P-3W");
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(weeks96);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy(1);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        org.joda.time.Weeks weeks29 = weeks25.multipliedBy((int) (short) 0);
        int int30 = weeks25.size();
        int int31 = weeks25.getWeeks();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = weeks32.plus(weeks38);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        int int47 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks46.plus((int) (short) -1);
        int int50 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks32.plus((int) (short) 100);
        org.joda.time.Weeks weeks54 = weeks52.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.MutablePeriod mutablePeriod69 = weeks68.toMutablePeriod();
        org.joda.time.Weeks weeks70 = weeks66.plus(weeks68);
        org.joda.time.Weeks weeks71 = weeks55.plus(weeks70);
        org.joda.time.Weeks weeks73 = weeks70.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks74 = weeks73.negated();
        boolean boolean75 = weeks54.isGreaterThan(weeks73);
        int int76 = weeks54.getWeeks();
        org.joda.time.Weeks weeks77 = weeks25.minus(weeks54);
        boolean boolean78 = weeks20.isGreaterThan(weeks54);
        org.joda.time.DurationFieldType durationFieldType79 = weeks20.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1030 + "'", int76 == 1030);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(durationFieldType79);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.joda.time.DurationFieldType durationFieldType19 = weeks16.getFieldType(0);
        boolean boolean20 = weeks13.isSupported(durationFieldType19);
        boolean boolean21 = weeks7.isSupported(durationFieldType19);
        org.joda.time.PeriodType periodType22 = weeks7.getPeriodType();
        org.joda.time.Weeks weeks23 = weeks7.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType25 = weeks7.getFieldType((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-3W");
        org.joda.time.DurationFieldType durationFieldType2 = weeks1.getFieldType();
        java.lang.String str3 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P-3W" + "'", str3, "P-3W");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks24 = weeks20.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks9.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        int int29 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks30 = weeks4.plus(weeks8);
        org.joda.time.Weeks weeks32 = weeks4.plus(4);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = weeks16.plus(weeks22);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks30.plus((int) (short) -1);
        int int34 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        int int35 = weeks33.getWeeks();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = weeks38.get(durationFieldType39);
        int int41 = weeks38.size();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.DurationFieldType durationFieldType45 = weeks44.getFieldType();
        boolean boolean46 = weeks38.isSupported(durationFieldType45);
        int int47 = weeks33.get(durationFieldType45);
        int int48 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks50 = weeks14.dividedBy((-103));
        // The following exception was thrown during execution in test generation
        try {
            int int52 = weeks14.getValue(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        boolean boolean27 = weeks17.equals((java.lang.Object) weeks24);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks39.plus(weeks41);
        org.joda.time.Weeks weeks44 = weeks28.plus(weeks43);
        org.joda.time.Weeks weeks46 = weeks43.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks46.negated();
        boolean boolean48 = weeks17.isGreaterThan(weeks47);
        org.joda.time.DurationFieldType durationFieldType50 = weeks47.getFieldType(0);
        java.lang.Class<?> wildcardClass51 = weeks47.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = weeks14.minus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.PeriodType periodType20 = weeks18.getPeriodType();
        boolean boolean21 = weeks14.isGreaterThan(weeks18);
        org.joda.time.Weeks weeks23 = weeks18.minus((int) (byte) 0);
        org.joda.time.Duration duration24 = weeks23.toStandardDuration();
        boolean boolean25 = weeks10.equals((java.lang.Object) duration24);
        org.joda.time.Weeks weeks27 = weeks10.plus(9);
        org.joda.time.Weeks weeks28 = null;
        boolean boolean29 = weeks27.isLessThan(weeks28);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.DurationFieldType durationFieldType9 = weeks8.getFieldType();
        boolean boolean10 = weeks2.isSupported(durationFieldType9);
        org.joda.time.Weeks weeks11 = weeks2.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(weeks11);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = weeks10.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks10.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks17 = weeks9.minus(weeks10);
        org.joda.time.Weeks weeks19 = weeks9.dividedBy(10);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((-1));
        int int23 = weeks22.size();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Period period30 = weeks26.toPeriod();
        org.joda.time.DurationFieldType durationFieldType31 = weeks26.getFieldType();
        org.joda.time.Weeks weeks32 = weeks22.minus(weeks26);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = weeks39.negated();
        org.joda.time.Weeks weeks43 = weeks22.plus(weeks42);
        org.joda.time.Weeks weeks45 = weeks43.dividedBy((-3));
        int int46 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks43);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks24 = weeks20.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks9.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        int int29 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks30 = weeks4.plus(weeks8);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = weeks31.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks45.plus((int) (short) -1);
        int int49 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks48);
        org.joda.time.Weeks weeks51 = weeks31.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod52 = weeks51.toMutablePeriod();
        org.joda.time.Weeks weeks53 = weeks51.negated();
        boolean boolean54 = weeks30.equals((java.lang.Object) weeks53);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        int int8 = weeks2.getWeeks();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        org.joda.time.Weeks weeks17 = weeks9.plus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks23.plus((int) (short) -1);
        int int27 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks9.plus((int) (short) 100);
        org.joda.time.Weeks weeks31 = weeks29.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = weeks32.getFieldType();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = weeks32.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks47.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        boolean boolean52 = weeks31.isGreaterThan(weeks50);
        int int53 = weeks31.getWeeks();
        org.joda.time.Weeks weeks54 = weeks2.minus(weeks31);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks57.dividedBy((int) '4');
        int int60 = weeks57.size();
        java.lang.String str61 = weeks57.toString();
        org.joda.time.Period period62 = weeks57.toPeriod();
        int int63 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        java.lang.String str64 = weeks31.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-3) + "'", int8 == (-3));
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1030 + "'", int53 == 1030);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P-3W" + "'", str61, "P-3W");
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P1030W" + "'", str64, "P1030W");
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((-1));
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks8.dividedBy((int) '4');
        int int11 = weeks8.size();
        org.joda.time.Period period12 = weeks8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType13 = weeks8.getFieldType();
        org.joda.time.Weeks weeks14 = weeks4.minus(weeks8);
        org.joda.time.Weeks weeks16 = weeks14.minus((-3));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks23.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks16.plus(weeks23);
        org.joda.time.Weeks weeks31 = weeks1.plus(weeks16);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = weeks32.getFieldType();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = weeks32.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks47.plus((int) (short) 10);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks51.plus(weeks52);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.ONE;
        int int68 = weeks65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks67);
        boolean boolean69 = weeks51.isGreaterThan(weeks67);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Period period71 = weeks51.toPeriod();
        boolean boolean72 = weeks47.isLessThan(weeks51);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        boolean boolean76 = weeks74.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks78 = weeks77.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        java.lang.String str81 = weeks80.toString();
        boolean boolean82 = weeks74.isLessThan(weeks80);
        org.joda.time.Weeks weeks83 = weeks73.plus(weeks74);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks85 = weeks84.negated();
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks85);
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks85);
        java.lang.String str88 = weeks87.toString();
        org.joda.time.Weeks weeks89 = org.joda.time.Weeks.ONE;
        int int90 = weeks87.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks89);
        boolean boolean91 = weeks73.isGreaterThan(weeks89);
        org.joda.time.Weeks weeks92 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Period period93 = weeks73.toPeriod();
        org.joda.time.Weeks weeks94 = weeks51.minus(weeks73);
        org.joda.time.Weeks weeks96 = weeks94.multipliedBy((-103));
        org.joda.time.Weeks weeks97 = weeks31.minus(weeks96);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P-3W" + "'", str81, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "P-3W" + "'", str88, "P-3W");
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertNotNull(period93);
        org.junit.Assert.assertNotNull(weeks94);
        org.junit.Assert.assertNotNull(weeks96);
        org.junit.Assert.assertNotNull(weeks97);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks45.multipliedBy((int) (short) 10);
        boolean boolean48 = weeks2.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks50 = weeks45.minus((int) ' ');
        org.joda.time.Duration duration51 = weeks50.toStandardDuration();
        org.joda.time.Duration duration52 = weeks50.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.minus(0);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = weeks19.minus(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Duration duration26 = weeks22.toStandardDuration();
        org.joda.time.Weeks weeks28 = weeks22.plus(100);
        int int29 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = weeks6.isSupported(durationFieldType30);
        org.joda.time.Weeks weeks33 = weeks6.dividedBy(3);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks33);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Duration duration8 = weeks7.toStandardDuration();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks24 = weeks20.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks9.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.ONE;
        int int34 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks35 = weeks27.plus(weeks31);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType37 = weeks36.getPeriodType();
        org.joda.time.Weeks weeks39 = weeks36.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks41 = weeks36.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod42 = weeks36.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType43 = weeks36.getFieldType();
        org.joda.time.PeriodType periodType44 = weeks36.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType45 = weeks36.getFieldType();
        org.joda.time.Weeks weeks46 = weeks35.minus(weeks36);
        org.joda.time.Weeks weeks48 = weeks36.minus((int) '4');
        int int49 = weeks7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks51 = weeks7.plus(1);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(weeks51);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType9 = weeks5.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(durationFieldType9);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Duration duration17 = weeks15.toStandardDuration();
        org.joda.time.Weeks weeks19 = weeks15.multipliedBy((int) (short) 100);
        org.joda.time.Duration duration20 = weeks15.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(duration20);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        int int23 = weeks1.getWeeks();
        org.joda.time.Weeks weeks25 = weeks1.minus((int) '#');
        org.joda.time.Weeks weeks26 = weeks25.negated();
        int int27 = weeks25.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType();
        org.joda.time.Weeks weeks8 = weeks2.negated();
        org.joda.time.Weeks weeks10 = weeks2.dividedBy(9);
        org.joda.time.PeriodType periodType11 = weeks2.getPeriodType();
        int int13 = weeks2.getValue((int) (short) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        org.joda.time.Weeks weeks18 = weeks10.plus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks24.plus((int) (short) -1);
        int int28 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks10.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType33 = weeks30.getFieldType(0);
        org.joda.time.Duration duration34 = weeks30.toStandardDuration();
        boolean boolean35 = weeks9.isGreaterThan(weeks30);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        org.joda.time.Weeks weeks44 = weeks36.plus(weeks42);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        int int51 = weeks48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks50);
        org.joda.time.Weeks weeks53 = weeks50.plus((int) (short) -1);
        int int54 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks53);
        int int55 = weeks53.getWeeks();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = weeks56.getFieldType();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        boolean boolean60 = weeks58.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        java.lang.String str65 = weeks64.toString();
        boolean boolean66 = weeks58.isLessThan(weeks64);
        org.joda.time.Weeks weeks67 = weeks64.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.MutablePeriod mutablePeriod70 = weeks69.toMutablePeriod();
        org.joda.time.Weeks weeks71 = weeks67.plus(weeks69);
        org.joda.time.Weeks weeks72 = weeks56.plus(weeks71);
        org.joda.time.Weeks weeks74 = weeks71.dividedBy((int) (short) 100);
        boolean boolean75 = weeks53.isGreaterThan(weeks74);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        java.lang.String str80 = weeks79.toString();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.ONE;
        int int82 = weeks79.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks81);
        org.joda.time.Weeks weeks84 = weeks81.plus((int) (short) -1);
        org.joda.time.Weeks weeks86 = weeks81.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType88 = weeks86.getFieldType((int) (byte) 0);
        boolean boolean89 = weeks74.isSupported(durationFieldType88);
        int int90 = weeks9.get(durationFieldType88);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P-3W" + "'", str65, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P-3W" + "'", str80, "P-3W");
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 3 + "'", int90 == 3);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks2.dividedBy((int) 'a');
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        boolean boolean26 = weeks8.isGreaterThan(weeks24);
        int int27 = weeks7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks8);
        java.lang.String str28 = weeks8.toString();
        org.joda.time.MutablePeriod mutablePeriod29 = weeks8.toMutablePeriod();
        org.joda.time.PeriodType periodType30 = weeks8.getPeriodType();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str33 = weeks31.toString();
        int int34 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        boolean boolean35 = weeks1.isLessThan(weeks8);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P1W" + "'", str28, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P1W" + "'", str33, "P1W");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(7);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.String str2 = weeks0.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks5 = weeks3.plus((-3));
        int int6 = weeks3.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P3W" + "'", str2, "P3W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks43 = weeks41.dividedBy((-2147483648));
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        java.lang.String str48 = weeks47.toString();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.ONE;
        int int50 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        java.lang.String str51 = weeks47.toString();
        org.joda.time.Period period52 = weeks47.toPeriod();
        org.joda.time.Period period53 = weeks47.toPeriod();
        org.joda.time.DurationFieldType durationFieldType54 = weeks47.getFieldType();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType56 = weeks55.getPeriodType();
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks60 = weeks55.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod61 = weeks55.toMutablePeriod();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        boolean boolean64 = weeks62.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        boolean boolean70 = weeks62.isLessThan(weeks68);
        org.joda.time.Weeks weeks71 = weeks68.negated();
        org.joda.time.PeriodType periodType72 = weeks71.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType74 = weeks71.getFieldType(0);
        org.joda.time.Weeks weeks75 = weeks55.minus(weeks71);
        org.joda.time.PeriodType periodType76 = weeks75.getPeriodType();
        boolean boolean77 = weeks47.isGreaterThan(weeks75);
        int int78 = weeks41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks75);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P-3W" + "'", str48, "P-3W");
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        org.joda.time.Weeks weeks7 = weeks2.minus((-55));
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = weeks8.getFieldType();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        boolean boolean18 = weeks10.isLessThan(weeks16);
        org.joda.time.Weeks weeks19 = weeks16.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.MutablePeriod mutablePeriod22 = weeks21.toMutablePeriod();
        org.joda.time.Weeks weeks23 = weeks19.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks8.plus(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks34 = weeks26.plus(weeks30);
        org.joda.time.MutablePeriod mutablePeriod35 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks37 = weeks7.minus(weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.MIN_VALUE;
        int int39 = weeks38.getWeeks();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = weeks43.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType();
        boolean boolean48 = weeks41.isSupported(durationFieldType47);
        org.joda.time.Weeks weeks50 = weeks41.multipliedBy((int) (short) 100);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        int int55 = weeks54.size();
        java.lang.String str56 = weeks54.toString();
        java.lang.String str57 = weeks54.toString();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks59.minus((int) '4');
        org.joda.time.Weeks weeks63 = weeks54.minus(weeks59);
        org.joda.time.Weeks weeks65 = weeks54.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType66 = weeks54.getFieldType();
        int int67 = weeks50.get(durationFieldType66);
        int int68 = weeks38.get(durationFieldType66);
        int int69 = weeks38.getWeeks();
        boolean boolean70 = weeks37.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks72 = weeks37.plus((int) (short) 100);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-2147483648) + "'", int39 == (-2147483648));
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "P-3W" + "'", str57, "P-3W");
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3200 + "'", int67 == 3200);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-2147483648) + "'", int68 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-2147483648) + "'", int69 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(weeks72);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks13.negated();
        org.joda.time.Weeks weeks17 = weeks6.plus(weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks24);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks32.plus((int) (short) -1);
        int int36 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.Weeks weeks38 = weeks18.plus((int) (short) 100);
        org.joda.time.Weeks weeks40 = weeks38.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = weeks41.getFieldType();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        boolean boolean45 = weeks43.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        boolean boolean51 = weeks43.isLessThan(weeks49);
        org.joda.time.Weeks weeks52 = weeks49.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.MutablePeriod mutablePeriod55 = weeks54.toMutablePeriod();
        org.joda.time.Weeks weeks56 = weeks52.plus(weeks54);
        org.joda.time.Weeks weeks57 = weeks41.plus(weeks56);
        org.joda.time.Weeks weeks59 = weeks56.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks60 = weeks59.negated();
        boolean boolean61 = weeks40.isGreaterThan(weeks59);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType63 = weeks62.getFieldType();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        boolean boolean66 = weeks64.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        boolean boolean72 = weeks64.isLessThan(weeks70);
        org.joda.time.Weeks weeks73 = weeks70.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.MutablePeriod mutablePeriod76 = weeks75.toMutablePeriod();
        org.joda.time.Weeks weeks77 = weeks73.plus(weeks75);
        org.joda.time.Weeks weeks78 = weeks62.plus(weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.THREE;
        boolean boolean82 = weeks80.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks84 = weeks83.negated();
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks84);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks84);
        java.lang.String str87 = weeks86.toString();
        boolean boolean88 = weeks80.isLessThan(weeks86);
        org.joda.time.Weeks weeks89 = weeks79.plus(weeks80);
        org.joda.time.Weeks weeks90 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType91 = weeks90.getFieldType();
        boolean boolean92 = weeks89.isSupported(durationFieldType91);
        int int93 = weeks77.get(durationFieldType91);
        boolean boolean94 = weeks40.isSupported(durationFieldType91);
        org.joda.time.Weeks weeks95 = weeks16.minus(weeks40);
        org.joda.time.Weeks weeks97 = weeks95.dividedBy(9);
        org.joda.time.Weeks weeks99 = weeks95.plus(4);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "P-3W" + "'", str87, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(weeks95);
        org.junit.Assert.assertNotNull(weeks97);
        org.junit.Assert.assertNotNull(weeks99);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn(readableInterval24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.minus(weeks32);
        org.joda.time.Weeks weeks36 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks39 = weeks25.dividedBy((-1027));
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType42 = weeks41.getPeriodType();
        org.joda.time.Weeks weeks44 = weeks41.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        boolean boolean54 = weeks46.isLessThan(weeks52);
        org.joda.time.Weeks weeks55 = weeks45.plus(weeks46);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.ONE;
        int int62 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        boolean boolean63 = weeks45.isGreaterThan(weeks61);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType65 = weeks64.getFieldType();
        int int66 = weeks61.get(durationFieldType65);
        boolean boolean67 = weeks41.isSupported(durationFieldType65);
        org.joda.time.Weeks weeks69 = weeks41.dividedBy((-1));
        org.joda.time.Weeks weeks71 = weeks41.dividedBy(3);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType73 = weeks72.getPeriodType();
        org.joda.time.Weeks weeks75 = weeks72.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks77 = weeks72.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod78 = weeks72.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType79 = weeks72.getFieldType();
        org.joda.time.PeriodType periodType80 = weeks72.getPeriodType();
        boolean boolean81 = weeks71.isGreaterThan(weeks72);
        boolean boolean82 = weeks40.isLessThan(weeks71);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks11.minus((-3));
        int int14 = weeks11.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        int int17 = weeks14.size();
        org.joda.time.Weeks weeks18 = weeks14.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Weeks weeks25 = weeks21.negated();
        boolean boolean26 = weeks18.isGreaterThan(weeks21);
        org.joda.time.DurationFieldType durationFieldType27 = weeks18.getFieldType();
        org.joda.time.Weeks weeks29 = weeks18.multipliedBy((int) (short) 1);
        boolean boolean30 = weeks11.equals((java.lang.Object) weeks18);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = weeks11.getValue((-927));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -927");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Weeks weeks24 = weeks22.minus(1030);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks25.multipliedBy(3);
        int int48 = weeks47.getWeeks();
        int int49 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.PeriodType periodType50 = weeks47.getPeriodType();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        org.joda.time.Weeks weeks54 = weeks51.dividedBy((int) (byte) 100);
        org.joda.time.PeriodType periodType55 = weeks54.getPeriodType();
        org.joda.time.Weeks weeks57 = weeks54.multipliedBy(300);
        org.joda.time.Weeks weeks58 = null;
        org.joda.time.Weeks weeks59 = weeks57.plus(weeks58);
        org.joda.time.Weeks weeks60 = weeks47.plus(weeks59);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 9 + "'", int48 == 9);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks11.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        boolean boolean20 = weeks11.isGreaterThan(weeks19);
        org.joda.time.Period period21 = weeks19.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        int int4 = weeks1.get(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks1.minus((int) 'a');
        org.joda.time.Weeks weeks8 = weeks6.multipliedBy(2);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.PeriodType periodType15 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks16.plus(weeks17);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        boolean boolean34 = weeks16.isGreaterThan(weeks32);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = weeks35.getFieldType();
        int int37 = weeks32.get(durationFieldType36);
        org.joda.time.Weeks weeks39 = weeks32.minus((int) (byte) -1);
        org.joda.time.Weeks weeks41 = weeks39.minus((int) '#');
        org.joda.time.Weeks weeks42 = weeks11.plus(weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        boolean boolean45 = weeks43.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        boolean boolean51 = weeks43.isLessThan(weeks49);
        org.joda.time.Weeks weeks52 = weeks49.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.MutablePeriod mutablePeriod55 = weeks54.toMutablePeriod();
        org.joda.time.Weeks weeks56 = weeks52.plus(weeks54);
        int int57 = weeks54.size();
        org.joda.time.DurationFieldType durationFieldType58 = null;
        boolean boolean59 = weeks54.isSupported(durationFieldType58);
        org.joda.time.Weeks weeks61 = weeks54.multipliedBy((-1027));
        int int62 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.PeriodType periodType16 = weeks11.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(9);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks4 = weeks2.dividedBy(900);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = weeks4.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        java.lang.String str11 = weeks0.toString();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = weeks12.plus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks26.plus((int) (short) -1);
        int int30 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks12.plus((int) (short) 100);
        org.joda.time.Weeks weeks34 = weeks12.multipliedBy(3);
        org.joda.time.Weeks weeks36 = weeks12.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks38 = weeks36.minus((int) '4');
        boolean boolean39 = weeks0.isGreaterThan(weeks38);
        org.joda.time.MutablePeriod mutablePeriod40 = weeks0.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P1W" + "'", str11, "P1W");
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(mutablePeriod40);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks11.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks18 = weeks11.multipliedBy((-1027));
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks21 = weeks18.minus((int) 'a');
        org.joda.time.Weeks weeks23 = weeks21.multipliedBy(900);
        int int24 = weeks21.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P3081W" + "'", str19, "P3081W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2984 + "'", int24 == 2984);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        java.lang.Class<?> wildcardClass42 = weeks40.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        int int11 = weeks1.size();
        org.joda.time.DurationFieldType durationFieldType12 = weeks1.getFieldType();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = weeks16.minus(weeks17);
        boolean boolean20 = weeks13.isLessThan(weeks16);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType22 = weeks21.getPeriodType();
        org.joda.time.Weeks weeks24 = weeks21.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks26 = weeks21.dividedBy((int) 'a');
        boolean boolean27 = weeks13.isGreaterThan(weeks21);
        org.joda.time.Weeks weeks28 = weeks1.minus(weeks13);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks31.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod37 = weeks31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks31.getFieldType();
        org.joda.time.PeriodType periodType39 = weeks31.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType40 = weeks31.getFieldType();
        int int41 = weeks3.get(durationFieldType40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeksIn(readableInterval42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks43.minus(weeks50);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.Weeks weeks60 = weeks57.multipliedBy(0);
        org.joda.time.Weeks weeks61 = weeks55.minus(weeks60);
        int int62 = weeks53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        org.joda.time.Weeks weeks63 = weeks61.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.parseWeeks("P-4W");
        boolean boolean66 = weeks63.equals((java.lang.Object) "P-4W");
        int int67 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        boolean boolean70 = weeks68.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        java.lang.String str75 = weeks74.toString();
        boolean boolean76 = weeks68.isLessThan(weeks74);
        org.joda.time.Weeks weeks77 = weeks74.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks79 = weeks78.negated();
        org.joda.time.MutablePeriod mutablePeriod80 = weeks79.toMutablePeriod();
        org.joda.time.Weeks weeks81 = weeks77.plus(weeks79);
        int int82 = weeks79.size();
        org.joda.time.Weeks weeks84 = weeks79.minus((int) (byte) -1);
        org.joda.time.Weeks weeks86 = weeks79.dividedBy(100);
        org.joda.time.Weeks weeks87 = weeks86.negated();
        org.joda.time.Weeks weeks88 = weeks3.plus(weeks86);
        int int89 = weeks88.getWeeks();
        java.lang.Class<?> wildcardClass90 = weeks88.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "P-3W" + "'", str75, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks13.multipliedBy(0);
        org.joda.time.Weeks weeks17 = weeks11.minus(weeks16);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks20 = weeks17.minus((int) (byte) 10);
        boolean boolean21 = weeks8.equals((java.lang.Object) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks7.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        int int17 = weeks14.size();
        org.joda.time.Weeks weeks18 = weeks14.negated();
        boolean boolean19 = weeks11.isGreaterThan(weeks14);
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        int int21 = weeks4.get(durationFieldType20);
        org.joda.time.PeriodType periodType22 = weeks4.getPeriodType();
        java.lang.String str23 = weeks4.toString();
        org.joda.time.Weeks weeks24 = weeks1.minus(weeks4);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks24.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P100W" + "'", str23, "P100W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks20.dividedBy((int) '4');
        org.joda.time.Weeks weeks24 = weeks20.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration25 = weeks24.toStandardDuration();
        org.joda.time.Period period26 = weeks24.toPeriod();
        org.joda.time.Weeks weeks27 = weeks10.plus(weeks24);
        int int28 = weeks27.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-3) + "'", int28 == (-3));
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        int int11 = weeks1.size();
        org.joda.time.DurationFieldType durationFieldType12 = weeks1.getFieldType();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = weeks16.minus(weeks17);
        boolean boolean20 = weeks13.isLessThan(weeks16);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType22 = weeks21.getPeriodType();
        org.joda.time.Weeks weeks24 = weeks21.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks26 = weeks21.dividedBy((int) 'a');
        boolean boolean27 = weeks13.isGreaterThan(weeks21);
        org.joda.time.Weeks weeks28 = weeks1.minus(weeks13);
        org.joda.time.DurationFieldType durationFieldType29 = weeks1.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-10));
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.minus((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = weeks6.minus(weeks7);
        org.joda.time.Weeks weeks11 = weeks7.minus((int) 'a');
        int int12 = weeks4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks2.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = weeks2.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks2.getFieldType();
        org.joda.time.PeriodType periodType10 = weeks2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType11 = weeks2.getFieldType();
        org.joda.time.Weeks weeks12 = weeks2.negated();
        org.joda.time.Weeks weeks14 = weeks2.multipliedBy(300);
        boolean boolean15 = weeks0.equals((java.lang.Object) weeks2);
        org.joda.time.Weeks weeks17 = weeks0.plus((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks20.dividedBy((int) '4');
        int int23 = weeks20.size();
        org.joda.time.Period period24 = weeks20.toPeriod();
        org.joda.time.Weeks weeks26 = weeks20.plus(9);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((-1));
        int int29 = weeks28.size();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks34 = weeks32.dividedBy((int) '4');
        int int35 = weeks32.size();
        org.joda.time.Period period36 = weeks32.toPeriod();
        org.joda.time.DurationFieldType durationFieldType37 = weeks32.getFieldType();
        org.joda.time.Weeks weeks38 = weeks28.minus(weeks32);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean41 = weeks32.isLessThan(weeks40);
        org.joda.time.PeriodType periodType42 = weeks32.getPeriodType();
        boolean boolean43 = weeks26.equals((java.lang.Object) weeks32);
        org.joda.time.Weeks weeks44 = weeks0.minus(weeks32);
        org.joda.time.DurationFieldType durationFieldType45 = weeks32.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(durationFieldType45);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        boolean boolean22 = weeks20.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks24 = weeks20.plus((int) (byte) 100);
        int int25 = weeks24.getWeeks();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((-103));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType29 = weeks24.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 101 + "'", int25 == 101);
        org.junit.Assert.assertNotNull(weeks27);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks24 = weeks19.minus((int) (short) 10);
        java.lang.String str25 = weeks19.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P3W" + "'", str25, "P3W");
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.PeriodType periodType7 = weeks2.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks14.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks19.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks17.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks6.plus(weeks21);
        org.joda.time.Weeks weeks23 = weeks5.minus(weeks6);
        org.joda.time.Weeks weeks25 = weeks6.multipliedBy(103);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = weeks25.getValue((-103));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -103");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-3));
        org.joda.time.Weeks weeks3 = weeks1.plus(0);
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks5.plus(weeks6);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        int int22 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        boolean boolean23 = weeks5.isGreaterThan(weeks21);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeksIn(readableInterval25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        boolean boolean29 = weeks27.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        boolean boolean35 = weeks27.isLessThan(weeks33);
        org.joda.time.Weeks weeks36 = weeks26.minus(weeks33);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod41 = weeks40.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks40.multipliedBy(0);
        org.joda.time.Weeks weeks44 = weeks38.minus(weeks43);
        int int45 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks44);
        org.joda.time.Weeks weeks46 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod47 = weeks46.toMutablePeriod();
        org.joda.time.Weeks weeks48 = weeks5.plus(weeks46);
        org.joda.time.PeriodType periodType49 = weeks5.getPeriodType();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks53 = weeks51.plus((int) (short) 0);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        boolean boolean55 = weeks5.isLessThan(weeks53);
        org.joda.time.Weeks weeks56 = weeks3.plus(weeks53);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(weeks56);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.TWO;
        boolean boolean29 = weeks22.isGreaterThan(weeks28);
        int int30 = weeks22.size();
        int int31 = weeks22.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType5 = weeks4.getPeriodType();
        org.joda.time.Weeks weeks7 = weeks4.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks9 = weeks4.dividedBy((int) 'a');
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks10.plus(weeks11);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        boolean boolean28 = weeks10.isGreaterThan(weeks26);
        int int29 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks10);
        org.joda.time.DurationFieldType durationFieldType30 = weeks9.getFieldType();
        int int31 = weeks3.get(durationFieldType30);
        java.lang.String str32 = weeks3.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P0W" + "'", str32, "P0W");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        int int19 = weeks9.size();
        org.joda.time.DurationFieldType durationFieldType20 = weeks9.getFieldType();
        org.joda.time.Weeks weeks21 = weeks1.plus(weeks9);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((int) (short) 10);
        boolean boolean24 = weeks9.isLessThan(weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType37 = weeks36.getPeriodType();
        org.joda.time.Weeks weeks39 = weeks36.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks41 = weeks36.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod42 = weeks36.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType43 = weeks36.getFieldType();
        int int44 = weeks35.get(durationFieldType43);
        int int45 = weeks31.get(durationFieldType43);
        boolean boolean46 = weeks9.isSupported(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-3) + "'", int45 == (-3));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        int int20 = weeks0.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-927));
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.MIN_VALUE;
        int int23 = weeks22.getWeeks();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType25 = weeks24.getFieldType();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = weeks24.plus(weeks39);
        org.joda.time.Weeks weeks42 = weeks39.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = weeks44.getFieldType();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        boolean boolean54 = weeks46.isLessThan(weeks52);
        org.joda.time.Weeks weeks55 = weeks52.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.Weeks weeks59 = weeks55.plus(weeks57);
        org.joda.time.Weeks weeks60 = weeks44.plus(weeks59);
        org.joda.time.Weeks weeks62 = weeks59.plus((int) (short) 10);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks63.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.DurationFieldType durationFieldType66 = weeks65.getFieldType();
        org.joda.time.DurationFieldType durationFieldType68 = weeks65.getFieldType(0);
        int int69 = weeks59.get(durationFieldType68);
        int int70 = weeks42.get(durationFieldType68);
        boolean boolean71 = weeks22.isSupported(durationFieldType68);
        boolean boolean72 = weeks19.isSupported(durationFieldType68);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        boolean boolean75 = weeks73.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        java.lang.String str80 = weeks79.toString();
        boolean boolean81 = weeks73.isLessThan(weeks79);
        org.joda.time.Weeks weeks82 = weeks79.negated();
        org.joda.time.PeriodType periodType83 = weeks79.getPeriodType();
        org.joda.time.Period period84 = weeks79.toPeriod();
        int int85 = weeks79.size();
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks88 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks87);
        org.joda.time.Weeks weeks90 = weeks87.multipliedBy((int) ' ');
        boolean boolean91 = weeks79.isGreaterThan(weeks87);
        org.joda.time.Weeks weeks92 = weeks19.minus(weeks87);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2147483648) + "'", int23 == (-2147483648));
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P-3W" + "'", str80, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(weeks92);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        int int11 = weeks3.getValue(0);
        java.lang.Class<?> wildcardClass12 = weeks3.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        int int11 = weeks1.size();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = weeks12.plus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks26.plus((int) (short) -1);
        int int30 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks12.plus((int) (short) 100);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = weeks34.minus(weeks35);
        java.lang.String str38 = weeks37.toString();
        int int39 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks37);
        org.joda.time.Weeks weeks41 = weeks37.dividedBy((int) ' ');
        int int42 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks41);
        org.joda.time.Duration duration43 = weeks1.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-4W" + "'", str38, "P-4W");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(duration43);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType8 = weeks7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType(0);
        int int11 = weeks0.get(durationFieldType10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks13 = weeks0.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus(0);
        org.joda.time.Weeks weeks71 = weeks66.plus(2984);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.PeriodType periodType13 = weeks8.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        org.joda.time.Weeks weeks13 = weeks5.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        int int20 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (short) -1);
        int int23 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks5.plus((int) (short) 100);
        org.joda.time.Weeks weeks27 = weeks5.multipliedBy(3);
        org.joda.time.Weeks weeks29 = weeks5.dividedBy((int) (byte) -1);
        boolean boolean30 = weeks0.isGreaterThan(weeks5);
        int int31 = weeks5.size();
        org.joda.time.PeriodType periodType32 = weeks5.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        boolean boolean20 = weeks15.equals((java.lang.Object) 1L);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks23 = weeks15.minus((int) (short) 1);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType25 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks29 = weeks24.dividedBy((int) 'a');
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks30.plus(weeks31);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        int int47 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        boolean boolean48 = weeks30.isGreaterThan(weeks46);
        int int49 = weeks29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.DurationFieldType durationFieldType50 = weeks29.getFieldType();
        boolean boolean51 = weeks15.equals((java.lang.Object) durationFieldType50);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.PeriodType periodType19 = weeks17.getPeriodType();
        boolean boolean20 = weeks13.isGreaterThan(weeks17);
        org.joda.time.Weeks weeks22 = weeks17.minus((int) (byte) 0);
        org.joda.time.Weeks weeks23 = weeks10.plus(weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.plus((int) (short) -1);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks29.minus(weeks36);
        org.joda.time.Weeks weeks40 = weeks22.minus(weeks39);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType42 = weeks40.getFieldType((-55));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -55");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Period period18 = weeks17.toPeriod();
        org.joda.time.Weeks weeks19 = weeks17.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(weeks19);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy(1);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.DurationFieldType durationFieldType26 = weeks25.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType28 = weeks27.getFieldType();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        boolean boolean31 = weeks29.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        boolean boolean37 = weeks29.isLessThan(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod41 = weeks40.toMutablePeriod();
        org.joda.time.Weeks weeks42 = weeks38.plus(weeks40);
        org.joda.time.Weeks weeks43 = weeks27.plus(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.dividedBy((int) (short) 100);
        boolean boolean46 = weeks25.isGreaterThan(weeks42);
        org.joda.time.DurationFieldType durationFieldType47 = weeks25.getFieldType();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        org.joda.time.Weeks weeks56 = weeks48.plus(weeks54);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        java.lang.String str61 = weeks60.toString();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.ONE;
        int int63 = weeks60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks62);
        org.joda.time.Weeks weeks65 = weeks62.plus((int) (short) -1);
        int int66 = weeks48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks65);
        org.joda.time.Weeks weeks68 = weeks48.plus((int) (short) 100);
        org.joda.time.Weeks weeks70 = weeks68.multipliedBy((int) (short) 10);
        boolean boolean71 = weeks25.isGreaterThan(weeks68);
        org.joda.time.Weeks weeks73 = weeks68.minus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType74 = weeks68.getFieldType();
        int int75 = weeks20.get(durationFieldType74);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P-3W" + "'", str61, "P-3W");
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 200 + "'", int75 == 200);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.Weeks weeks27 = weeks6.negated();
        org.joda.time.Duration duration28 = weeks6.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(duration28);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        org.joda.time.PeriodType periodType28 = weeks6.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType29 = weeks6.getFieldType();
        org.joda.time.Weeks weeks31 = weeks6.minus((int) (byte) 100);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks(9);
        org.joda.time.Weeks weeks35 = weeks33.multipliedBy((int) 'a');
        boolean boolean36 = weeks31.equals((java.lang.Object) weeks35);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        org.joda.time.Weeks weeks15 = weeks11.multipliedBy((int) (short) 0);
        int int16 = weeks11.size();
        boolean boolean17 = weeks8.equals((java.lang.Object) int16);
        org.joda.time.PeriodType periodType18 = weeks8.getPeriodType();
        int int19 = weeks8.getWeeks();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks8.toMutablePeriod();
        int int22 = weeks8.getValue(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(300);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        int int3 = weeks1.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks35 = null;
        org.joda.time.Weeks weeks36 = weeks33.plus(weeks35);
        org.joda.time.Duration duration37 = weeks33.toStandardDuration();
        int int38 = weeks33.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn(readableInterval24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.minus(weeks32);
        org.joda.time.Weeks weeks36 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType39 = weeks38.getPeriodType();
        org.joda.time.Weeks weeks41 = weeks38.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks43 = weeks38.dividedBy((int) 'a');
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        boolean boolean47 = weeks45.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        java.lang.String str52 = weeks51.toString();
        boolean boolean53 = weeks45.isLessThan(weeks51);
        org.joda.time.Weeks weeks54 = weeks44.plus(weeks45);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.ONE;
        int int61 = weeks58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks60);
        boolean boolean62 = weeks44.isGreaterThan(weeks60);
        int int63 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks44);
        org.joda.time.DurationFieldType durationFieldType64 = weeks43.getFieldType();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks66 = weeks43.plus(weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks71 = weeks69.dividedBy((int) '4');
        int int72 = weeks69.size();
        org.joda.time.Period period73 = weeks69.toPeriod();
        org.joda.time.DurationFieldType durationFieldType74 = weeks69.getFieldType();
        org.joda.time.Weeks weeks75 = weeks65.plus(weeks69);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks77 = weeks25.minus(weeks76);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-3W" + "'", str52, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.ONE;
        int int34 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks36 = weeks33.plus((int) (short) -1);
        int int37 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks19.plus((int) (short) 100);
        org.joda.time.Weeks weeks41 = weeks19.multipliedBy(3);
        org.joda.time.Weeks weeks42 = weeks18.minus(weeks19);
        int int43 = weeks19.getWeeks();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        java.lang.String str48 = weeks47.toString();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.ONE;
        int int50 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks49.plus((int) (short) -1);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType54 = weeks53.getPeriodType();
        org.joda.time.Weeks weeks56 = weeks53.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks58 = weeks53.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod59 = weeks53.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType60 = weeks53.getFieldType();
        org.joda.time.PeriodType periodType61 = weeks53.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType62 = weeks53.getFieldType();
        boolean boolean63 = weeks52.isSupported(durationFieldType62);
        org.joda.time.Weeks weeks65 = weeks52.multipliedBy((-2147483648));
        org.joda.time.Weeks weeks66 = weeks19.plus(weeks65);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P-3W" + "'", str48, "P-3W");
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType();
        org.joda.time.Weeks weeks8 = weeks2.negated();
        org.joda.time.Weeks weeks10 = weeks2.dividedBy(9);
        org.joda.time.Duration duration11 = weeks2.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        java.lang.String str11 = weeks0.toString();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = weeks12.plus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks26.plus((int) (short) -1);
        int int30 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks12.plus((int) (short) 100);
        org.joda.time.Weeks weeks34 = weeks12.multipliedBy(3);
        org.joda.time.Weeks weeks36 = weeks12.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks38 = weeks36.minus((int) '4');
        boolean boolean39 = weeks0.isGreaterThan(weeks38);
        org.joda.time.Duration duration40 = weeks0.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P1W" + "'", str11, "P1W");
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(duration40);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks6.plus(0);
        org.joda.time.MutablePeriod mutablePeriod30 = weeks6.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType31 = weeks6.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(durationFieldType31);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        int int7 = weeks4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Duration duration8 = weeks4.toStandardDuration();
        org.joda.time.Weeks weeks10 = weeks4.plus(100);
        org.joda.time.Duration duration11 = weeks4.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = weeks1.plus((-4));
        org.joda.time.Weeks weeks4 = weeks1.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = weeks8.minus(weeks9);
        org.joda.time.DurationFieldType durationFieldType12 = weeks9.getFieldType();
        boolean boolean13 = weeks6.isSupported(durationFieldType12);
        boolean boolean14 = weeks1.isSupported(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks35.minus(weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = null;
        boolean boolean46 = weeks44.isGreaterThan(weeks45);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod4 = weeks0.toMutablePeriod();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        org.joda.time.Weeks weeks13 = weeks5.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        int int20 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (short) -1);
        int int23 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks5.plus((int) (short) 100);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = weeks27.minus(weeks28);
        java.lang.String str31 = weeks30.toString();
        int int32 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType34 = weeks33.getPeriodType();
        org.joda.time.Weeks weeks36 = weeks33.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks38 = weeks33.dividedBy((int) 'a');
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        boolean boolean48 = weeks40.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks39.plus(weeks40);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        java.lang.String str54 = weeks53.toString();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        int int56 = weeks53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks55);
        boolean boolean57 = weeks39.isGreaterThan(weeks55);
        int int58 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.DurationFieldType durationFieldType59 = weeks38.getFieldType();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks61 = weeks38.plus(weeks60);
        boolean boolean62 = weeks30.isLessThan(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        boolean boolean65 = weeks63.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        java.lang.String str70 = weeks69.toString();
        org.joda.time.Weeks weeks71 = weeks63.plus(weeks69);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType75 = weeks74.getPeriodType();
        org.joda.time.Weeks weeks77 = weeks74.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks79 = weeks74.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod80 = weeks74.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType81 = weeks74.getFieldType();
        int int82 = weeks73.get(durationFieldType81);
        int int83 = weeks69.get(durationFieldType81);
        boolean boolean84 = weeks60.isSupported(durationFieldType81);
        boolean boolean85 = weeks0.isSupported(durationFieldType81);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-4W" + "'", str31, "P-4W");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-3W" + "'", str54, "P-3W");
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P-3W" + "'", str70, "P-3W");
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-3) + "'", int83 == (-3));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks51.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks40.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = weeks59.plus(weeks65);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks73.plus((int) (short) -1);
        int int77 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks59.plus((int) (short) 100);
        org.joda.time.Weeks weeks81 = weeks59.multipliedBy(3);
        org.joda.time.Weeks weeks82 = weeks58.minus(weeks59);
        boolean boolean83 = weeks38.isGreaterThan(weeks59);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks86 = weeks84.dividedBy((-2));
        org.joda.time.Weeks weeks88 = weeks86.minus(103);
        org.joda.time.Weeks weeks90 = weeks88.plus(25);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks90);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        java.lang.Class<?> wildcardClass16 = duration15.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks13.multipliedBy(0);
        org.joda.time.Weeks weeks17 = weeks11.minus(weeks16);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks20 = weeks17.minus((int) (byte) 10);
        boolean boolean21 = weeks8.equals((java.lang.Object) weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks33.dividedBy((int) '4');
        int int36 = weeks33.size();
        org.joda.time.Weeks weeks37 = weeks33.negated();
        boolean boolean38 = weeks30.isGreaterThan(weeks33);
        org.joda.time.DurationFieldType durationFieldType39 = weeks30.getFieldType();
        int int40 = weeks23.get(durationFieldType39);
        org.joda.time.Weeks weeks42 = weeks23.plus((int) (byte) 100);
        org.joda.time.Weeks weeks44 = weeks42.multipliedBy(1);
        org.joda.time.Weeks weeks45 = weeks20.minus(weeks44);
        org.joda.time.Weeks weeks46 = weeks44.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.MutablePeriod mutablePeriod15 = weeks14.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks14.negated();
        int int17 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks25 = weeks22.multipliedBy(0);
        org.joda.time.Weeks weeks26 = weeks20.minus(weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) ' ');
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = weeks31.get(durationFieldType32);
        int int34 = weeks31.size();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.DurationFieldType durationFieldType38 = weeks37.getFieldType();
        boolean boolean39 = weeks31.isSupported(durationFieldType38);
        int int40 = weeks28.get(durationFieldType38);
        int int41 = weeks18.get(durationFieldType38);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.TWO;
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks46 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks48 = weeks42.dividedBy((int) (byte) 1);
        java.lang.String str49 = weeks42.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P2W" + "'", str49, "P2W");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        boolean boolean5 = weeks2.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks7 = weeks2.multipliedBy((int) (byte) 100);
        boolean boolean8 = weeks1.isGreaterThan(weeks2);
        org.joda.time.Period period9 = weeks1.toPeriod();
        org.joda.time.Period period10 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        java.lang.String str2 = weeks0.toString();
        int int3 = weeks0.size();
        java.lang.String str4 = weeks0.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P1W" + "'", str2, "P1W");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P1W" + "'", str4, "P1W");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks13.negated();
        org.joda.time.PeriodType periodType17 = weeks16.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType19 = weeks16.getFieldType(0);
        org.joda.time.Weeks weeks20 = weeks0.minus(weeks16);
        org.joda.time.DurationFieldType durationFieldType21 = weeks16.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        boolean boolean18 = weeks15.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks20 = weeks15.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy((-1));
        org.joda.time.Weeks weeks23 = weeks13.plus(weeks20);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks25 = weeks15.dividedBy(100);
        boolean boolean26 = weeks2.isLessThan(weeks15);
        org.joda.time.Weeks weeks28 = weeks2.multipliedBy((int) (short) 0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) '4');
        int int33 = weeks30.size();
        org.joda.time.Weeks weeks34 = weeks27.plus(weeks30);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        org.joda.time.DurationFieldType durationFieldType42 = weeks39.getFieldType(0);
        boolean boolean43 = weeks36.isSupported(durationFieldType42);
        boolean boolean44 = weeks30.isSupported(durationFieldType42);
        org.joda.time.PeriodType periodType45 = weeks30.getPeriodType();
        boolean boolean46 = weeks22.equals((java.lang.Object) weeks30);
        org.joda.time.MutablePeriod mutablePeriod47 = weeks30.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(mutablePeriod47);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.DurationFieldType durationFieldType23 = weeks13.getFieldType();
        org.joda.time.Weeks weeks25 = weeks13.minus(10);
        org.joda.time.Weeks weeks27 = weeks13.plus(10);
        org.joda.time.Weeks weeks29 = weeks13.plus(1030);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = weeks15.plus(weeks21);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.plus((int) (short) -1);
        int int33 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks32.plus((int) (byte) 1);
        boolean boolean37 = weeks35.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks39 = weeks35.plus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        org.joda.time.Weeks weeks41 = weeks6.plus(weeks39);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(weeks41);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((-927));
        org.joda.time.PeriodType periodType25 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks29 = weeks27.dividedBy((-103));
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType31 = weeks30.getPeriodType();
        org.joda.time.Weeks weeks33 = weeks30.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        boolean boolean37 = weeks35.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        boolean boolean43 = weeks35.isLessThan(weeks41);
        org.joda.time.Weeks weeks44 = weeks34.plus(weeks35);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        int int51 = weeks48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks50);
        boolean boolean52 = weeks34.isGreaterThan(weeks50);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType54 = weeks53.getFieldType();
        int int55 = weeks50.get(durationFieldType54);
        boolean boolean56 = weeks30.isSupported(durationFieldType54);
        org.joda.time.Weeks weeks58 = weeks30.dividedBy((-1));
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        boolean boolean61 = weeks27.isLessThan(weeks60);
        java.lang.String str62 = weeks27.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P0W" + "'", str62, "P0W");
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        int int8 = weeks2.getWeeks();
        int int9 = weeks2.size();
        org.joda.time.Period period10 = weeks2.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-3) + "'", int8 == (-3));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks15 = weeks5.minus(weeks12);
        org.joda.time.Period period16 = weeks5.toPeriod();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType18 = weeks17.getPeriodType();
        org.joda.time.Weeks weeks20 = weeks17.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.plus(weeks22);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.ONE;
        int int38 = weeks35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks37);
        boolean boolean39 = weeks21.isGreaterThan(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        int int42 = weeks37.get(durationFieldType41);
        boolean boolean43 = weeks17.isSupported(durationFieldType41);
        org.joda.time.MutablePeriod mutablePeriod44 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeks((-1));
        int int52 = weeks51.size();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks55.dividedBy((int) '4');
        int int58 = weeks55.size();
        org.joda.time.Period period59 = weeks55.toPeriod();
        org.joda.time.DurationFieldType durationFieldType60 = weeks55.getFieldType();
        org.joda.time.Weeks weeks61 = weeks51.minus(weeks55);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        boolean boolean64 = weeks62.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        boolean boolean70 = weeks62.isLessThan(weeks68);
        org.joda.time.Weeks weeks71 = weeks68.negated();
        org.joda.time.Weeks weeks72 = weeks51.plus(weeks71);
        boolean boolean73 = weeks48.isLessThan(weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks78 = weeks76.dividedBy((int) '4');
        int int79 = weeks76.size();
        org.joda.time.Period period80 = weeks76.toPeriod();
        org.joda.time.DurationFieldType durationFieldType81 = weeks76.getFieldType();
        boolean boolean82 = weeks48.isSupported(durationFieldType81);
        boolean boolean83 = weeks17.isSupported(durationFieldType81);
        org.joda.time.Weeks weeks84 = weeks5.plus(weeks17);
        org.joda.time.PeriodType periodType85 = weeks17.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod86 = weeks17.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(mutablePeriod86);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        org.joda.time.Weeks weeks7 = weeks0.minus((int) ' ');
        java.lang.String str8 = weeks0.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P2147483647W" + "'", str8, "P2147483647W");
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) '4');
        int int33 = weeks30.size();
        org.joda.time.Weeks weeks34 = weeks27.plus(weeks30);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        org.joda.time.DurationFieldType durationFieldType42 = weeks39.getFieldType(0);
        boolean boolean43 = weeks36.isSupported(durationFieldType42);
        boolean boolean44 = weeks30.isSupported(durationFieldType42);
        org.joda.time.PeriodType periodType45 = weeks30.getPeriodType();
        boolean boolean46 = weeks22.equals((java.lang.Object) weeks30);
        org.joda.time.PeriodType periodType47 = weeks22.getPeriodType();
        org.joda.time.Weeks weeks48 = null;
        org.joda.time.Weeks weeks49 = weeks22.minus(weeks48);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(weeks49);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        int int9 = weeks5.size();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = weeks11.minus(weeks12);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        int int24 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Duration duration25 = weeks21.toStandardDuration();
        boolean boolean26 = weeks5.equals((java.lang.Object) duration25);
        int int27 = weeks5.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = weeks16.get(durationFieldType17);
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        boolean boolean24 = weeks16.isSupported(durationFieldType23);
        int int25 = weeks13.get(durationFieldType23);
        org.joda.time.Weeks weeks27 = weeks13.plus((int) (byte) 100);
        org.joda.time.Weeks weeks29 = weeks27.plus((int) (byte) 10);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn(readableInterval24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.minus(weeks32);
        org.joda.time.Weeks weeks36 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks39 = weeks25.dividedBy((-1027));
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        boolean boolean48 = weeks40.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks46.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.MutablePeriod mutablePeriod52 = weeks51.toMutablePeriod();
        org.joda.time.Weeks weeks53 = weeks49.plus(weeks51);
        int int54 = weeks51.size();
        org.joda.time.DurationFieldType durationFieldType55 = null;
        boolean boolean56 = weeks51.isSupported(durationFieldType55);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        boolean boolean60 = weeks51.isGreaterThan(weeks59);
        boolean boolean61 = weeks25.isGreaterThan(weeks51);
        org.joda.time.Weeks weeks62 = weeks51.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(weeks62);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Period period11 = weeks0.toPeriod();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        org.joda.time.Weeks weeks18 = weeks14.multipliedBy((int) (short) 0);
        int int19 = weeks14.size();
        boolean boolean20 = weeks0.isLessThan(weeks14);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks0.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.PeriodType periodType32 = weeks28.getPeriodType();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        org.joda.time.Weeks weeks41 = weeks33.plus(weeks39);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks47.plus((int) (short) -1);
        int int51 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks50);
        org.joda.time.Weeks weeks53 = weeks50.plus((int) (byte) 1);
        boolean boolean55 = weeks53.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks57 = weeks53.plus((int) (byte) 100);
        org.joda.time.Weeks weeks58 = weeks28.plus(weeks53);
        java.lang.String str59 = weeks58.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = weeks61.minus(weeks62);
        java.lang.String str65 = weeks64.toString();
        int int66 = weeks58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        org.joda.time.Weeks weeks67 = weeks0.plus(weeks58);
        org.joda.time.DurationFieldType durationFieldType68 = weeks58.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-2W" + "'", str59, "P-2W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P-4W" + "'", str65, "P-4W");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(durationFieldType68);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        boolean boolean22 = weeks20.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks24 = weeks20.plus((int) (byte) 100);
        int int25 = weeks24.getWeeks();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((-103));
        java.lang.Class<?> wildcardClass28 = weeks27.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 101 + "'", int25 == 101);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks13.multipliedBy(0);
        org.joda.time.Weeks weeks17 = weeks11.minus(weeks16);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks20 = weeks17.minus((int) (byte) 10);
        boolean boolean21 = weeks8.equals((java.lang.Object) weeks20);
        org.joda.time.MutablePeriod mutablePeriod22 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks24 = weeks20.plus(400);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(weeks24);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks43 = weeks41.dividedBy((-2147483648));
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks48 = weeks45.plus(0);
        org.joda.time.PeriodType periodType49 = weeks48.getPeriodType();
        boolean boolean50 = weeks43.equals((java.lang.Object) periodType49);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks13.multipliedBy(0);
        org.joda.time.Weeks weeks17 = weeks11.minus(weeks16);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks20 = weeks17.minus((int) (byte) 10);
        boolean boolean21 = weeks8.equals((java.lang.Object) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks26.getWeeks();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((-1));
        int int30 = weeks29.size();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks33.dividedBy((int) '4');
        int int36 = weeks33.size();
        org.joda.time.Period period37 = weeks33.toPeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks33.getFieldType();
        org.joda.time.Weeks weeks39 = weeks29.minus(weeks33);
        org.joda.time.Weeks weeks41 = weeks39.minus((-3));
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.MutablePeriod mutablePeriod53 = weeks52.toMutablePeriod();
        org.joda.time.Weeks weeks54 = weeks48.plus(weeks52);
        org.joda.time.Weeks weeks55 = weeks41.plus(weeks48);
        org.joda.time.Weeks weeks56 = weeks26.minus(weeks55);
        org.joda.time.Weeks weeks57 = null;
        org.joda.time.Weeks weeks58 = weeks55.plus(weeks57);
        org.joda.time.DurationFieldType durationFieldType59 = weeks55.getFieldType();
        int int60 = weeks20.get(durationFieldType59);
        int int61 = weeks20.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-10) + "'", int60 == (-10));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-10) + "'", int61 == (-10));
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Duration duration42 = weeks41.toStandardDuration();
        org.joda.time.Weeks weeks44 = weeks41.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks46 = weeks44.dividedBy(3200);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(12);
        org.joda.time.Period period2 = weeks1.toPeriod();
        org.joda.time.Days days3 = weeks1.toStandardDays();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(days3);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Weeks weeks23 = weeks19.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        boolean boolean31 = weeks23.isGreaterThan(weeks26);
        org.joda.time.DurationFieldType durationFieldType32 = weeks23.getFieldType();
        int int33 = weeks16.get(durationFieldType32);
        int int34 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks36 = weeks16.minus(9);
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks40.dividedBy((int) '4');
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks47 = weeks45.dividedBy((int) '4');
        int int48 = weeks45.size();
        org.joda.time.Weeks weeks49 = weeks42.plus(weeks45);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.DurationFieldType durationFieldType55 = weeks54.getFieldType();
        org.joda.time.DurationFieldType durationFieldType57 = weeks54.getFieldType(0);
        boolean boolean58 = weeks51.isSupported(durationFieldType57);
        boolean boolean59 = weeks45.isSupported(durationFieldType57);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks66 = weeks64.dividedBy((int) '4');
        int int67 = weeks64.size();
        org.joda.time.Weeks weeks68 = weeks64.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks71.dividedBy((int) '4');
        int int74 = weeks71.size();
        org.joda.time.Weeks weeks75 = weeks71.negated();
        boolean boolean76 = weeks68.isGreaterThan(weeks71);
        org.joda.time.DurationFieldType durationFieldType77 = weeks68.getFieldType();
        int int78 = weeks61.get(durationFieldType77);
        boolean boolean79 = weeks45.isSupported(durationFieldType77);
        int int80 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Period period10 = weeks0.toPeriod();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.MutablePeriod mutablePeriod22 = weeks21.toMutablePeriod();
        org.joda.time.Weeks weeks23 = weeks17.plus(weeks21);
        int int24 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType25 = weeks21.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(durationFieldType25);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy(10);
        java.lang.String str7 = weeks6.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P30W" + "'", str7, "P30W");
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        boolean boolean20 = weeks15.equals((java.lang.Object) 1L);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks23 = weeks15.minus((int) (short) 1);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = weeks25.minus(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.PeriodType periodType31 = weeks29.getPeriodType();
        boolean boolean32 = weeks25.isGreaterThan(weeks29);
        boolean boolean33 = weeks23.equals((java.lang.Object) boolean32);
        java.lang.String str34 = weeks23.toString();
        org.joda.time.PeriodType periodType35 = weeks23.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-1W" + "'", str34, "P-1W");
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        boolean boolean37 = weeks3.isSupported(durationFieldType36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = weeks41.minus(weeks42);
        boolean boolean45 = weeks38.isLessThan(weeks41);
        org.joda.time.DurationFieldType durationFieldType46 = weeks38.getFieldType();
        org.joda.time.Weeks weeks47 = weeks3.minus(weeks38);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(weeks47);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks13.multipliedBy(0);
        org.joda.time.Weeks weeks17 = weeks11.minus(weeks16);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks20 = weeks17.minus((int) (byte) 10);
        boolean boolean21 = weeks8.equals((java.lang.Object) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks26.getWeeks();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((-1));
        int int30 = weeks29.size();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks33.dividedBy((int) '4');
        int int36 = weeks33.size();
        org.joda.time.Period period37 = weeks33.toPeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks33.getFieldType();
        org.joda.time.Weeks weeks39 = weeks29.minus(weeks33);
        org.joda.time.Weeks weeks41 = weeks39.minus((-3));
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.MutablePeriod mutablePeriod53 = weeks52.toMutablePeriod();
        org.joda.time.Weeks weeks54 = weeks48.plus(weeks52);
        org.joda.time.Weeks weeks55 = weeks41.plus(weeks48);
        org.joda.time.Weeks weeks56 = weeks26.minus(weeks55);
        org.joda.time.Weeks weeks57 = null;
        org.joda.time.Weeks weeks58 = weeks55.plus(weeks57);
        org.joda.time.DurationFieldType durationFieldType59 = weeks55.getFieldType();
        int int60 = weeks20.get(durationFieldType59);
        org.joda.time.MutablePeriod mutablePeriod61 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks63 = weeks20.plus((-927));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-10) + "'", int60 == (-10));
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks63);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType8 = weeks7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType(0);
        int int11 = weeks0.get(durationFieldType10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks18 = weeks16.dividedBy((int) '4');
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = weeks16.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Weeks weeks27 = weeks23.negated();
        boolean boolean28 = weeks20.isGreaterThan(weeks23);
        org.joda.time.DurationFieldType durationFieldType29 = weeks20.getFieldType();
        int int30 = weeks13.get(durationFieldType29);
        boolean boolean31 = weeks0.isLessThan(weeks13);
        org.joda.time.DurationFieldType durationFieldType32 = weeks0.getFieldType();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks33.plus(weeks34);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        java.lang.String str48 = weeks47.toString();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.ONE;
        int int50 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        boolean boolean51 = weeks33.isGreaterThan(weeks49);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.weeksIn(readableInterval53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks55.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        boolean boolean63 = weeks55.isLessThan(weeks61);
        org.joda.time.Weeks weeks64 = weeks54.minus(weeks61);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.MutablePeriod mutablePeriod69 = weeks68.toMutablePeriod();
        org.joda.time.Weeks weeks71 = weeks68.multipliedBy(0);
        org.joda.time.Weeks weeks72 = weeks66.minus(weeks71);
        int int73 = weeks64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks72);
        org.joda.time.Weeks weeks74 = weeks72.negated();
        org.joda.time.MutablePeriod mutablePeriod75 = weeks74.toMutablePeriod();
        org.joda.time.Weeks weeks76 = weeks33.plus(weeks74);
        org.joda.time.PeriodType periodType77 = weeks33.getPeriodType();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks81 = weeks79.plus((int) (short) 0);
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks81);
        boolean boolean83 = weeks33.isLessThan(weeks81);
        int int84 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P-3W" + "'", str48, "P-3W");
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.TWO;
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks46 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = weeks48.minus(weeks49);
        org.joda.time.DurationFieldType durationFieldType52 = weeks49.getFieldType();
        org.joda.time.Weeks weeks53 = weeks40.plus(weeks49);
        java.lang.String str54 = weeks49.toString();
        org.joda.time.Weeks weeks56 = weeks49.dividedBy((-14));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P3W" + "'", str54, "P3W");
        org.junit.Assert.assertNotNull(weeks56);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks25 = weeks19.plus(0);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) '4');
        int int31 = weeks30.getWeeks();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((-1));
        int int34 = weeks33.size();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks37.dividedBy((int) '4');
        int int40 = weeks37.size();
        org.joda.time.Period period41 = weeks37.toPeriod();
        org.joda.time.DurationFieldType durationFieldType42 = weeks37.getFieldType();
        org.joda.time.Weeks weeks43 = weeks33.minus(weeks37);
        org.joda.time.Weeks weeks45 = weeks43.minus((-3));
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        boolean boolean54 = weeks46.isLessThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.MutablePeriod mutablePeriod57 = weeks56.toMutablePeriod();
        org.joda.time.Weeks weeks58 = weeks52.plus(weeks56);
        org.joda.time.Weeks weeks59 = weeks45.plus(weeks52);
        org.joda.time.Weeks weeks60 = weeks30.minus(weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        boolean boolean63 = weeks61.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        java.lang.String str68 = weeks67.toString();
        boolean boolean69 = weeks61.isLessThan(weeks67);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.MutablePeriod mutablePeriod72 = weeks71.toMutablePeriod();
        org.joda.time.Weeks weeks73 = weeks67.plus(weeks71);
        int int74 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks76 = weeks25.plus(weeks59);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "P-3W" + "'", str68, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks37 = weeks31.plus(weeks35);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = weeks51.minus(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.PeriodType periodType57 = weeks55.getPeriodType();
        boolean boolean58 = weeks51.isGreaterThan(weeks55);
        org.joda.time.Weeks weeks60 = weeks55.minus((int) (byte) 0);
        org.joda.time.Weeks weeks61 = weeks48.plus(weeks60);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.ONE;
        int int68 = weeks65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks67);
        org.joda.time.Weeks weeks70 = weeks67.plus((int) (short) -1);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        java.lang.String str75 = weeks74.toString();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        org.joda.time.Weeks weeks77 = weeks67.minus(weeks74);
        org.joda.time.Weeks weeks78 = weeks60.minus(weeks77);
        boolean boolean79 = weeks37.isLessThan(weeks60);
        org.joda.time.Weeks weeks80 = weeks24.minus(weeks37);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "P-3W" + "'", str75, "P-3W");
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(weeks80);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks24 = weeks19.minus((int) (short) 10);
        org.joda.time.Weeks weeks25 = null;
        boolean boolean26 = weeks19.isLessThan(weeks25);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks2.getPeriodType();
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeksIn(readableInterval9);
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        boolean boolean12 = weeks2.isGreaterThan(weeks10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = weeks13.getFieldType();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks26.toMutablePeriod();
        org.joda.time.Weeks weeks28 = weeks24.plus(weeks26);
        org.joda.time.Weeks weeks29 = weeks13.plus(weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks30.plus(weeks31);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = weeks41.getFieldType();
        boolean boolean43 = weeks40.isSupported(durationFieldType42);
        int int44 = weeks28.get(durationFieldType42);
        int int45 = weeks10.get(durationFieldType42);
        org.joda.time.MutablePeriod mutablePeriod46 = weeks10.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int48 = weeks10.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod46);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        int int19 = weeks9.size();
        org.joda.time.DurationFieldType durationFieldType20 = weeks9.getFieldType();
        org.joda.time.Weeks weeks21 = weeks1.plus(weeks9);
        int int22 = weeks9.size();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) 'a');
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        int int48 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.MutablePeriod mutablePeriod61 = weeks60.toMutablePeriod();
        org.joda.time.Weeks weeks62 = weeks58.plus(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks64 = weeks28.minus(weeks58);
        int int65 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        int int66 = weeks9.getWeeks();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.PeriodType periodType69 = weeks67.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = weeks67.isSupported(durationFieldType70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.DurationFieldType durationFieldType75 = weeks74.getFieldType();
        org.joda.time.DurationFieldType durationFieldType77 = weeks74.getFieldType(0);
        int int78 = weeks67.get(durationFieldType77);
        boolean boolean79 = weeks9.equals((java.lang.Object) weeks67);
        java.lang.Class<?> wildcardClass80 = weeks67.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 3 + "'", int78 == 3);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks27.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod33 = weeks27.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType34 = weeks27.getFieldType();
        org.joda.time.PeriodType periodType35 = weeks27.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType36 = weeks27.getFieldType();
        org.joda.time.Weeks weeks37 = weeks26.minus(weeks27);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = weeks38.plus(weeks44);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.ONE;
        int int53 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks52);
        org.joda.time.Weeks weeks55 = weeks52.plus((int) (short) -1);
        int int56 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks55);
        org.joda.time.Weeks weeks58 = weeks38.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod59 = weeks58.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType61 = weeks58.getFieldType(0);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.ONE;
        int int68 = weeks65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks67);
        org.joda.time.Weeks weeks70 = weeks67.plus((int) (short) -1);
        boolean boolean71 = weeks58.equals((java.lang.Object) weeks70);
        org.joda.time.Weeks weeks72 = weeks37.minus(weeks58);
        org.joda.time.Weeks weeks74 = weeks37.plus((-103));
        org.joda.time.MutablePeriod mutablePeriod75 = weeks74.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = weeks1.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        org.joda.time.Weeks weeks15 = weeks11.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        boolean boolean24 = weeks16.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.negated();
        org.joda.time.Weeks weeks26 = weeks15.plus(weeks25);
        org.joda.time.Duration duration27 = weeks26.toStandardDuration();
        int int28 = weeks26.getWeeks();
        org.joda.time.Weeks weeks29 = weeks1.minus(weeks26);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        java.lang.String str30 = weeks29.toString();
        boolean boolean31 = weeks23.isLessThan(weeks29);
        org.joda.time.Weeks weeks32 = weeks29.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = weeks34.toMutablePeriod();
        org.joda.time.Weeks weeks36 = weeks32.plus(weeks34);
        org.joda.time.Weeks weeks37 = weeks21.plus(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.joda.time.Weeks weeks47 = weeks39.plus(weeks43);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType49 = weeks48.getPeriodType();
        org.joda.time.Weeks weeks51 = weeks48.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks53 = weeks48.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod54 = weeks48.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks48.getFieldType();
        org.joda.time.PeriodType periodType56 = weeks48.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType57 = weeks48.getFieldType();
        org.joda.time.Weeks weeks58 = weeks47.minus(weeks48);
        org.joda.time.Weeks weeks60 = weeks58.multipliedBy((-55));
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        boolean boolean63 = weeks61.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        java.lang.String str68 = weeks67.toString();
        boolean boolean69 = weeks61.isLessThan(weeks67);
        org.joda.time.Weeks weeks70 = weeks67.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.MutablePeriod mutablePeriod73 = weeks72.toMutablePeriod();
        org.joda.time.Weeks weeks74 = weeks70.plus(weeks72);
        org.joda.time.Weeks weeks75 = weeks72.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks77 = weeks75.negated();
        int int78 = weeks60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks75);
        org.joda.time.DurationFieldType durationFieldType79 = weeks75.getFieldType();
        int int80 = weeks19.get(durationFieldType79);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-3W" + "'", str30, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "P-3W" + "'", str68, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(mutablePeriod73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Period period11 = weeks0.toPeriod();
        java.lang.String str12 = weeks0.toString();
        org.joda.time.PeriodType periodType13 = weeks0.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P1W" + "'", str12, "P1W");
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.minus((int) (byte) 100);
        org.joda.time.Duration duration11 = weeks10.toStandardDuration();
        org.joda.time.Weeks weeks13 = weeks10.dividedBy((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(weeks13);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks20.plus(weeks21);
        int int31 = weeks21.size();
        org.joda.time.DurationFieldType durationFieldType32 = weeks21.getFieldType();
        org.joda.time.Weeks weeks33 = weeks13.plus(weeks21);
        boolean boolean34 = weeks8.isGreaterThan(weeks33);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((-1));
        int int37 = weeks36.size();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks40.dividedBy((int) '4');
        int int43 = weeks40.size();
        org.joda.time.Period period44 = weeks40.toPeriod();
        org.joda.time.DurationFieldType durationFieldType45 = weeks40.getFieldType();
        org.joda.time.Weeks weeks46 = weeks36.minus(weeks40);
        boolean boolean47 = weeks33.isGreaterThan(weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks48.plus(weeks49);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType60 = weeks59.getPeriodType();
        java.lang.String str61 = weeks59.toString();
        org.joda.time.DurationFieldType durationFieldType62 = weeks59.getFieldType();
        int int63 = weeks49.get(durationFieldType62);
        boolean boolean64 = weeks46.isSupported(durationFieldType62);
        org.joda.time.MutablePeriod mutablePeriod65 = weeks46.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P3W" + "'", str61, "P3W");
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 3 + "'", int63 == 3);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(mutablePeriod65);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        int int7 = weeks4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType9 = weeks8.getPeriodType();
        org.joda.time.Weeks weeks11 = weeks8.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks13 = weeks8.dividedBy((int) 'a');
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks14.plus(weeks15);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        boolean boolean32 = weeks14.isGreaterThan(weeks30);
        int int33 = weeks13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks49 = weeks13.minus(weeks43);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeks((-1));
        int int52 = weeks51.size();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks55.dividedBy((int) '4');
        int int58 = weeks55.size();
        org.joda.time.Period period59 = weeks55.toPeriod();
        org.joda.time.DurationFieldType durationFieldType60 = weeks55.getFieldType();
        org.joda.time.Weeks weeks61 = weeks51.minus(weeks55);
        org.joda.time.Weeks weeks63 = weeks51.minus((int) (byte) 100);
        org.joda.time.Duration duration64 = weeks51.toStandardDuration();
        org.joda.time.Weeks weeks65 = weeks13.minus(weeks51);
        org.joda.time.Weeks weeks67 = weeks51.plus((int) (short) -1);
        org.joda.time.Weeks weeks68 = weeks4.minus(weeks51);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        int int23 = weeks21.size();
        int int24 = weeks21.size();
        java.lang.Class<?> wildcardClass25 = weeks21.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.MutablePeriod mutablePeriod8 = weeks7.toMutablePeriod();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        boolean boolean18 = weeks10.isLessThan(weeks16);
        org.joda.time.Weeks weeks19 = weeks9.plus(weeks10);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        boolean boolean27 = weeks9.isGreaterThan(weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean29 = weeks25.isGreaterThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.plus((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = weeks7.minus(weeks32);
        org.joda.time.DurationFieldType durationFieldType34 = weeks33.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(durationFieldType34);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks45.multipliedBy((int) (short) 10);
        boolean boolean48 = weeks2.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks50 = weeks45.minus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType51 = weeks45.getFieldType();
        org.joda.time.Weeks weeks53 = weeks45.multipliedBy(0);
        java.lang.Class<?> wildcardClass54 = weeks53.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = weeks16.plus(weeks22);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks30.plus((int) (short) -1);
        int int34 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        int int35 = weeks33.getWeeks();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = weeks38.get(durationFieldType39);
        int int41 = weeks38.size();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.DurationFieldType durationFieldType45 = weeks44.getFieldType();
        boolean boolean46 = weeks38.isSupported(durationFieldType45);
        int int47 = weeks33.get(durationFieldType45);
        int int48 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks49 = weeks14.negated();
        org.joda.time.PeriodType periodType50 = weeks49.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int24 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.DurationFieldType durationFieldType25 = weeks20.getFieldType();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.PeriodType periodType28 = weeks26.getPeriodType();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn(readableInterval29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks30.minus(weeks37);
        org.joda.time.Weeks weeks42 = weeks40.plus((int) 'a');
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = weeks44.minus(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType49 = weeks48.getPeriodType();
        int int50 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks48);
        org.joda.time.Weeks weeks51 = weeks42.plus(weeks48);
        org.joda.time.Weeks weeks53 = weeks51.minus(1030);
        boolean boolean54 = weeks26.equals((java.lang.Object) weeks53);
        org.joda.time.MutablePeriod mutablePeriod55 = weeks53.toMutablePeriod();
        boolean boolean56 = weeks20.isGreaterThan(weeks53);
        org.joda.time.Weeks weeks58 = weeks20.minus((int) (short) 10);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType60 = weeks59.getFieldType();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        boolean boolean63 = weeks61.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        java.lang.String str68 = weeks67.toString();
        boolean boolean69 = weeks61.isLessThan(weeks67);
        org.joda.time.Weeks weeks70 = weeks67.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.MutablePeriod mutablePeriod73 = weeks72.toMutablePeriod();
        org.joda.time.Weeks weeks74 = weeks70.plus(weeks72);
        org.joda.time.Weeks weeks75 = weeks59.plus(weeks74);
        org.joda.time.Weeks weeks77 = weeks74.dividedBy((int) (short) 100);
        boolean boolean79 = weeks74.equals((java.lang.Object) 1L);
        org.joda.time.MutablePeriod mutablePeriod80 = weeks74.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType82 = weeks74.getFieldType((int) (byte) 0);
        boolean boolean83 = weeks58.isSupported(durationFieldType82);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "P-3W" + "'", str68, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(mutablePeriod73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        int int19 = weeks10.get(durationFieldType18);
        int int20 = weeks6.get(durationFieldType18);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = weeks22.minus(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType27 = weeks26.getPeriodType();
        int int28 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Duration duration29 = weeks25.toStandardDuration();
        boolean boolean30 = weeks6.isLessThan(weeks25);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks36.plus((int) (short) -1);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType41 = weeks40.getPeriodType();
        org.joda.time.Weeks weeks43 = weeks40.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks45 = weeks40.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod46 = weeks40.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType47 = weeks40.getFieldType();
        org.joda.time.PeriodType periodType48 = weeks40.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType49 = weeks40.getFieldType();
        boolean boolean50 = weeks39.isSupported(durationFieldType49);
        org.joda.time.Period period51 = weeks39.toPeriod();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period51);
        org.joda.time.Weeks weeks54 = weeks52.minus(2);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks55.dividedBy(1030);
        boolean boolean58 = weeks25.isGreaterThan(weeks57);
        org.joda.time.Weeks weeks59 = weeks57.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks59);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int31 = weeks3.getValue((int) (short) 0);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks36 = weeks34.dividedBy((int) '4');
        int int37 = weeks34.size();
        org.joda.time.Weeks weeks38 = weeks34.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks41.dividedBy((int) '4');
        int int44 = weeks41.size();
        org.joda.time.Weeks weeks45 = weeks41.negated();
        boolean boolean46 = weeks38.isGreaterThan(weeks41);
        org.joda.time.MutablePeriod mutablePeriod47 = weeks41.toMutablePeriod();
        boolean boolean48 = weeks3.isGreaterThan(weeks41);
        org.joda.time.Weeks weeks50 = weeks3.multipliedBy((-10));
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        org.joda.time.Weeks weeks60 = weeks52.plus(weeks58);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Weeks weeks63 = weeks61.minus((int) (byte) 10);
        int int64 = weeks51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        org.joda.time.Weeks weeks65 = weeks50.plus(weeks51);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(weeks65);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.minus((int) (byte) 10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks24.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.MutablePeriod mutablePeriod30 = weeks29.toMutablePeriod();
        org.joda.time.Weeks weeks31 = weeks27.plus(weeks29);
        org.joda.time.Weeks weeks32 = weeks16.plus(weeks31);
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (short) 100);
        boolean boolean35 = weeks14.isGreaterThan(weeks31);
        org.joda.time.DurationFieldType durationFieldType36 = weeks14.getFieldType();
        boolean boolean37 = weeks11.isLessThan(weeks14);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        boolean boolean56 = weeks38.isGreaterThan(weeks54);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        boolean boolean58 = weeks11.equals((java.lang.Object) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType60 = weeks59.getFieldType();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType62 = weeks61.getPeriodType();
        org.joda.time.Weeks weeks64 = weeks61.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks66 = weeks61.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod67 = weeks61.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType68 = weeks61.getFieldType();
        org.joda.time.PeriodType periodType69 = weeks61.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType70 = weeks61.getFieldType();
        org.joda.time.Weeks weeks71 = weeks61.negated();
        org.joda.time.Weeks weeks73 = weeks61.multipliedBy(300);
        boolean boolean74 = weeks59.equals((java.lang.Object) weeks61);
        boolean boolean75 = weeks57.isLessThan(weeks59);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = weeks48.getFieldType();
        int int50 = weeks45.get(durationFieldType49);
        org.joda.time.Weeks weeks52 = weeks45.minus((int) (byte) -1);
        org.joda.time.Weeks weeks54 = weeks52.minus((int) '#');
        org.joda.time.Weeks weeks55 = weeks5.minus(weeks52);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.PeriodType periodType57 = weeks55.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(periodType57);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        int int15 = weeks14.size();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        boolean boolean24 = weeks16.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = weeks26.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = weeks26.isSupported(durationFieldType31);
        org.joda.time.Weeks weeks33 = weeks25.minus(weeks26);
        org.joda.time.Weeks weeks35 = weeks25.dividedBy(10);
        boolean boolean36 = weeks14.isLessThan(weeks25);
        int int37 = weeks25.size();
        org.joda.time.Period period38 = weeks25.toPeriod();
        org.joda.time.PeriodType periodType39 = weeks25.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType39);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks3 = weeks1.minus((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks2.plus((-1));
        java.lang.String str7 = weeks2.toString();
        org.joda.time.Weeks weeks8 = weeks2.negated();
        int int9 = weeks2.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-3) + "'", int9 == (-3));
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks11.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks18 = weeks11.multipliedBy((-1027));
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks21 = weeks18.minus((int) 'a');
        org.joda.time.Weeks weeks23 = weeks21.multipliedBy(10);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P3081W" + "'", str19, "P3081W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Period period2 = weeks1.toPeriod();
        int int3 = weeks1.size();
        org.joda.time.Minutes minutes4 = weeks1.toStandardMinutes();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = weeks0.minus(1030);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = weeks7.toMutablePeriod();
        org.joda.time.Weeks weeks10 = weeks7.multipliedBy(0);
        org.joda.time.Weeks weeks11 = weeks5.minus(weeks10);
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = weeks13.plus(weeks14);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        boolean boolean31 = weeks13.isGreaterThan(weeks29);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks29.isGreaterThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.plus((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = weeks11.minus(weeks36);
        org.joda.time.DurationFieldType durationFieldType38 = weeks11.getFieldType();
        int int39 = weeks3.get(durationFieldType38);
        org.joda.time.Weeks weeks41 = weeks3.multipliedBy(1);
        org.joda.time.Weeks weeks43 = weeks41.minus((int) (byte) 100);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1027) + "'", int39 == (-1027));
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.MIN_VALUE;
        int int8 = weeks7.getWeeks();
        int int9 = weeks7.size();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        org.joda.time.Weeks weeks18 = weeks10.plus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks24.plus((int) (short) -1);
        int int28 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks27.plus((int) (byte) 1);
        boolean boolean32 = weeks30.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks34 = weeks30.plus((int) (byte) 100);
        org.joda.time.Weeks weeks35 = weeks30.negated();
        org.joda.time.Weeks weeks37 = weeks35.multipliedBy(3200);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.weeksIn(readableInterval38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        boolean boolean48 = weeks40.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks39.minus(weeks46);
        org.joda.time.Weeks weeks51 = weeks49.plus((int) 'a');
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = weeks53.minus(weeks54);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType58 = weeks57.getPeriodType();
        int int59 = weeks56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        org.joda.time.Weeks weeks60 = weeks51.plus(weeks57);
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.weeksIn(readableInterval61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        boolean boolean65 = weeks63.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        java.lang.String str70 = weeks69.toString();
        boolean boolean71 = weeks63.isLessThan(weeks69);
        org.joda.time.Weeks weeks72 = weeks62.minus(weeks69);
        org.joda.time.Weeks weeks74 = weeks72.plus((int) 'a');
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks78 = weeks77.negated();
        org.joda.time.Weeks weeks79 = weeks76.minus(weeks77);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType81 = weeks80.getPeriodType();
        int int82 = weeks79.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks80);
        org.joda.time.Weeks weeks83 = weeks74.plus(weeks80);
        org.joda.time.DurationFieldType durationFieldType84 = weeks74.getFieldType();
        boolean boolean85 = weeks60.isSupported(durationFieldType84);
        boolean boolean86 = weeks37.isLessThan(weeks60);
        org.joda.time.DurationFieldType durationFieldType87 = weeks60.getFieldType();
        boolean boolean88 = weeks7.isSupported(durationFieldType87);
        boolean boolean89 = weeks5.isSupported(durationFieldType87);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2147483648) + "'", int8 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P-3W" + "'", str70, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        org.joda.time.PeriodType periodType30 = weeks3.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks19.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks15.plus(weeks19);
        org.joda.time.Weeks weeks23 = weeks19.multipliedBy(10);
        org.joda.time.Period period24 = weeks19.toPeriod();
        org.joda.time.Weeks weeks26 = weeks19.minus(10);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        boolean boolean29 = weeks27.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        boolean boolean35 = weeks27.isLessThan(weeks33);
        boolean boolean36 = weeks26.equals((java.lang.Object) weeks33);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = weeks37.getFieldType();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks45.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.MutablePeriod mutablePeriod51 = weeks50.toMutablePeriod();
        org.joda.time.Weeks weeks52 = weeks48.plus(weeks50);
        org.joda.time.Weeks weeks53 = weeks37.plus(weeks52);
        org.joda.time.Weeks weeks55 = weeks52.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks56 = weeks55.negated();
        boolean boolean57 = weeks26.isGreaterThan(weeks56);
        org.joda.time.PeriodType periodType58 = weeks56.getPeriodType();
        int int59 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks56);
        org.joda.time.Duration duration60 = weeks56.toStandardDuration();
        org.joda.time.Weeks weeks62 = weeks56.plus((-2));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(weeks62);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((-927));
        org.joda.time.PeriodType periodType25 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (byte) 100);
        org.joda.time.Period period28 = weeks27.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        int int8 = weeks3.size();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = weeks3.getValue((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks22.minus((int) (short) 10);
        java.lang.Class<?> wildcardClass25 = weeks24.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod23 = weeks20.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks37 = weeks4.minus(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.minus((-2));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.PeriodType periodType9 = weeks1.getPeriodType();
        org.joda.time.Duration duration10 = weeks1.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Duration duration8 = weeks7.toStandardDuration();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType15 = weeks14.getPeriodType();
        org.joda.time.Weeks weeks17 = weeks14.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks19 = weeks14.dividedBy((int) 'a');
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks20.plus(weeks21);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        boolean boolean38 = weeks20.isGreaterThan(weeks36);
        int int39 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        boolean boolean48 = weeks40.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks46.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.MutablePeriod mutablePeriod52 = weeks51.toMutablePeriod();
        org.joda.time.Weeks weeks53 = weeks49.plus(weeks51);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks55 = weeks19.minus(weeks49);
        boolean boolean56 = weeks11.isLessThan(weeks19);
        boolean boolean57 = weeks7.isLessThan(weeks11);
        org.joda.time.Weeks weeks59 = weeks7.multipliedBy((-927));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(weeks59);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks19.plus(weeks20);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        int int36 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        boolean boolean37 = weeks19.isGreaterThan(weeks35);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Period period39 = weeks19.toPeriod();
        boolean boolean40 = weeks15.isLessThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType41 = weeks19.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks19.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        org.joda.time.Weeks weeks11 = weeks3.minus((int) 'a');
        org.joda.time.Weeks weeks13 = weeks11.minus((int) (short) 1);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = weeks14.plus(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        int int29 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks28.plus((int) (short) -1);
        int int32 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.joda.time.Weeks weeks34 = weeks14.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod35 = weeks34.toMutablePeriod();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.MutablePeriod mutablePeriod47 = weeks46.toMutablePeriod();
        org.joda.time.Weeks weeks48 = weeks42.plus(weeks46);
        boolean boolean49 = weeks34.isLessThan(weeks46);
        int int50 = weeks34.size();
        org.joda.time.Weeks weeks51 = weeks11.plus(weeks34);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks62 = weeks52.dividedBy(100);
        org.joda.time.Duration duration63 = weeks62.toStandardDuration();
        int int64 = weeks62.getWeeks();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks65.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = weeks65.get(durationFieldType68);
        org.joda.time.Weeks weeks71 = weeks65.minus((int) ' ');
        boolean boolean72 = weeks62.isGreaterThan(weeks65);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        boolean boolean75 = weeks73.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        java.lang.String str80 = weeks79.toString();
        boolean boolean81 = weeks73.isLessThan(weeks79);
        org.joda.time.Weeks weeks82 = weeks79.negated();
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks84 = weeks83.negated();
        org.joda.time.MutablePeriod mutablePeriod85 = weeks84.toMutablePeriod();
        org.joda.time.Weeks weeks86 = weeks82.plus(weeks84);
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks82);
        org.joda.time.DurationFieldType durationFieldType88 = weeks82.getFieldType();
        boolean boolean89 = weeks65.isSupported(durationFieldType88);
        boolean boolean90 = weeks34.isSupported(durationFieldType88);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P-3W" + "'", str80, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(mutablePeriod85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        int int11 = weeks10.getWeeks();
        org.joda.time.DurationFieldType durationFieldType12 = weeks10.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks28.plus(weeks32);
        boolean boolean35 = weeks20.isLessThan(weeks32);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks40 = weeks37.multipliedBy((int) ' ');
        boolean boolean41 = weeks20.isLessThan(weeks37);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks47.plus((int) (short) -1);
        org.joda.time.Weeks weeks52 = weeks47.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType54 = weeks52.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks56 = weeks52.multipliedBy((int) (byte) -1);
        boolean boolean57 = weeks37.isLessThan(weeks52);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks64 = weeks62.dividedBy((int) '4');
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks69 = weeks67.dividedBy((int) '4');
        int int70 = weeks67.size();
        org.joda.time.Weeks weeks71 = weeks64.plus(weeks67);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.DurationFieldType durationFieldType77 = weeks76.getFieldType();
        org.joda.time.DurationFieldType durationFieldType79 = weeks76.getFieldType(0);
        boolean boolean80 = weeks73.isSupported(durationFieldType79);
        boolean boolean81 = weeks67.isSupported(durationFieldType79);
        boolean boolean82 = weeks59.isSupported(durationFieldType79);
        boolean boolean83 = weeks52.isSupported(durationFieldType79);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks9 = weeks0.plus((-927));
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType11 = weeks10.getPeriodType();
        org.joda.time.Weeks weeks13 = weeks10.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks15 = weeks10.dividedBy((int) 'a');
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks16.plus(weeks17);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        boolean boolean34 = weeks16.isGreaterThan(weeks32);
        int int35 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.MutablePeriod mutablePeriod48 = weeks47.toMutablePeriod();
        org.joda.time.Weeks weeks49 = weeks45.plus(weeks47);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks51 = weeks15.minus(weeks45);
        org.joda.time.Duration duration52 = weeks51.toStandardDuration();
        org.joda.time.Weeks weeks54 = weeks51.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.ONE;
        int int61 = weeks58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks60);
        java.lang.String str62 = weeks58.toString();
        org.joda.time.Period period63 = weeks58.toPeriod();
        org.joda.time.Period period64 = weeks58.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks58.getFieldType();
        boolean boolean66 = weeks54.isSupported(durationFieldType65);
        boolean boolean67 = weeks9.isSupported(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus(0);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks74.dividedBy((int) '4');
        int int77 = weeks74.size();
        org.joda.time.Weeks weeks78 = weeks74.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        org.joda.time.Weeks weeks83 = weeks81.dividedBy((int) '4');
        int int84 = weeks81.size();
        org.joda.time.Weeks weeks85 = weeks81.negated();
        boolean boolean86 = weeks78.isGreaterThan(weeks81);
        org.joda.time.DurationFieldType durationFieldType87 = weeks78.getFieldType();
        int int88 = weeks71.get(durationFieldType87);
        org.joda.time.Weeks weeks90 = weeks71.plus((int) (byte) 100);
        org.joda.time.Weeks weeks92 = weeks90.multipliedBy(1);
        int int93 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks90);
        org.joda.time.Weeks weeks95 = weeks69.multipliedBy(3200);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(weeks95);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = weeks22.minus(weeks23);
        java.lang.String str26 = weeks25.toString();
        int int27 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType29 = weeks28.getPeriodType();
        org.joda.time.Weeks weeks31 = weeks28.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks33 = weeks28.dividedBy((int) 'a');
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        boolean boolean37 = weeks35.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        boolean boolean43 = weeks35.isLessThan(weeks41);
        org.joda.time.Weeks weeks44 = weeks34.plus(weeks35);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        int int51 = weeks48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks50);
        boolean boolean52 = weeks34.isGreaterThan(weeks50);
        int int53 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.DurationFieldType durationFieldType54 = weeks33.getFieldType();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks56 = weeks33.plus(weeks55);
        boolean boolean57 = weeks25.isLessThan(weeks55);
        int int58 = weeks55.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-4W" + "'", str26, "P-4W");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(25);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        int int8 = weeks1.get(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 25 + "'", int8 == 25);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = weeks10.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks10.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks17 = weeks9.minus(weeks10);
        org.joda.time.Weeks weeks19 = weeks9.dividedBy(10);
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        java.lang.String str28 = weeks24.toString();
        org.joda.time.Period period29 = weeks24.toPeriod();
        org.joda.time.PeriodType periodType30 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks31 = weeks19.minus(weeks24);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeksIn(readableInterval32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks33.minus(weeks40);
        org.joda.time.Weeks weeks45 = weeks43.plus((int) 'a');
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = weeks47.minus(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        int int53 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        org.joda.time.Weeks weeks54 = weeks45.plus(weeks51);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.weeksIn(readableInterval55);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks56.minus(weeks63);
        org.joda.time.Weeks weeks68 = weeks66.plus((int) 'a');
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = weeks70.minus(weeks71);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType75 = weeks74.getPeriodType();
        int int76 = weeks73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks74);
        org.joda.time.Weeks weeks77 = weeks68.plus(weeks74);
        org.joda.time.DurationFieldType durationFieldType78 = weeks68.getFieldType();
        boolean boolean79 = weeks51.isSupported(durationFieldType78);
        int int80 = weeks24.get(durationFieldType78);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-3) + "'", int80 == (-3));
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks31.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod37 = weeks31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks31.getFieldType();
        org.joda.time.PeriodType periodType39 = weeks31.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType40 = weeks31.getFieldType();
        int int41 = weeks3.get(durationFieldType40);
        org.joda.time.Period period42 = weeks3.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks44 = weeks3.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        int int14 = weeks13.size();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Period period21 = weeks17.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = weeks17.getFieldType();
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks17);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = weeks13.plus(weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = weeks10.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy((-103));
        org.joda.time.Weeks weeks40 = weeks38.dividedBy((-10));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks12 = weeks9.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = weeks9.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod15 = weeks9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks9.getFieldType();
        org.joda.time.PeriodType periodType17 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType18 = weeks9.getFieldType();
        boolean boolean19 = weeks8.isSupported(durationFieldType18);
        org.joda.time.Period period20 = weeks8.toPeriod();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Weeks weeks23 = weeks21.minus(2);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy(1030);
        org.joda.time.PeriodType periodType27 = weeks24.getPeriodType();
        java.lang.Class<?> wildcardClass28 = weeks24.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks10 = weeks0.multipliedBy((int) (short) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.ONE;
        int int34 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        boolean boolean35 = weeks17.isGreaterThan(weeks33);
        int int36 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        java.lang.String str37 = weeks17.toString();
        org.joda.time.Weeks weeks38 = weeks17.negated();
        boolean boolean39 = weeks0.equals((java.lang.Object) weeks38);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P1W" + "'", str37, "P1W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        int int7 = weeks4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Duration duration8 = weeks4.toStandardDuration();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        org.joda.time.Weeks weeks17 = weeks9.plus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks23.plus((int) (short) -1);
        int int27 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks9.plus((int) (short) 100);
        org.joda.time.Weeks weeks31 = weeks9.multipliedBy(3);
        org.joda.time.Weeks weeks33 = weeks31.minus((int) (short) 10);
        boolean boolean34 = weeks4.isGreaterThan(weeks31);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.MutablePeriod mutablePeriod8 = weeks7.toMutablePeriod();
        org.joda.time.Weeks weeks10 = weeks7.dividedBy((-927));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType();
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = weeks1.multipliedBy((int) (short) 100);
        java.lang.String str11 = weeks1.toString();
        org.joda.time.Weeks weeks13 = weeks1.minus(3);
        int int14 = weeks13.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P32W" + "'", str11, "P32W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Period period5 = weeks4.toPeriod();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        int int11 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks8);
        org.joda.time.Weeks weeks13 = weeks8.minus((-55));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        boolean boolean24 = weeks16.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks25.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks14.plus(weeks29);
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        int int39 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.Weeks weeks40 = weeks32.plus(weeks36);
        org.joda.time.MutablePeriod mutablePeriod41 = weeks36.toMutablePeriod();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks43 = weeks13.minus(weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks46.dividedBy((int) '4');
        int int49 = weeks46.size();
        org.joda.time.Weeks weeks50 = weeks46.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks55 = weeks53.dividedBy((int) '4');
        int int56 = weeks53.size();
        org.joda.time.Weeks weeks57 = weeks53.negated();
        boolean boolean58 = weeks50.isGreaterThan(weeks53);
        org.joda.time.DurationFieldType durationFieldType59 = weeks50.getFieldType();
        org.joda.time.Weeks weeks61 = weeks50.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.weeks((-1));
        int int64 = weeks63.size();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks69 = weeks67.dividedBy((int) '4');
        int int70 = weeks67.size();
        org.joda.time.Period period71 = weeks67.toPeriod();
        org.joda.time.DurationFieldType durationFieldType72 = weeks67.getFieldType();
        org.joda.time.Weeks weeks73 = weeks63.minus(weeks67);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        boolean boolean76 = weeks74.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks78 = weeks77.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        java.lang.String str81 = weeks80.toString();
        boolean boolean82 = weeks74.isLessThan(weeks80);
        org.joda.time.Weeks weeks83 = weeks80.negated();
        org.joda.time.Weeks weeks84 = weeks63.plus(weeks83);
        org.joda.time.Weeks weeks85 = weeks61.plus(weeks84);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.TWO;
        int int87 = weeks86.size();
        org.joda.time.Weeks weeks89 = weeks86.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks90 = weeks84.plus(weeks86);
        org.joda.time.Weeks weeks92 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks93 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks94 = weeks93.negated();
        org.joda.time.Weeks weeks95 = weeks92.minus(weeks93);
        org.joda.time.DurationFieldType durationFieldType96 = weeks93.getFieldType();
        org.joda.time.Weeks weeks97 = weeks84.plus(weeks93);
        boolean boolean98 = weeks43.isLessThan(weeks93);
        org.joda.time.Weeks weeks99 = weeks4.plus(weeks43);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P-3W" + "'", str81, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertNotNull(weeks93);
        org.junit.Assert.assertNotNull(weeks94);
        org.junit.Assert.assertNotNull(weeks95);
        org.junit.Assert.assertNotNull(durationFieldType96);
        org.junit.Assert.assertNotNull(weeks97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(weeks99);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        org.joda.time.Weeks weeks48 = weeks40.plus(weeks46);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks54.plus((int) (short) -1);
        int int58 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        int int59 = weeks57.getWeeks();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = weeks62.get(durationFieldType63);
        int int65 = weeks62.size();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.DurationFieldType durationFieldType69 = weeks68.getFieldType();
        boolean boolean70 = weeks62.isSupported(durationFieldType69);
        int int71 = weeks57.get(durationFieldType69);
        int int72 = weeks38.get(durationFieldType69);
        org.joda.time.MutablePeriod mutablePeriod73 = weeks38.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod73);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.plus((int) (short) 0);
        org.joda.time.Weeks weeks11 = weeks9.multipliedBy(1030);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks24 = weeks18.plus(weeks22);
        org.joda.time.Weeks weeks26 = weeks22.multipliedBy(10);
        org.joda.time.Period period27 = weeks22.toPeriod();
        org.joda.time.Weeks weeks29 = weeks22.minus(10);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        boolean boolean39 = weeks29.equals((java.lang.Object) weeks36);
        int int40 = weeks29.getWeeks();
        org.joda.time.Weeks weeks42 = weeks29.plus(0);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((-1));
        int int45 = weeks44.size();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks48.dividedBy((int) '4');
        int int51 = weeks48.size();
        org.joda.time.Period period52 = weeks48.toPeriod();
        org.joda.time.DurationFieldType durationFieldType53 = weeks48.getFieldType();
        org.joda.time.Weeks weeks54 = weeks44.minus(weeks48);
        org.joda.time.Weeks weeks56 = weeks54.minus((-3));
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.MutablePeriod mutablePeriod68 = weeks67.toMutablePeriod();
        org.joda.time.Weeks weeks69 = weeks63.plus(weeks67);
        org.joda.time.Weeks weeks70 = weeks56.plus(weeks63);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks75 = weeks73.dividedBy((int) '4');
        int int76 = weeks73.size();
        org.joda.time.DurationFieldType durationFieldType77 = weeks73.getFieldType();
        boolean boolean78 = weeks70.isSupported(durationFieldType77);
        boolean boolean79 = weeks29.isSupported(durationFieldType77);
        int int80 = weeks9.get(durationFieldType77);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-13) + "'", int40 == (-13));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-3) + "'", int80 == (-3));
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P91W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks32 = weeks3.multipliedBy((int) (short) 1);
        java.lang.String str33 = weeks3.toString();
        org.joda.time.Duration duration34 = weeks3.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(97);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy(7);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = weeks1.getValue(101);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 101");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks6.getPeriodType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks28.plus((int) (byte) 1);
        boolean boolean33 = weeks31.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks35 = weeks31.plus((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks6.plus(weeks31);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        boolean boolean46 = weeks38.isLessThan(weeks44);
        org.joda.time.Weeks weeks48 = weeks38.dividedBy(100);
        org.joda.time.Duration duration49 = weeks48.toStandardDuration();
        int int50 = weeks48.getWeeks();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        boolean boolean53 = weeks51.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = weeks51.get(durationFieldType54);
        org.joda.time.Weeks weeks57 = weeks51.minus((int) ' ');
        boolean boolean58 = weeks48.isGreaterThan(weeks51);
        org.joda.time.Weeks weeks60 = weeks48.dividedBy(300);
        org.joda.time.Weeks weeks62 = weeks48.multipliedBy((-100));
        boolean boolean63 = weeks36.isGreaterThan(weeks48);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-2W" + "'", str37, "P-2W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = weeks0.negated();
        org.joda.time.Weeks weeks12 = weeks0.multipliedBy(300);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = weeks14.minus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        int int27 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Duration duration28 = weeks24.toStandardDuration();
        org.joda.time.Weeks weeks30 = weeks24.minus(1030);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks31.plus(weeks32);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        boolean boolean49 = weeks31.isGreaterThan(weeks47);
        org.joda.time.Weeks weeks51 = weeks31.plus((int) '#');
        org.joda.time.Weeks weeks52 = weeks30.minus(weeks31);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = weeks30.isSupported(durationFieldType53);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks61 = weeks59.dividedBy((int) '4');
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks66 = weeks64.dividedBy((int) '4');
        int int67 = weeks64.size();
        org.joda.time.Weeks weeks68 = weeks61.plus(weeks64);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.DurationFieldType durationFieldType74 = weeks73.getFieldType();
        org.joda.time.DurationFieldType durationFieldType76 = weeks73.getFieldType(0);
        boolean boolean77 = weeks70.isSupported(durationFieldType76);
        boolean boolean78 = weeks64.isSupported(durationFieldType76);
        boolean boolean79 = weeks56.isSupported(durationFieldType76);
        boolean boolean80 = weeks30.isSupported(durationFieldType76);
        boolean boolean81 = weeks0.isLessThan(weeks30);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.plus(0);
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        org.joda.time.Weeks weeks17 = weeks9.plus(weeks15);
        org.joda.time.Weeks weeks19 = weeks15.dividedBy(3);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period21 = weeks20.toPeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        org.joda.time.Weeks weeks28 = weeks24.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks29 = weeks20.minus(weeks28);
        boolean boolean30 = weeks15.equals((java.lang.Object) weeks29);
        boolean boolean31 = weeks7.isLessThan(weeks29);
        int int32 = weeks4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        int int11 = weeks1.size();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = weeks12.plus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks26.plus((int) (short) -1);
        int int30 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks12.plus((int) (short) 100);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = weeks34.minus(weeks35);
        java.lang.String str38 = weeks37.toString();
        int int39 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks37);
        org.joda.time.Weeks weeks41 = weeks37.dividedBy((int) ' ');
        int int42 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks41);
        org.joda.time.Weeks weeks44 = weeks1.plus((-1));
        org.joda.time.Weeks weeks45 = weeks1.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-4W" + "'", str38, "P-4W");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = weeks21.getFieldType(0);
        int int25 = weeks15.get(durationFieldType24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) '4');
        org.joda.time.Weeks weeks32 = weeks28.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = weeks39.negated();
        org.joda.time.Weeks weeks43 = weeks32.plus(weeks42);
        int int44 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks46 = weeks15.minus(7);
        org.joda.time.Weeks weeks48 = weeks15.minus(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        boolean boolean27 = weeks17.equals((java.lang.Object) weeks24);
        org.joda.time.Weeks weeks29 = weeks17.multipliedBy((-927));
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        int int32 = weeks31.getWeeks();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.DurationFieldType durationFieldType36 = weeks35.getFieldType();
        org.joda.time.DurationFieldType durationFieldType38 = weeks35.getFieldType(0);
        boolean boolean39 = weeks31.isSupported(durationFieldType38);
        int int40 = weeks17.get(durationFieldType38);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = weeks44.minus(weeks45);
        boolean boolean48 = weeks41.isLessThan(weeks44);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks53 = weeks51.dividedBy((int) '4');
        int int54 = weeks53.getWeeks();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.weeks((-1));
        int int57 = weeks56.size();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.minus(weeks60);
        org.joda.time.Weeks weeks68 = weeks66.minus((-3));
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        boolean boolean71 = weeks69.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        java.lang.String str76 = weeks75.toString();
        boolean boolean77 = weeks69.isLessThan(weeks75);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks79 = weeks78.negated();
        org.joda.time.MutablePeriod mutablePeriod80 = weeks79.toMutablePeriod();
        org.joda.time.Weeks weeks81 = weeks75.plus(weeks79);
        org.joda.time.Weeks weeks82 = weeks68.plus(weeks75);
        org.joda.time.Weeks weeks83 = weeks53.minus(weeks82);
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks86 = weeks53.minus(weeks85);
        org.joda.time.DurationFieldType durationFieldType88 = weeks85.getFieldType((int) (byte) 0);
        boolean boolean89 = weeks44.isSupported(durationFieldType88);
        boolean boolean90 = weeks17.isSupported(durationFieldType88);
        java.lang.Class<?> wildcardClass91 = weeks17.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-13) + "'", int40 == (-13));
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "P-3W" + "'", str76, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = weeks30.minus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.PeriodType periodType36 = weeks34.getPeriodType();
        boolean boolean37 = weeks30.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks39 = weeks34.minus((int) (byte) 0);
        org.joda.time.Weeks weeks40 = weeks27.plus(weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType42 = weeks41.getPeriodType();
        org.joda.time.Weeks weeks44 = weeks41.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks46 = weeks41.dividedBy((int) 'a');
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.plus(weeks48);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        int int64 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        boolean boolean65 = weeks47.isGreaterThan(weeks63);
        int int66 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.DurationFieldType durationFieldType67 = weeks46.getFieldType();
        org.joda.time.Weeks weeks68 = weeks27.plus(weeks46);
        org.joda.time.Weeks weeks69 = weeks11.plus(weeks46);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType71 = weeks46.getFieldType((-103));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -103");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.MutablePeriod mutablePeriod17 = weeks16.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks12.plus(weeks16);
        boolean boolean19 = weeks5.isLessThan(weeks12);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period21 = weeks20.toPeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        org.joda.time.Weeks weeks28 = weeks24.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks29 = weeks20.minus(weeks28);
        org.joda.time.Period period30 = weeks20.toPeriod();
        org.joda.time.Weeks weeks31 = weeks20.negated();
        org.joda.time.Weeks weeks32 = weeks12.minus(weeks31);
        org.joda.time.Weeks weeks34 = weeks31.plus((int) 'a');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((-1));
        int int22 = weeks21.size();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        int int28 = weeks25.size();
        org.joda.time.Period period29 = weeks25.toPeriod();
        org.joda.time.DurationFieldType durationFieldType30 = weeks25.getFieldType();
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks25);
        int int32 = weeks31.size();
        org.joda.time.Weeks weeks33 = weeks0.minus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        boolean boolean37 = weeks35.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        boolean boolean43 = weeks35.isLessThan(weeks41);
        org.joda.time.Weeks weeks44 = weeks34.plus(weeks35);
        org.joda.time.Period period45 = weeks34.toPeriod();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks48.dividedBy((int) '4');
        org.joda.time.Weeks weeks52 = weeks48.multipliedBy((int) (short) 0);
        int int53 = weeks48.size();
        boolean boolean54 = weeks34.isLessThan(weeks48);
        org.joda.time.MutablePeriod mutablePeriod55 = weeks34.toMutablePeriod();
        org.joda.time.Weeks weeks56 = weeks0.plus(weeks34);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(weeks56);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        boolean boolean13 = weeks10.isSupported(durationFieldType12);
        int int14 = weeks10.getWeeks();
        org.joda.time.Weeks weeks16 = weeks10.dividedBy((int) '4');
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.PeriodType periodType18 = weeks17.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        int int19 = weeks9.size();
        org.joda.time.DurationFieldType durationFieldType20 = weeks9.getFieldType();
        org.joda.time.Weeks weeks21 = weeks1.plus(weeks9);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks37 = weeks33.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks22.plus(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        int int47 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        org.joda.time.Weeks weeks48 = weeks40.plus(weeks44);
        org.joda.time.MutablePeriod mutablePeriod49 = weeks44.toMutablePeriod();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks51 = weeks9.minus(weeks44);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        int int14 = weeks13.size();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Period period21 = weeks17.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = weeks17.getFieldType();
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks17);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = weeks13.plus(weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = weeks10.plus(weeks35);
        org.joda.time.DurationFieldType durationFieldType37 = weeks10.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(durationFieldType37);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((-3));
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod31 = weeks25.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType32 = weeks25.getFieldType();
        org.joda.time.PeriodType periodType33 = weeks25.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType34 = weeks25.getFieldType();
        org.joda.time.Weeks weeks35 = weeks25.negated();
        boolean boolean36 = weeks22.isLessThan(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = weeks37.getFieldType();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks45.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.MutablePeriod mutablePeriod51 = weeks50.toMutablePeriod();
        org.joda.time.Weeks weeks52 = weeks48.plus(weeks50);
        org.joda.time.Weeks weeks53 = weeks37.plus(weeks52);
        org.joda.time.Weeks weeks55 = weeks52.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.ONE;
        int int62 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        org.joda.time.Weeks weeks63 = weeks55.plus(weeks59);
        org.joda.time.MutablePeriod mutablePeriod64 = weeks59.toMutablePeriod();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.TWO;
        boolean boolean66 = weeks59.isGreaterThan(weeks65);
        org.joda.time.Weeks weeks67 = weeks65.negated();
        boolean boolean68 = weeks35.equals((java.lang.Object) weeks65);
        java.lang.String str69 = weeks65.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P2W" + "'", str69, "P2W");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks32 = weeks3.multipliedBy((int) (short) 1);
        java.lang.String str33 = weeks3.toString();
        org.joda.time.Weeks weeks35 = weeks3.minus((-100));
        org.joda.time.PeriodType periodType36 = weeks3.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.MutablePeriod mutablePeriod24 = weeks2.toMutablePeriod();
        java.lang.Class<?> wildcardClass25 = mutablePeriod24.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(300);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = weeks1.getFieldType((-33));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -33");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.Weeks weeks14 = weeks3.minus((int) (byte) 100);
        org.joda.time.Duration duration15 = weeks3.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(duration15);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = weeks1.negated();
        int int4 = weeks3.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Duration duration13 = weeks12.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType(0);
        org.joda.time.Weeks weeks9 = weeks2.plus(weeks5);
        org.joda.time.Weeks weeks11 = weeks9.multipliedBy(4);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = weeks12.plus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks26.plus((int) (short) -1);
        int int30 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks12.plus((int) (short) 100);
        org.joda.time.Weeks weeks34 = weeks12.multipliedBy(3);
        org.joda.time.Weeks weeks36 = weeks12.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks38 = weeks36.minus((int) '4');
        org.joda.time.Duration duration39 = weeks38.toStandardDuration();
        org.joda.time.Weeks weeks40 = weeks9.plus(weeks38);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(weeks40);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.parseWeeks("P3W");
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks11.plus((int) (short) 100);
        org.joda.time.Weeks weeks33 = weeks31.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType35 = weeks34.getFieldType();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.MutablePeriod mutablePeriod48 = weeks47.toMutablePeriod();
        org.joda.time.Weeks weeks49 = weeks45.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks34.plus(weeks49);
        org.joda.time.Weeks weeks52 = weeks49.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks53 = weeks52.negated();
        boolean boolean54 = weeks33.isGreaterThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.MutablePeriod mutablePeriod69 = weeks68.toMutablePeriod();
        org.joda.time.Weeks weeks70 = weeks66.plus(weeks68);
        org.joda.time.Weeks weeks71 = weeks55.plus(weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        boolean boolean75 = weeks73.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        java.lang.String str80 = weeks79.toString();
        boolean boolean81 = weeks73.isLessThan(weeks79);
        org.joda.time.Weeks weeks82 = weeks72.plus(weeks73);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType84 = weeks83.getFieldType();
        boolean boolean85 = weeks82.isSupported(durationFieldType84);
        int int86 = weeks70.get(durationFieldType84);
        boolean boolean87 = weeks33.isSupported(durationFieldType84);
        int int88 = weeks10.get(durationFieldType84);
        boolean boolean89 = weeks8.isSupported(durationFieldType84);
        org.joda.time.DurationFieldType durationFieldType91 = weeks8.getFieldType(0);
        org.joda.time.Weeks weeks93 = weeks8.multipliedBy((int) (byte) -1);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P-3W" + "'", str80, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 3 + "'", int88 == 3);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertNotNull(weeks93);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks0.multipliedBy((int) (short) -1);
        org.joda.time.Weeks weeks8 = weeks0.multipliedBy((-103));
        int int9 = weeks0.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((-1));
        int int21 = weeks20.size();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks24.size();
        org.joda.time.Period period28 = weeks24.toPeriod();
        org.joda.time.DurationFieldType durationFieldType29 = weeks24.getFieldType();
        org.joda.time.Weeks weeks30 = weeks20.minus(weeks24);
        org.joda.time.Weeks weeks32 = weeks30.minus((-3));
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.MutablePeriod mutablePeriod44 = weeks43.toMutablePeriod();
        org.joda.time.Weeks weeks45 = weeks39.plus(weeks43);
        org.joda.time.Weeks weeks46 = weeks32.plus(weeks39);
        org.joda.time.Weeks weeks47 = weeks17.minus(weeks46);
        org.joda.time.Weeks weeks48 = weeks12.plus(weeks17);
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        boolean boolean53 = weeks51.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        java.lang.String str58 = weeks57.toString();
        org.joda.time.Weeks weeks59 = weeks51.plus(weeks57);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.minus((int) (byte) 10);
        int int63 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks60);
        int int64 = weeks48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks50);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks66 = weeks0.plus(weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period68 = weeks67.toPeriod();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks71.dividedBy((int) '4');
        org.joda.time.Weeks weeks75 = weeks71.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks76 = weeks67.minus(weeks75);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.Weeks weeks81 = weeks78.minus(weeks79);
        boolean boolean82 = weeks67.equals((java.lang.Object) weeks81);
        org.joda.time.Weeks weeks84 = weeks81.dividedBy(97);
        boolean boolean85 = weeks0.isLessThan(weeks81);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "P-3W" + "'", str58, "P-3W");
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((-55));
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((-100));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeksIn(readableInterval3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.minus(weeks11);
        org.joda.time.Weeks weeks16 = weeks14.plus((int) 'a');
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = weeks18.minus(weeks19);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType23 = weeks22.getPeriodType();
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks16.plus(weeks22);
        org.joda.time.Weeks weeks27 = weeks25.minus(1030);
        boolean boolean28 = weeks0.equals((java.lang.Object) weeks27);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = weeks30.minus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.PeriodType periodType36 = weeks34.getPeriodType();
        boolean boolean37 = weeks30.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks39 = weeks34.minus((int) (byte) 0);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        boolean boolean48 = weeks40.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks46.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        boolean boolean52 = weeks50.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = weeks50.get(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        boolean boolean56 = weeks50.isSupported(durationFieldType55);
        org.joda.time.Weeks weeks57 = weeks49.minus(weeks50);
        boolean boolean58 = weeks39.isLessThan(weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks60 = weeks27.minus(weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        boolean boolean63 = weeks61.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        java.lang.String str68 = weeks67.toString();
        org.joda.time.Weeks weeks69 = weeks61.plus(weeks67);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        java.lang.String str74 = weeks73.toString();
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.ONE;
        int int76 = weeks73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks75);
        org.joda.time.Weeks weeks78 = weeks75.plus((int) (short) -1);
        int int79 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks78);
        org.joda.time.Weeks weeks81 = weeks61.plus((int) (short) 100);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks83);
        int int85 = weeks81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks83);
        boolean boolean86 = weeks60.isLessThan(weeks81);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "P-3W" + "'", str68, "P-3W");
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "P-3W" + "'", str74, "P-3W");
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType();
        org.joda.time.Weeks weeks8 = weeks2.negated();
        org.joda.time.Period period9 = weeks2.toPeriod();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType11 = weeks10.getPeriodType();
        org.joda.time.Weeks weeks13 = weeks10.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks15 = weeks10.dividedBy((int) 'a');
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks16.plus(weeks17);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        boolean boolean34 = weeks16.isGreaterThan(weeks32);
        int int35 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.DurationFieldType durationFieldType36 = weeks15.getFieldType();
        boolean boolean37 = weeks2.isSupported(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.minus((int) (byte) 10);
        org.joda.time.Weeks weeks31 = weeks17.minus(weeks30);
        int int32 = weeks30.size();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = weeks30.minus(weeks34);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType37 = weeks35.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ZERO;
        int int1 = weeks0.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Period period11 = weeks0.toPeriod();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.DurationFieldType durationFieldType17 = weeks14.getFieldType(0);
        int int18 = weeks0.get(durationFieldType17);
        int int19 = weeks0.size();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks22 = weeks0.dividedBy((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Period period8 = weeks4.toPeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks4.getFieldType();
        org.joda.time.Weeks weeks10 = weeks4.negated();
        int int11 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks4);
        org.joda.time.MutablePeriod mutablePeriod12 = weeks4.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Period period8 = weeks3.toPeriod();
        org.joda.time.Period period9 = weeks3.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks3.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks24.negated();
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType30 = weeks27.getFieldType(0);
        org.joda.time.Weeks weeks31 = weeks11.minus(weeks27);
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        boolean boolean33 = weeks3.isGreaterThan(weeks31);
        org.joda.time.Duration duration34 = weeks31.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        java.lang.String str25 = weeks21.toString();
        org.joda.time.Weeks weeks27 = weeks21.dividedBy(1);
        org.joda.time.Weeks weeks29 = weeks21.minus((int) 'a');
        int int30 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Weeks weeks32 = weeks21.multipliedBy((-2));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks32);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        org.joda.time.Weeks weeks7 = weeks2.minus((-55));
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = weeks8.getFieldType();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        boolean boolean18 = weeks10.isLessThan(weeks16);
        org.joda.time.Weeks weeks19 = weeks16.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.MutablePeriod mutablePeriod22 = weeks21.toMutablePeriod();
        org.joda.time.Weeks weeks23 = weeks19.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks8.plus(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks34 = weeks26.plus(weeks30);
        org.joda.time.MutablePeriod mutablePeriod35 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks37 = weeks7.minus(weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks40.dividedBy((int) '4');
        int int43 = weeks40.size();
        org.joda.time.Weeks weeks44 = weeks40.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks47.dividedBy((int) '4');
        int int50 = weeks47.size();
        org.joda.time.Weeks weeks51 = weeks47.negated();
        boolean boolean52 = weeks44.isGreaterThan(weeks47);
        org.joda.time.DurationFieldType durationFieldType53 = weeks44.getFieldType();
        org.joda.time.Weeks weeks55 = weeks44.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.weeks((-1));
        int int58 = weeks57.size();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Weeks weeks63 = weeks61.dividedBy((int) '4');
        int int64 = weeks61.size();
        org.joda.time.Period period65 = weeks61.toPeriod();
        org.joda.time.DurationFieldType durationFieldType66 = weeks61.getFieldType();
        org.joda.time.Weeks weeks67 = weeks57.minus(weeks61);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        boolean boolean70 = weeks68.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        java.lang.String str75 = weeks74.toString();
        boolean boolean76 = weeks68.isLessThan(weeks74);
        org.joda.time.Weeks weeks77 = weeks74.negated();
        org.joda.time.Weeks weeks78 = weeks57.plus(weeks77);
        org.joda.time.Weeks weeks79 = weeks55.plus(weeks78);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.TWO;
        int int81 = weeks80.size();
        org.joda.time.Weeks weeks83 = weeks80.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks84 = weeks78.plus(weeks80);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks88 = weeks87.negated();
        org.joda.time.Weeks weeks89 = weeks86.minus(weeks87);
        org.joda.time.DurationFieldType durationFieldType90 = weeks87.getFieldType();
        org.joda.time.Weeks weeks91 = weeks78.plus(weeks87);
        boolean boolean92 = weeks37.isLessThan(weeks87);
        int int93 = weeks87.size();
        int int94 = weeks87.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "P-3W" + "'", str75, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.Weeks weeks23 = weeks16.minus((int) (byte) -1);
        org.joda.time.Weeks weeks25 = weeks16.plus((-1));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        java.lang.String str5 = weeks4.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks14.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks19.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks17.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks6.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.plus((int) (short) 10);
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy(100);
        boolean boolean28 = weeks4.equals((java.lang.Object) weeks24);
        org.joda.time.DurationFieldType durationFieldType30 = weeks24.getFieldType(0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-4W" + "'", str5, "P-4W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType30);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks11.minus(1030);
        int int18 = weeks17.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.multipliedBy(0);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        int int11 = weeks10.size();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        int int17 = weeks14.size();
        org.joda.time.Period period18 = weeks14.toPeriod();
        org.joda.time.DurationFieldType durationFieldType19 = weeks14.getFieldType();
        org.joda.time.Weeks weeks20 = weeks10.minus(weeks14);
        org.joda.time.DurationFieldType durationFieldType22 = weeks14.getFieldType(0);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks27.dividedBy((int) 'a');
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks33.plus(weeks34);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        java.lang.String str48 = weeks47.toString();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.ONE;
        int int50 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        boolean boolean51 = weeks33.isGreaterThan(weeks49);
        int int52 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.DurationFieldType durationFieldType53 = weeks32.getFieldType();
        int int54 = weeks26.get(durationFieldType53);
        boolean boolean55 = weeks14.isSupported(durationFieldType53);
        int int56 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.MutablePeriod mutablePeriod63 = weeks62.toMutablePeriod();
        org.joda.time.Weeks weeks65 = weeks62.plus(0);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks70 = weeks68.dividedBy((int) '4');
        int int71 = weeks68.size();
        org.joda.time.Period period72 = weeks68.toPeriod();
        org.joda.time.DurationFieldType durationFieldType73 = weeks68.getFieldType();
        boolean boolean74 = weeks65.isSupported(durationFieldType73);
        boolean boolean75 = weeks58.isSupported(durationFieldType73);
        int int76 = weeks14.get(durationFieldType73);
        boolean boolean77 = weeks1.isLessThan(weeks14);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P-3W" + "'", str48, "P-3W");
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-3) + "'", int76 == (-3));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        int int19 = weeks10.get(durationFieldType18);
        int int20 = weeks6.get(durationFieldType18);
        org.joda.time.Weeks weeks22 = weeks6.minus((-1));
        org.joda.time.Weeks weeks23 = weeks6.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        org.joda.time.Weeks weeks15 = weeks11.multipliedBy((int) (short) 0);
        int int16 = weeks11.size();
        boolean boolean17 = weeks8.equals((java.lang.Object) int16);
        org.joda.time.PeriodType periodType18 = weeks8.getPeriodType();
        int int19 = weeks8.size();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType21 = weeks20.getPeriodType();
        org.joda.time.Weeks weeks23 = weeks20.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks24.plus(weeks25);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        int int41 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks40);
        boolean boolean42 = weeks24.isGreaterThan(weeks40);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = weeks43.getFieldType();
        int int45 = weeks40.get(durationFieldType44);
        boolean boolean46 = weeks20.isSupported(durationFieldType44);
        org.joda.time.Weeks weeks48 = weeks20.dividedBy((-1));
        org.joda.time.Weeks weeks50 = weeks20.dividedBy(3);
        boolean boolean51 = weeks8.equals((java.lang.Object) 3);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks11.minus((-3));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks20.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks13.plus(weeks20);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks29 = null;
        org.joda.time.Weeks weeks30 = weeks28.plus(weeks29);
        int int31 = weeks30.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = weeks48.getFieldType();
        int int50 = weeks45.get(durationFieldType49);
        org.joda.time.Weeks weeks52 = weeks45.minus((int) (byte) -1);
        org.joda.time.Weeks weeks54 = weeks52.minus((int) '#');
        org.joda.time.Weeks weeks55 = weeks5.minus(weeks52);
        int int56 = weeks5.getWeeks();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = weeks5.plus(weeks57);
        org.joda.time.Weeks weeks60 = null;
        boolean boolean61 = weeks59.isGreaterThan(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.DurationFieldType durationFieldType67 = weeks66.getFieldType();
        org.joda.time.DurationFieldType durationFieldType69 = weeks66.getFieldType(0);
        boolean boolean70 = weeks63.isSupported(durationFieldType69);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks73.negated();
        org.joda.time.Weeks weeks75 = weeks72.minus(weeks73);
        org.joda.time.DurationFieldType durationFieldType76 = weeks73.getFieldType();
        boolean boolean77 = weeks63.isLessThan(weeks73);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks81 = weeks80.negated();
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks81);
        org.joda.time.DurationFieldType durationFieldType83 = weeks82.getFieldType();
        org.joda.time.DurationFieldType durationFieldType85 = weeks82.getFieldType(0);
        boolean boolean86 = weeks79.isSupported(durationFieldType85);
        boolean boolean87 = weeks63.isSupported(durationFieldType85);
        boolean boolean88 = weeks59.isSupported(durationFieldType85);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-3));
        org.joda.time.Weeks weeks3 = weeks1.plus(0);
        org.joda.time.Period period4 = weeks3.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        org.joda.time.Weeks weeks37 = weeks27.plus(weeks31);
        org.joda.time.Duration duration38 = weeks37.toStandardDuration();
        org.joda.time.Duration duration39 = weeks37.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.String str2 = weeks0.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType4 = weeks3.getPeriodType();
        org.joda.time.Weeks weeks6 = weeks3.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks8 = weeks3.dividedBy((int) 'a');
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        boolean boolean18 = weeks10.isLessThan(weeks16);
        org.joda.time.Weeks weeks19 = weeks9.plus(weeks10);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        boolean boolean27 = weeks9.isGreaterThan(weeks25);
        int int28 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks9);
        org.joda.time.DurationFieldType durationFieldType29 = weeks8.getFieldType();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks31 = weeks8.plus(weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = weeks32.plus(weeks33);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        int int49 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks48);
        boolean boolean50 = weeks32.isGreaterThan(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType52 = weeks51.getFieldType();
        int int53 = weeks48.get(durationFieldType52);
        org.joda.time.Weeks weeks55 = weeks48.minus((int) (byte) -1);
        org.joda.time.Weeks weeks57 = weeks55.minus((int) '#');
        org.joda.time.Weeks weeks58 = weeks8.minus(weeks55);
        int int59 = weeks8.getWeeks();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Weeks weeks62 = weeks8.plus(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.TWO;
        int int64 = weeks63.size();
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.weeksIn(readableInterval65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        boolean boolean69 = weeks67.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        java.lang.String str74 = weeks73.toString();
        boolean boolean75 = weeks67.isLessThan(weeks73);
        org.joda.time.Weeks weeks76 = weeks66.minus(weeks73);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.MutablePeriod mutablePeriod81 = weeks80.toMutablePeriod();
        org.joda.time.Weeks weeks83 = weeks80.multipliedBy(0);
        org.joda.time.Weeks weeks84 = weeks78.minus(weeks83);
        int int85 = weeks76.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks84);
        boolean boolean86 = weeks63.isLessThan(weeks84);
        org.joda.time.Weeks weeks87 = weeks8.minus(weeks84);
        boolean boolean88 = weeks0.isGreaterThan(weeks84);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P3W" + "'", str2, "P3W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "P-3W" + "'", str74, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.Weeks weeks22 = weeks19.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = weeks20.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) 'a');
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        int int48 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        java.lang.String str49 = weeks29.toString();
        org.joda.time.MutablePeriod mutablePeriod50 = weeks29.toMutablePeriod();
        boolean boolean51 = weeks22.isGreaterThan(weeks29);
        org.joda.time.MutablePeriod mutablePeriod52 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        boolean boolean56 = weeks54.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        java.lang.String str61 = weeks60.toString();
        boolean boolean62 = weeks54.isLessThan(weeks60);
        org.joda.time.Weeks weeks63 = weeks53.plus(weeks54);
        org.joda.time.Period period64 = weeks53.toPeriod();
        java.lang.String str65 = weeks53.toString();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        java.lang.String str70 = weeks69.toString();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.ONE;
        int int72 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks71);
        org.joda.time.Weeks weeks74 = weeks71.plus((int) (short) -1);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks76 = weeks75.negated();
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        java.lang.String str79 = weeks78.toString();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks81 = weeks71.minus(weeks78);
        org.joda.time.Weeks weeks83 = weeks71.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks84 = weeks53.minus(weeks83);
        org.joda.time.Duration duration85 = weeks53.toStandardDuration();
        org.joda.time.Weeks weeks86 = weeks22.minus(weeks53);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P1W" + "'", str49, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P-3W" + "'", str61, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P1W" + "'", str65, "P1W");
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P-3W" + "'", str70, "P-3W");
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "P-3W" + "'", str79, "P-3W");
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(weeks86);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks27.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod33 = weeks27.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType34 = weeks27.getFieldType();
        org.joda.time.PeriodType periodType35 = weeks27.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType36 = weeks27.getFieldType();
        org.joda.time.Weeks weeks37 = weeks26.minus(weeks27);
        org.joda.time.Weeks weeks39 = weeks37.multipliedBy((-55));
        org.joda.time.Duration duration40 = weeks37.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(duration40);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(400);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        java.lang.String str6 = weeks2.toString();
        org.joda.time.Duration duration7 = weeks2.toStandardDuration();
        org.joda.time.Weeks weeks9 = weeks2.plus(10);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.ONE;
        int int16 = weeks13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks15);
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = weeks10.plus(weeks20);
        org.joda.time.DurationFieldType durationFieldType25 = weeks20.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(durationFieldType25);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Duration duration14 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        boolean boolean24 = weeks16.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks15.plus(weeks16);
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = weeks28.minus(weeks29);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.PeriodType periodType34 = weeks32.getPeriodType();
        boolean boolean35 = weeks28.isGreaterThan(weeks32);
        org.joda.time.Weeks weeks37 = weeks32.minus((int) (byte) 0);
        org.joda.time.Weeks weeks38 = weeks25.plus(weeks37);
        boolean boolean39 = weeks11.isGreaterThan(weeks37);
        java.lang.Class<?> wildcardClass40 = weeks37.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = weeks12.getFieldType();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = weeks20.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.MutablePeriod mutablePeriod26 = weeks25.toMutablePeriod();
        org.joda.time.Weeks weeks27 = weeks23.plus(weeks25);
        org.joda.time.Weeks weeks28 = weeks12.plus(weeks27);
        org.joda.time.Weeks weeks29 = weeks11.plus(weeks28);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.parseWeeks("P3W");
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks11.plus((int) (short) 100);
        org.joda.time.Weeks weeks33 = weeks31.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType35 = weeks34.getFieldType();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.MutablePeriod mutablePeriod48 = weeks47.toMutablePeriod();
        org.joda.time.Weeks weeks49 = weeks45.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks34.plus(weeks49);
        org.joda.time.Weeks weeks52 = weeks49.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks53 = weeks52.negated();
        boolean boolean54 = weeks33.isGreaterThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.MutablePeriod mutablePeriod69 = weeks68.toMutablePeriod();
        org.joda.time.Weeks weeks70 = weeks66.plus(weeks68);
        org.joda.time.Weeks weeks71 = weeks55.plus(weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        boolean boolean75 = weeks73.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        java.lang.String str80 = weeks79.toString();
        boolean boolean81 = weeks73.isLessThan(weeks79);
        org.joda.time.Weeks weeks82 = weeks72.plus(weeks73);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType84 = weeks83.getFieldType();
        boolean boolean85 = weeks82.isSupported(durationFieldType84);
        int int86 = weeks70.get(durationFieldType84);
        boolean boolean87 = weeks33.isSupported(durationFieldType84);
        int int88 = weeks10.get(durationFieldType84);
        boolean boolean89 = weeks8.isSupported(durationFieldType84);
        org.joda.time.DurationFieldType durationFieldType91 = weeks8.getFieldType(0);
        org.joda.time.Weeks weeks93 = weeks8.minus((-13));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P-3W" + "'", str80, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 3 + "'", int88 == 3);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertNotNull(weeks93);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks17.minus((int) (byte) 100);
        org.joda.time.Duration duration30 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks31 = weeks1.minus(weeks17);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks33.negated();
        boolean boolean36 = weeks17.isGreaterThan(weeks33);
        org.joda.time.MutablePeriod mutablePeriod37 = weeks17.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(mutablePeriod37);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        boolean boolean13 = weeks10.isSupported(durationFieldType12);
        int int14 = weeks10.getWeeks();
        org.joda.time.Weeks weeks16 = weeks10.multipliedBy((int) (byte) 100);
        org.joda.time.Duration duration17 = weeks10.toStandardDuration();
        org.joda.time.Weeks weeks19 = weeks10.dividedBy((int) (byte) 10);
        org.joda.time.Duration duration20 = weeks10.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(duration20);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Period period15 = weeks14.toPeriod();
        java.lang.String str16 = weeks14.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P3W" + "'", str16, "P3W");
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks10 = weeks5.minus((int) (byte) 0);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = weeks21.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = weeks21.isSupported(durationFieldType26);
        org.joda.time.Weeks weeks28 = weeks20.minus(weeks21);
        boolean boolean29 = weeks10.isLessThan(weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        int int31 = weeks10.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType12 = weeks10.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy((int) (byte) -1);
        int int15 = weeks14.size();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        int int22 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Weeks weeks24 = weeks21.plus((int) (short) -1);
        org.joda.time.Weeks weeks26 = weeks21.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((-1));
        int int34 = weeks33.size();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks37.dividedBy((int) '4');
        int int40 = weeks37.size();
        org.joda.time.Period period41 = weeks37.toPeriod();
        org.joda.time.DurationFieldType durationFieldType42 = weeks37.getFieldType();
        org.joda.time.Weeks weeks43 = weeks33.minus(weeks37);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks50.negated();
        org.joda.time.Weeks weeks54 = weeks33.plus(weeks53);
        boolean boolean55 = weeks30.isLessThan(weeks54);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks60 = weeks58.dividedBy((int) '4');
        int int61 = weeks58.size();
        org.joda.time.Period period62 = weeks58.toPeriod();
        org.joda.time.DurationFieldType durationFieldType63 = weeks58.getFieldType();
        boolean boolean64 = weeks30.isSupported(durationFieldType63);
        int int65 = weeks26.get(durationFieldType63);
        boolean boolean66 = weeks14.equals((java.lang.Object) int65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks71 = weeks69.dividedBy((int) '4');
        int int72 = weeks69.size();
        org.joda.time.Weeks weeks73 = weeks69.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks78 = weeks76.dividedBy((int) '4');
        int int79 = weeks76.size();
        org.joda.time.Weeks weeks80 = weeks76.negated();
        boolean boolean81 = weeks73.isGreaterThan(weeks76);
        org.joda.time.DurationFieldType durationFieldType82 = weeks73.getFieldType();
        org.joda.time.Weeks weeks84 = weeks73.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks87 = weeks73.multipliedBy((-100));
        org.joda.time.Period period88 = weeks73.toPeriod();
        int int89 = weeks73.size();
        org.joda.time.Weeks weeks90 = weeks14.minus(weeks73);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(weeks90);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-3));
        org.joda.time.Weeks weeks3 = weeks1.plus(0);
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        boolean boolean8 = weeks5.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        boolean boolean15 = weeks13.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        boolean boolean21 = weeks13.isLessThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks22.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks11.plus(weeks26);
        org.joda.time.Weeks weeks28 = weeks10.minus(weeks11);
        org.joda.time.Weeks weeks30 = weeks10.dividedBy((int) (byte) 100);
        boolean boolean31 = weeks4.isLessThan(weeks10);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks35 = weeks32.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks37 = weeks32.dividedBy((int) 'a');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        boolean boolean56 = weeks38.isGreaterThan(weeks54);
        int int57 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        boolean boolean60 = weeks58.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        java.lang.String str65 = weeks64.toString();
        boolean boolean66 = weeks58.isLessThan(weeks64);
        org.joda.time.Weeks weeks67 = weeks64.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.MutablePeriod mutablePeriod70 = weeks69.toMutablePeriod();
        org.joda.time.Weeks weeks71 = weeks67.plus(weeks69);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks73 = weeks37.minus(weeks67);
        org.joda.time.Duration duration74 = weeks73.toStandardDuration();
        org.joda.time.Weeks weeks76 = weeks73.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks78 = weeks77.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        java.lang.String str81 = weeks80.toString();
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.ONE;
        int int83 = weeks80.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks82);
        java.lang.String str84 = weeks80.toString();
        org.joda.time.Period period85 = weeks80.toPeriod();
        org.joda.time.Period period86 = weeks80.toPeriod();
        org.joda.time.DurationFieldType durationFieldType87 = weeks80.getFieldType();
        boolean boolean88 = weeks76.isSupported(durationFieldType87);
        int int89 = weeks10.get(durationFieldType87);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P-3W" + "'", str65, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P-3W" + "'", str81, "P-3W");
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "P-3W" + "'", str84, "P-3W");
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 300 + "'", int89 == 300);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.Weeks weeks14 = weeks3.minus((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks3.minus((-14));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) ' ');
        org.joda.time.Weeks weeks11 = weeks9.minus(103);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks6.dividedBy((int) '4');
        int int9 = weeks8.getWeeks();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks21.minus((-3));
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = weeks34.toMutablePeriod();
        org.joda.time.Weeks weeks36 = weeks30.plus(weeks34);
        org.joda.time.Weeks weeks37 = weeks23.plus(weeks30);
        org.joda.time.Weeks weeks38 = weeks8.minus(weeks37);
        org.joda.time.Weeks weeks39 = weeks3.plus(weeks8);
        int int40 = weeks8.getWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType42 = weeks8.getFieldType((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.negated();
        org.joda.time.Weeks weeks38 = weeks17.plus(weeks37);
        boolean boolean39 = weeks14.isLessThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks44 = weeks42.dividedBy((int) '4');
        int int45 = weeks42.size();
        org.joda.time.Period period46 = weeks42.toPeriod();
        org.joda.time.DurationFieldType durationFieldType47 = weeks42.getFieldType();
        boolean boolean48 = weeks14.isSupported(durationFieldType47);
        int int49 = weeks10.get(durationFieldType47);
        org.joda.time.PeriodType periodType50 = weeks10.getPeriodType();
        org.joda.time.Weeks weeks51 = weeks10.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(weeks51);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks35 = null;
        org.joda.time.Weeks weeks36 = weeks33.plus(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        java.lang.String str44 = weeks40.toString();
        org.joda.time.Weeks weeks46 = weeks40.dividedBy(1);
        org.joda.time.Weeks weeks48 = weeks40.minus((int) 'a');
        org.joda.time.Weeks weeks50 = weeks48.minus((int) (short) 1);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = weeks36.minus(weeks50);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = weeks55.minus(weeks56);
        org.joda.time.Weeks weeks60 = weeks56.multipliedBy(10);
        int int61 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks56);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        java.lang.String str10 = weeks9.toString();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((-1));
        int int13 = weeks12.size();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks18 = weeks16.dividedBy((int) '4');
        int int19 = weeks16.size();
        org.joda.time.Period period20 = weeks16.toPeriod();
        org.joda.time.DurationFieldType durationFieldType21 = weeks16.getFieldType();
        org.joda.time.Weeks weeks22 = weeks12.minus(weeks16);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        java.lang.String str30 = weeks29.toString();
        boolean boolean31 = weeks23.isLessThan(weeks29);
        org.joda.time.Weeks weeks32 = weeks29.negated();
        org.joda.time.Weeks weeks33 = weeks12.plus(weeks32);
        boolean boolean34 = weeks9.isLessThan(weeks33);
        org.joda.time.MutablePeriod mutablePeriod35 = weeks9.toMutablePeriod();
        int int37 = weeks9.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType38 = weeks9.getFieldType();
        boolean boolean39 = weeks0.isSupported(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = weeks0.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-3W" + "'", str10, "P-3W");
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-3W" + "'", str30, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(durationFieldType40);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean14 = weeks5.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks19 = weeks16.minus(1030);
        org.joda.time.Weeks weeks20 = weeks15.plus(weeks16);
        org.joda.time.Duration duration21 = weeks20.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(duration21);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) '4');
        int int33 = weeks30.size();
        org.joda.time.Weeks weeks34 = weeks27.plus(weeks30);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        org.joda.time.DurationFieldType durationFieldType42 = weeks39.getFieldType(0);
        boolean boolean43 = weeks36.isSupported(durationFieldType42);
        boolean boolean44 = weeks30.isSupported(durationFieldType42);
        org.joda.time.PeriodType periodType45 = weeks30.getPeriodType();
        boolean boolean46 = weeks22.equals((java.lang.Object) weeks30);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        int int8 = weeks3.size();
        org.joda.time.MutablePeriod mutablePeriod9 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks10 = weeks3.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks24 = weeks20.plus(weeks22);
        int int25 = weeks22.size();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeksIn(readableInterval26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks27.minus(weeks34);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks44 = weeks41.multipliedBy(0);
        org.joda.time.Weeks weeks45 = weeks39.minus(weeks44);
        int int46 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.joda.time.Weeks weeks47 = weeks37.negated();
        boolean boolean48 = weeks22.isGreaterThan(weeks37);
        org.joda.time.Weeks weeks50 = weeks22.plus(0);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        boolean boolean53 = weeks51.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        java.lang.String str58 = weeks57.toString();
        boolean boolean59 = weeks51.isLessThan(weeks57);
        org.joda.time.Weeks weeks61 = weeks51.dividedBy(100);
        org.joda.time.Duration duration62 = weeks61.toStandardDuration();
        int int63 = weeks61.getWeeks();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        boolean boolean66 = weeks64.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = weeks64.get(durationFieldType67);
        org.joda.time.Weeks weeks70 = weeks64.minus((int) ' ');
        boolean boolean71 = weeks61.isGreaterThan(weeks64);
        org.joda.time.Weeks weeks73 = weeks61.dividedBy(300);
        org.joda.time.Weeks weeks75 = weeks73.minus(10);
        org.joda.time.Weeks weeks76 = weeks50.plus(weeks73);
        int int77 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "P-3W" + "'", str58, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks35.minus(weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.PeriodType periodType45 = weeks44.getPeriodType();
        java.lang.String str46 = weeks44.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P3W" + "'", str46, "P3W");
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.minus(0);
        org.joda.time.Weeks weeks19 = weeks6.multipliedBy(9);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((-927));
        org.joda.time.Weeks weeks26 = weeks0.plus((-103));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.minus((int) (byte) 10);
        org.joda.time.Weeks weeks31 = weeks17.minus(weeks30);
        int int32 = weeks30.size();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = weeks30.minus(weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ZERO;
        org.joda.time.Weeks weeks38 = weeks36.minus((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod39 = weeks36.toMutablePeriod();
        boolean boolean40 = weeks35.equals((java.lang.Object) mutablePeriod39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks43.dividedBy((int) '4');
        org.joda.time.Weeks weeks47 = weeks43.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration48 = weeks47.toStandardDuration();
        org.joda.time.Weeks weeks49 = weeks47.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = weeks50.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.MutablePeriod mutablePeriod64 = weeks63.toMutablePeriod();
        org.joda.time.Weeks weeks65 = weeks61.plus(weeks63);
        org.joda.time.Weeks weeks66 = weeks50.plus(weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        boolean boolean70 = weeks68.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        java.lang.String str75 = weeks74.toString();
        boolean boolean76 = weeks68.isLessThan(weeks74);
        org.joda.time.Weeks weeks77 = weeks67.plus(weeks68);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType79 = weeks78.getFieldType();
        boolean boolean80 = weeks77.isSupported(durationFieldType79);
        int int81 = weeks65.get(durationFieldType79);
        org.joda.time.Weeks weeks83 = weeks65.minus((int) ' ');
        org.joda.time.Weeks weeks85 = weeks65.minus((int) (short) 10);
        org.joda.time.Weeks weeks87 = weeks65.dividedBy((-2));
        org.joda.time.Weeks weeks88 = weeks49.plus(weeks87);
        int int89 = weeks35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks88);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "P-3W" + "'", str75, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType8 = weeks7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType(0);
        int int11 = weeks0.get(durationFieldType10);
        org.joda.time.Weeks weeks13 = weeks0.minus((int) (byte) 10);
        org.joda.time.Period period14 = weeks0.toPeriod();
        java.lang.String str15 = weeks0.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P3W" + "'", str15, "P3W");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks11.minus(1030);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks18.plus(weeks19);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        boolean boolean36 = weeks18.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks38 = weeks18.plus((int) '#');
        org.joda.time.Weeks weeks39 = weeks17.minus(weeks18);
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType();
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = weeks1.multipliedBy((int) (short) 100);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((-1));
        int int28 = weeks27.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        org.joda.time.Weeks weeks37 = weeks27.minus(weeks31);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        boolean boolean46 = weeks38.isLessThan(weeks44);
        org.joda.time.Weeks weeks47 = weeks44.negated();
        org.joda.time.Weeks weeks48 = weeks27.plus(weeks47);
        boolean boolean49 = weeks24.isLessThan(weeks48);
        org.joda.time.MutablePeriod mutablePeriod50 = weeks24.toMutablePeriod();
        int int51 = weeks24.getWeeks();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = weeks53.minus(weeks54);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.PeriodType periodType59 = weeks57.getPeriodType();
        boolean boolean60 = weeks53.isGreaterThan(weeks57);
        org.joda.time.Weeks weeks62 = weeks57.minus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType63 = weeks62.getFieldType();
        boolean boolean64 = weeks24.isSupported(durationFieldType63);
        boolean boolean65 = weeks20.equals((java.lang.Object) durationFieldType63);
        int int66 = weeks10.get(durationFieldType63);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType68 = weeks10.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-3) + "'", int51 == (-3));
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3200 + "'", int66 == 3200);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = weeks10.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks10.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks17 = weeks9.minus(weeks10);
        org.joda.time.Weeks weeks19 = weeks9.dividedBy(10);
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        java.lang.String str28 = weeks24.toString();
        org.joda.time.Period period29 = weeks24.toPeriod();
        org.joda.time.PeriodType periodType30 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks31 = weeks19.minus(weeks24);
        org.joda.time.Weeks weeks33 = weeks19.multipliedBy(3);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks8.plus(weeks9);
        int int19 = weeks9.size();
        org.joda.time.DurationFieldType durationFieldType20 = weeks9.getFieldType();
        org.joda.time.Weeks weeks21 = weeks1.plus(weeks9);
        int int22 = weeks9.size();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) 'a');
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        int int48 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.MutablePeriod mutablePeriod61 = weeks60.toMutablePeriod();
        org.joda.time.Weeks weeks62 = weeks58.plus(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks64 = weeks28.minus(weeks58);
        int int65 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks64);
        org.joda.time.DurationFieldType durationFieldType66 = weeks64.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(durationFieldType66);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        org.joda.time.PeriodType periodType28 = weeks6.getPeriodType();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.Weeks weeks56 = weeks34.minus(300);
        org.joda.time.Weeks weeks58 = weeks56.multipliedBy((-103));
        boolean boolean59 = weeks6.isGreaterThan(weeks58);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Weeks weeks23 = weeks19.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        boolean boolean31 = weeks23.isGreaterThan(weeks26);
        org.joda.time.DurationFieldType durationFieldType32 = weeks23.getFieldType();
        int int33 = weeks16.get(durationFieldType32);
        int int34 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks36 = weeks16.minus(9);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        int int38 = weeks36.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 91 + "'", int38 == 91);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P0W");
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks2.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = weeks2.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks2.getFieldType();
        org.joda.time.PeriodType periodType10 = weeks2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType11 = weeks2.getFieldType();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        int int14 = weeks13.size();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Period period21 = weeks17.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = weeks17.getFieldType();
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks17);
        org.joda.time.Weeks weeks25 = weeks13.minus((int) (byte) 100);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.DurationFieldType durationFieldType31 = weeks30.getFieldType();
        org.joda.time.DurationFieldType durationFieldType33 = weeks30.getFieldType(0);
        boolean boolean34 = weeks27.isSupported(durationFieldType33);
        boolean boolean35 = weeks13.equals((java.lang.Object) weeks27);
        boolean boolean36 = weeks2.isLessThan(weeks27);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks41 = weeks39.dividedBy((int) '4');
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks44.dividedBy((int) '4');
        int int47 = weeks44.size();
        org.joda.time.Weeks weeks48 = weeks41.plus(weeks44);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.DurationFieldType durationFieldType54 = weeks53.getFieldType();
        org.joda.time.DurationFieldType durationFieldType56 = weeks53.getFieldType(0);
        boolean boolean57 = weeks50.isSupported(durationFieldType56);
        boolean boolean58 = weeks44.isSupported(durationFieldType56);
        org.joda.time.PeriodType periodType59 = weeks44.getPeriodType();
        boolean boolean60 = weeks27.isLessThan(weeks44);
        org.joda.time.Weeks weeks62 = weeks27.plus((-3));
        boolean boolean63 = weeks1.equals((java.lang.Object) weeks27);
        org.joda.time.PeriodType periodType64 = weeks27.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(periodType64);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        boolean boolean30 = weeks27.isSupported(durationFieldType29);
        int int31 = weeks15.get(durationFieldType29);
        org.joda.time.Weeks weeks33 = weeks15.minus((int) ' ');
        int int34 = weeks33.size();
        org.joda.time.Period period35 = weeks33.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        int int16 = weeks15.size();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks19.getFieldType();
        org.joda.time.Weeks weeks25 = weeks15.minus(weeks19);
        org.joda.time.Weeks weeks27 = weeks25.minus((-3));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks34.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks27.plus(weeks34);
        org.joda.time.Weeks weeks42 = weeks12.minus(weeks41);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks45 = weeks12.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType((int) (byte) 0);
        boolean boolean48 = weeks3.isSupported(durationFieldType47);
        org.joda.time.Weeks weeks50 = weeks3.plus((-13));
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        org.joda.time.Weeks weeks54 = weeks51.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks56 = weeks51.dividedBy((int) 'a');
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        boolean boolean60 = weeks58.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        java.lang.String str65 = weeks64.toString();
        boolean boolean66 = weeks58.isLessThan(weeks64);
        org.joda.time.Weeks weeks67 = weeks57.plus(weeks58);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        boolean boolean75 = weeks57.isGreaterThan(weeks73);
        int int76 = weeks56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        java.lang.String str77 = weeks57.toString();
        org.joda.time.Weeks weeks78 = weeks50.minus(weeks57);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType80 = weeks79.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod81 = weeks79.toMutablePeriod();
        boolean boolean82 = weeks50.isGreaterThan(weeks79);
        org.joda.time.DurationFieldType durationFieldType83 = null;
        boolean boolean84 = weeks79.isSupported(durationFieldType83);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P-3W" + "'", str65, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "P1W" + "'", str77, "P1W");
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        int int11 = weeks1.size();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = weeks12.plus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks26.plus((int) (short) -1);
        int int30 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks12.plus((int) (short) 100);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = weeks34.minus(weeks35);
        java.lang.String str38 = weeks37.toString();
        int int39 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks37);
        org.joda.time.Weeks weeks41 = weeks37.dividedBy((int) ' ');
        int int42 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks41);
        org.joda.time.Weeks weeks44 = weeks1.plus((-1));
        int int45 = weeks44.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-4W" + "'", str38, "P-4W");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.Weeks weeks37 = weeks34.plus((int) (short) -1);
        org.joda.time.Weeks weeks39 = weeks34.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        int int47 = weeks46.size();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.minus(weeks50);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = weeks46.plus(weeks66);
        boolean boolean68 = weeks43.isLessThan(weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks71.dividedBy((int) '4');
        int int74 = weeks71.size();
        org.joda.time.Period period75 = weeks71.toPeriod();
        org.joda.time.DurationFieldType durationFieldType76 = weeks71.getFieldType();
        boolean boolean77 = weeks43.isSupported(durationFieldType76);
        int int78 = weeks39.get(durationFieldType76);
        org.joda.time.Weeks weeks79 = weeks22.plus(weeks39);
        org.joda.time.Weeks weeks81 = weeks39.dividedBy((-100));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        int int44 = weeks43.size();
        org.joda.time.Weeks weeks46 = weeks43.multipliedBy((-3));
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks51 = weeks49.dividedBy((int) '4');
        int int52 = weeks49.size();
        java.lang.String str53 = weeks49.toString();
        org.joda.time.Weeks weeks55 = weeks49.dividedBy((int) (short) -1);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.DurationFieldType durationFieldType57 = weeks56.getFieldType();
        int int58 = weeks43.get(durationFieldType57);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Period period8 = weeks4.toPeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks4.getFieldType();
        org.joda.time.Weeks weeks10 = weeks4.negated();
        int int11 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks4);
        org.joda.time.Weeks weeks13 = weeks1.multipliedBy(1);
        org.joda.time.Weeks weeks15 = weeks1.minus((int) (short) 100);
        java.lang.String str16 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P0W" + "'", str16, "P0W");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType5 = weeks4.getPeriodType();
        org.joda.time.Weeks weeks7 = weeks4.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks9 = weeks4.dividedBy((int) 'a');
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks10.plus(weeks11);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        boolean boolean28 = weeks10.isGreaterThan(weeks26);
        int int29 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks10);
        org.joda.time.DurationFieldType durationFieldType30 = weeks9.getFieldType();
        int int31 = weeks3.get(durationFieldType30);
        org.joda.time.MutablePeriod mutablePeriod32 = weeks3.toMutablePeriod();
        org.joda.time.PeriodType periodType33 = weeks3.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType34 = weeks3.getFieldType();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks37.dividedBy((int) '4');
        int int40 = weeks39.getWeeks();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.weeks((-1));
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks46.dividedBy((int) '4');
        int int49 = weeks46.size();
        org.joda.time.Period period50 = weeks46.toPeriod();
        org.joda.time.DurationFieldType durationFieldType51 = weeks46.getFieldType();
        org.joda.time.Weeks weeks52 = weeks42.minus(weeks46);
        org.joda.time.Weeks weeks54 = weeks52.minus((-3));
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks55.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        boolean boolean63 = weeks55.isLessThan(weeks61);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.MutablePeriod mutablePeriod66 = weeks65.toMutablePeriod();
        org.joda.time.Weeks weeks67 = weeks61.plus(weeks65);
        org.joda.time.Weeks weeks68 = weeks54.plus(weeks61);
        org.joda.time.Weeks weeks69 = weeks39.minus(weeks68);
        org.joda.time.Weeks weeks70 = null;
        org.joda.time.Weeks weeks71 = weeks68.plus(weeks70);
        int int72 = weeks68.size();
        int int73 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks68);
        int int74 = weeks3.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = weeks10.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks10.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks17 = weeks9.minus(weeks10);
        org.joda.time.Weeks weeks19 = weeks9.dividedBy(10);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((-1));
        int int28 = weeks27.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        org.joda.time.Weeks weeks37 = weeks27.minus(weeks31);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        boolean boolean46 = weeks38.isLessThan(weeks44);
        org.joda.time.Weeks weeks47 = weeks44.negated();
        org.joda.time.Weeks weeks48 = weeks27.plus(weeks47);
        boolean boolean49 = weeks24.isLessThan(weeks48);
        boolean boolean50 = weeks9.isLessThan(weeks48);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        int int8 = weeks6.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-3));
        org.joda.time.Weeks weeks3 = weeks1.plus(0);
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        boolean boolean8 = weeks5.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        boolean boolean15 = weeks13.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        boolean boolean21 = weeks13.isLessThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks22.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks11.plus(weeks26);
        org.joda.time.Weeks weeks28 = weeks10.minus(weeks11);
        org.joda.time.Weeks weeks30 = weeks10.dividedBy((int) (byte) 100);
        boolean boolean31 = weeks4.isLessThan(weeks10);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks35 = weeks32.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks37 = weeks32.dividedBy((int) 'a');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        boolean boolean56 = weeks38.isGreaterThan(weeks54);
        int int57 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks60 = weeks38.plus(weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) (short) 10);
        boolean boolean63 = weeks4.isGreaterThan(weeks62);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.MutablePeriod mutablePeriod15 = weeks14.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks14.negated();
        int int17 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        int int19 = weeks18.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks3 = weeks1.negated();
        org.joda.time.PeriodType periodType4 = weeks1.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.joda.time.DurationFieldType durationFieldType19 = weeks16.getFieldType(0);
        boolean boolean20 = weeks13.isSupported(durationFieldType19);
        boolean boolean21 = weeks7.isSupported(durationFieldType19);
        org.joda.time.Weeks weeks23 = weeks7.dividedBy((-2147483648));
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks27 = weeks24.minus(1030);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = weeks31.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks31.multipliedBy(0);
        org.joda.time.Weeks weeks35 = weeks29.minus(weeks34);
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        boolean boolean46 = weeks38.isLessThan(weeks44);
        org.joda.time.Weeks weeks47 = weeks37.plus(weeks38);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        java.lang.String str52 = weeks51.toString();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.ONE;
        int int54 = weeks51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks53);
        boolean boolean55 = weeks37.isGreaterThan(weeks53);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks53.isGreaterThan(weeks56);
        org.joda.time.Weeks weeks59 = weeks56.plus((int) (byte) 100);
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.Weeks weeks61 = weeks35.minus(weeks60);
        org.joda.time.DurationFieldType durationFieldType62 = weeks35.getFieldType();
        int int63 = weeks27.get(durationFieldType62);
        org.joda.time.Weeks weeks65 = weeks27.multipliedBy(1);
        boolean boolean66 = weeks23.isLessThan(weeks65);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-3W" + "'", str52, "P-3W");
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1027) + "'", int63 == (-1027));
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((-1));
        int int21 = weeks20.size();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks24.size();
        org.joda.time.Period period28 = weeks24.toPeriod();
        org.joda.time.DurationFieldType durationFieldType29 = weeks24.getFieldType();
        org.joda.time.Weeks weeks30 = weeks20.minus(weeks24);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = weeks20.plus(weeks40);
        boolean boolean42 = weeks17.isLessThan(weeks41);
        org.joda.time.MutablePeriod mutablePeriod43 = weeks17.toMutablePeriod();
        int int44 = weeks17.getWeeks();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType46 = weeks45.getPeriodType();
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks50 = weeks45.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod51 = weeks45.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks45.getFieldType();
        org.joda.time.PeriodType periodType53 = weeks45.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks45.getFieldType();
        int int55 = weeks17.get(durationFieldType54);
        boolean boolean56 = weeks11.equals((java.lang.Object) weeks17);
        int int57 = weeks11.size();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = weeks11.getValue((-100));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy(10);
        int int7 = weeks2.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Weeks weeks14 = weeks10.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Weeks weeks21 = weeks17.negated();
        boolean boolean22 = weeks14.isGreaterThan(weeks17);
        org.joda.time.DurationFieldType durationFieldType23 = weeks14.getFieldType();
        boolean boolean24 = weeks2.equals((java.lang.Object) weeks14);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks33.dividedBy((int) '4');
        int int36 = weeks33.size();
        org.joda.time.Period period37 = weeks33.toPeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks33.getFieldType();
        org.joda.time.PeriodType periodType39 = weeks33.getPeriodType();
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeksIn(readableInterval40);
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        boolean boolean43 = weeks33.isGreaterThan(weeks41);
        boolean boolean44 = weeks30.isGreaterThan(weeks41);
        org.joda.time.Weeks weeks45 = weeks30.negated();
        org.joda.time.Weeks weeks46 = null;
        boolean boolean47 = weeks30.isLessThan(weeks46);
        org.joda.time.Weeks weeks49 = weeks30.minus((int) 'a');
        org.joda.time.Weeks weeks50 = weeks2.plus(weeks30);
        org.joda.time.Duration duration51 = weeks50.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(duration51);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks27 = weeks5.minus(300);
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod35 = weeks29.toMutablePeriod();
        boolean boolean36 = weeks27.equals((java.lang.Object) weeks29);
        org.joda.time.Weeks weeks38 = weeks27.multipliedBy((int) (byte) 100);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks38);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.TWO;
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks46 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.plus(weeks48);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        int int64 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        boolean boolean65 = weeks47.isGreaterThan(weeks63);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks63.isGreaterThan(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.plus((int) (byte) 100);
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = weeks42.plus(weeks69);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks75 = weeks72.minus(1030);
        org.joda.time.Weeks weeks76 = weeks42.plus(weeks72);
        org.joda.time.Period period77 = weeks42.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(period77);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = weeks5.toMutablePeriod();
        org.joda.time.Weeks weeks8 = weeks5.plus(0);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        boolean boolean17 = weeks8.isSupported(durationFieldType16);
        boolean boolean18 = weeks1.isSupported(durationFieldType16);
        org.joda.time.Weeks weeks20 = weeks1.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks22 = weeks1.dividedBy((int) ' ');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks11.minus((-3));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks20.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks13.plus(weeks20);
        org.joda.time.Weeks weeks29 = weeks20.minus((-1027));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks11.minus(1030);
        org.joda.time.Weeks weeks19 = weeks17.minus(7);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            int int22 = weeks0.getValue((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks51.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks40.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = weeks59.plus(weeks65);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks73.plus((int) (short) -1);
        int int77 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks59.plus((int) (short) 100);
        org.joda.time.Weeks weeks81 = weeks59.multipliedBy(3);
        org.joda.time.Weeks weeks82 = weeks58.minus(weeks59);
        boolean boolean83 = weeks38.isGreaterThan(weeks59);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks86 = weeks84.dividedBy((-2));
        org.joda.time.Weeks weeks88 = weeks86.minus(103);
        org.joda.time.Weeks weeks89 = weeks86.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks89);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        int int9 = weeks6.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Weeks weeks24 = weeks22.minus(1030);
        int int25 = weeks22.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 103 + "'", int25 == 103);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.Weeks weeks27 = weeks6.negated();
        org.joda.time.Weeks weeks29 = weeks27.minus((-4));
        org.joda.time.DurationFieldType durationFieldType30 = weeks29.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(durationFieldType30);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType21 = weeks1.getFieldType();
        org.joda.time.Period period22 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks17.minus((int) (byte) 100);
        org.joda.time.Duration duration30 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks31 = weeks1.minus(weeks17);
        org.joda.time.Weeks weeks33 = weeks31.multipliedBy((-3));
        java.lang.Object obj34 = null;
        boolean boolean35 = weeks31.equals(obj34);
        int int36 = weeks31.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        int int8 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks7.plus((int) (short) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        org.joda.time.PeriodType periodType19 = weeks11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        boolean boolean21 = weeks10.isSupported(durationFieldType20);
        org.joda.time.Period period22 = weeks10.toPeriod();
        boolean boolean23 = weeks1.isGreaterThan(weeks10);
        int int24 = weeks10.size();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks31.plus(weeks32);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        boolean boolean49 = weeks31.isGreaterThan(weeks47);
        int int50 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.joda.time.DurationFieldType durationFieldType51 = weeks30.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks53 = weeks30.plus(weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks55.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        boolean boolean63 = weeks55.isLessThan(weeks61);
        org.joda.time.Weeks weeks64 = weeks54.plus(weeks55);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.ONE;
        int int71 = weeks68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks70);
        boolean boolean72 = weeks54.isGreaterThan(weeks70);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType74 = weeks73.getFieldType();
        int int75 = weeks70.get(durationFieldType74);
        org.joda.time.Weeks weeks77 = weeks70.minus((int) (byte) -1);
        org.joda.time.Weeks weeks79 = weeks77.minus((int) '#');
        org.joda.time.Weeks weeks80 = weeks30.minus(weeks77);
        org.joda.time.Weeks weeks81 = weeks10.minus(weeks30);
        org.joda.time.Weeks weeks82 = weeks10.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType10 = weeks0.getPeriodType();
        java.lang.String str11 = weeks0.toString();
        org.joda.time.Weeks weeks13 = weeks0.minus((int) (byte) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType15 = weeks14.getPeriodType();
        org.joda.time.Weeks weeks17 = weeks14.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks19 = weeks14.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod20 = weeks14.toMutablePeriod();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks27.negated();
        org.joda.time.PeriodType periodType31 = weeks30.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType33 = weeks30.getFieldType(0);
        org.joda.time.Weeks weeks34 = weeks14.minus(weeks30);
        org.joda.time.DurationFieldType durationFieldType35 = weeks30.getFieldType();
        boolean boolean36 = weeks0.isSupported(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P3W" + "'", str11, "P3W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType12 = weeks10.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy((int) (byte) -1);
        int int15 = weeks14.size();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks27.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        int int35 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.DurationFieldType durationFieldType36 = weeks30.getFieldType();
        int int37 = weeks29.get(durationFieldType36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        boolean boolean46 = weeks38.isLessThan(weeks44);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.MutablePeriod mutablePeriod49 = weeks48.toMutablePeriod();
        org.joda.time.Weeks weeks50 = weeks44.plus(weeks48);
        int int51 = weeks48.getWeeks();
        org.joda.time.Weeks weeks52 = weeks29.minus(weeks48);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks55 = weeks53.minus(97);
        org.joda.time.Weeks weeks56 = weeks14.plus(weeks53);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-2) + "'", int37 == (-2));
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-3) + "'", int51 == (-3));
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks27 = weeks5.minus(300);
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks30 = weeks27.minus(91);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks30);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int29 = weeks28.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks27 = weeks5.minus(300);
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks27.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.PeriodType periodType29 = weeks0.getPeriodType();
        org.joda.time.Period period30 = weeks0.toPeriod();
        org.joda.time.DurationFieldType durationFieldType32 = weeks0.getFieldType((int) (short) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(durationFieldType32);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks12 = weeks9.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = weeks9.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod15 = weeks9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks9.getFieldType();
        org.joda.time.PeriodType periodType17 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType18 = weeks9.getFieldType();
        boolean boolean19 = weeks8.isSupported(durationFieldType18);
        org.joda.time.Period period20 = weeks8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType21 = weeks8.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks37 = weeks33.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks22.plus(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.dividedBy((int) (short) 100);
        boolean boolean42 = weeks37.equals((java.lang.Object) 1L);
        org.joda.time.MutablePeriod mutablePeriod43 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks45 = weeks37.minus((int) (short) 1);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = weeks47.minus(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.PeriodType periodType53 = weeks51.getPeriodType();
        boolean boolean54 = weeks47.isGreaterThan(weeks51);
        boolean boolean55 = weeks45.equals((java.lang.Object) boolean54);
        org.joda.time.Weeks weeks56 = weeks8.plus(weeks45);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        org.joda.time.Weeks weeks7 = weeks2.minus((-55));
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeks((-1));
        int int10 = weeks9.size();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks15 = weeks13.dividedBy((int) '4');
        int int16 = weeks13.size();
        org.joda.time.Period period17 = weeks13.toPeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks13.getFieldType();
        org.joda.time.Weeks weeks19 = weeks9.minus(weeks13);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean22 = weeks13.isLessThan(weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType25 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks29 = weeks24.dividedBy((int) 'a');
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks30.plus(weeks31);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        int int47 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        boolean boolean48 = weeks30.isGreaterThan(weeks46);
        int int49 = weeks29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.DurationFieldType durationFieldType50 = weeks29.getFieldType();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks52 = weeks29.plus(weeks51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks55.dividedBy((int) '4');
        int int58 = weeks55.size();
        org.joda.time.Period period59 = weeks55.toPeriod();
        org.joda.time.DurationFieldType durationFieldType60 = weeks55.getFieldType();
        org.joda.time.Weeks weeks61 = weeks51.plus(weeks55);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.Weeks weeks67 = weeks64.minus((int) '4');
        org.joda.time.Weeks weeks68 = weeks62.plus(weeks67);
        boolean boolean69 = weeks13.equals((java.lang.Object) weeks68);
        boolean boolean70 = weeks2.isGreaterThan(weeks13);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (short) 10);
        org.joda.time.Weeks weeks5 = weeks3.plus((int) '4');
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = weeks3.isSupported(durationFieldType6);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = weeks0.negated();
        java.lang.String str11 = weeks0.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P3W" + "'", str11, "P3W");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks12 = weeks9.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = weeks9.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod15 = weeks9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks9.getFieldType();
        org.joda.time.PeriodType periodType17 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType18 = weeks9.getFieldType();
        boolean boolean19 = weeks8.isSupported(durationFieldType18);
        org.joda.time.Period period20 = weeks8.toPeriod();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Weeks weeks23 = weeks21.minus(2);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy(1030);
        org.joda.time.Weeks weeks28 = weeks26.plus((int) (byte) 100);
        int int29 = weeks26.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        boolean boolean9 = weeks2.isGreaterThan(weeks7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType11 = weeks10.getFieldType();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = weeks23.toMutablePeriod();
        org.joda.time.Weeks weeks25 = weeks21.plus(weeks23);
        org.joda.time.Weeks weeks26 = weeks10.plus(weeks25);
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.Weeks weeks36 = weeks28.plus(weeks32);
        org.joda.time.Weeks weeks37 = weeks7.minus(weeks32);
        org.joda.time.Weeks weeks39 = weeks7.dividedBy(7);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int31 = weeks3.getValue((int) (short) 0);
        java.lang.String str32 = weeks3.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        int int39 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.Weeks weeks41 = weeks38.plus((int) (short) -1);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks38.minus(weeks45);
        org.joda.time.Weeks weeks50 = weeks38.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks51 = weeks3.minus(weeks50);
        java.lang.Class<?> wildcardClass52 = weeks3.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        org.joda.time.Weeks weeks37 = weeks27.plus(weeks31);
        org.joda.time.Weeks weeks39 = weeks37.plus((-100));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) '4');
        org.joda.time.Minutes minutes2 = weeks1.toStandardMinutes();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        org.joda.time.Weeks weeks37 = weeks27.plus(weeks31);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = weeks27.getValue(101);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 101");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks2.plus((-1));
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        org.joda.time.Weeks weeks15 = weeks7.plus(weeks13);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        int int22 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Weeks weeks24 = weeks21.plus((int) (short) -1);
        int int25 = weeks7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Period period26 = weeks7.toPeriod();
        int int27 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.DurationFieldType durationFieldType29 = weeks7.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks31 = weeks7.dividedBy(25);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks31);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        org.joda.time.Weeks weeks9 = weeks2.dividedBy((int) (byte) 10);
        org.joda.time.Weeks weeks11 = weeks2.minus(101);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType13 = weeks12.getPeriodType();
        org.joda.time.Weeks weeks15 = weeks12.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks17 = weeks12.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod18 = weeks12.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType19 = weeks12.getFieldType();
        org.joda.time.PeriodType periodType20 = weeks12.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType21 = weeks12.getFieldType();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((-1));
        int int24 = weeks23.size();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks27.dividedBy((int) '4');
        int int30 = weeks27.size();
        org.joda.time.Period period31 = weeks27.toPeriod();
        org.joda.time.DurationFieldType durationFieldType32 = weeks27.getFieldType();
        org.joda.time.Weeks weeks33 = weeks23.minus(weeks27);
        org.joda.time.Weeks weeks35 = weeks23.minus((int) (byte) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.DurationFieldType durationFieldType43 = weeks40.getFieldType(0);
        boolean boolean44 = weeks37.isSupported(durationFieldType43);
        boolean boolean45 = weeks23.equals((java.lang.Object) weeks37);
        boolean boolean46 = weeks12.isLessThan(weeks37);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks51 = weeks49.dividedBy((int) '4');
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks56 = weeks54.dividedBy((int) '4');
        int int57 = weeks54.size();
        org.joda.time.Weeks weeks58 = weeks51.plus(weeks54);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.DurationFieldType durationFieldType64 = weeks63.getFieldType();
        org.joda.time.DurationFieldType durationFieldType66 = weeks63.getFieldType(0);
        boolean boolean67 = weeks60.isSupported(durationFieldType66);
        boolean boolean68 = weeks54.isSupported(durationFieldType66);
        org.joda.time.PeriodType periodType69 = weeks54.getPeriodType();
        boolean boolean70 = weeks37.isLessThan(weeks54);
        org.joda.time.Weeks weeks72 = weeks54.minus(101);
        boolean boolean73 = weeks2.equals((java.lang.Object) weeks72);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = weeks11.minus(weeks12);
        boolean boolean15 = weeks0.equals((java.lang.Object) weeks14);
        org.joda.time.DurationFieldType durationFieldType16 = weeks14.getFieldType();
        int int17 = weeks14.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-4) + "'", int17 == (-4));
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Period period8 = weeks3.toPeriod();
        org.joda.time.PeriodType periodType9 = weeks3.getPeriodType();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        int int24 = weeks19.get(durationFieldType23);
        boolean boolean25 = weeks3.isSupported(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = weeks16.plus(weeks22);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks30.plus((int) (short) -1);
        int int34 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        int int35 = weeks33.getWeeks();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = weeks38.get(durationFieldType39);
        int int41 = weeks38.size();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.DurationFieldType durationFieldType45 = weeks44.getFieldType();
        boolean boolean46 = weeks38.isSupported(durationFieldType45);
        int int47 = weeks33.get(durationFieldType45);
        int int48 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks50 = weeks14.dividedBy((-103));
        int int52 = weeks14.getValue((int) (short) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-30) + "'", int52 == (-30));
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType();
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = weeks1.multipliedBy((int) (short) 100);
        java.lang.String str11 = weeks1.toString();
        org.joda.time.Weeks weeks13 = weeks1.minus(3);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        int int19 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks20 = weeks13.minus(weeks16);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        org.joda.time.Weeks weeks27 = weeks23.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.negated();
        org.joda.time.Weeks weeks38 = weeks27.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks41.plus(9);
        org.joda.time.Weeks weeks44 = weeks37.minus(weeks41);
        org.joda.time.Weeks weeks45 = weeks20.minus(weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P32W" + "'", str11, "P32W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Duration duration10 = weeks0.toStandardDuration();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        java.lang.String str18 = weeks14.toString();
        org.joda.time.Period period19 = weeks14.toPeriod();
        org.joda.time.PeriodType periodType20 = weeks14.getPeriodType();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks22 = weeks0.minus(weeks21);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeksIn(readableInterval23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks24.minus(weeks31);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks41 = weeks38.multipliedBy(0);
        org.joda.time.Weeks weeks42 = weeks36.minus(weeks41);
        int int43 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks44 = weeks42.negated();
        org.joda.time.Weeks weeks46 = weeks44.dividedBy(1030);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        boolean boolean48 = weeks0.isGreaterThan(weeks47);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks31.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.MutablePeriod mutablePeriod37 = weeks36.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks34.plus(weeks36);
        org.joda.time.Weeks weeks39 = weeks23.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks38.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks42 = weeks41.negated();
        boolean boolean43 = weeks22.isGreaterThan(weeks41);
        int int44 = weeks22.getWeeks();
        org.joda.time.Weeks weeks46 = weeks22.minus((-13));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType48 = weeks22.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1030 + "'", int44 == 1030);
        org.junit.Assert.assertNotNull(weeks46);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType8 = weeks7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType(0);
        int int11 = weeks0.get(durationFieldType10);
        org.joda.time.PeriodType periodType12 = weeks0.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        boolean boolean22 = weeks20.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks24 = weeks20.plus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = weeks20.negated();
        org.joda.time.Weeks weeks27 = weeks25.multipliedBy(3200);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeksIn(readableInterval28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.minus(weeks36);
        org.joda.time.Weeks weeks41 = weeks39.plus((int) 'a');
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = weeks43.minus(weeks44);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType48 = weeks47.getPeriodType();
        int int49 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks41.plus(weeks47);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeksIn(readableInterval51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        boolean boolean55 = weeks53.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        boolean boolean61 = weeks53.isLessThan(weeks59);
        org.joda.time.Weeks weeks62 = weeks52.minus(weeks59);
        org.joda.time.Weeks weeks64 = weeks62.plus((int) 'a');
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = weeks66.minus(weeks67);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType71 = weeks70.getPeriodType();
        int int72 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks64.plus(weeks70);
        org.joda.time.DurationFieldType durationFieldType74 = weeks64.getFieldType();
        boolean boolean75 = weeks50.isSupported(durationFieldType74);
        boolean boolean76 = weeks27.isLessThan(weeks50);
        org.joda.time.DurationFieldType durationFieldType77 = weeks50.getFieldType();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        org.joda.time.Weeks weeks81 = weeks79.negated();
        org.joda.time.DurationFieldType durationFieldType82 = weeks81.getFieldType();
        int int83 = weeks50.get(durationFieldType82);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 103 + "'", int83 == 103);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        int int8 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks7.plus((int) (short) -1);
        int int11 = weeks7.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        int int26 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Duration duration27 = weeks23.toStandardDuration();
        boolean boolean28 = weeks7.equals((java.lang.Object) duration27);
        int int29 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.Duration duration30 = weeks7.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(duration30);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.MutablePeriod mutablePeriod24 = weeks2.toMutablePeriod();
        org.joda.time.PeriodType periodType25 = weeks2.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.PeriodType periodType19 = weeks17.getPeriodType();
        boolean boolean20 = weeks13.isGreaterThan(weeks17);
        org.joda.time.Weeks weeks22 = weeks17.minus((int) (byte) 0);
        org.joda.time.Weeks weeks23 = weeks10.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks23.multipliedBy(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = weeks23.getFieldType(29);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 29");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        org.joda.time.Weeks weeks9 = weeks2.dividedBy((int) (byte) 10);
        org.joda.time.Weeks weeks11 = weeks2.minus(101);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks51.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks40.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = weeks59.plus(weeks65);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks73.plus((int) (short) -1);
        int int77 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks59.plus((int) (short) 100);
        org.joda.time.Weeks weeks81 = weeks59.multipliedBy(3);
        org.joda.time.Weeks weeks82 = weeks58.minus(weeks59);
        boolean boolean83 = weeks38.isGreaterThan(weeks59);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks86 = weeks59.dividedBy(9);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks13.negated();
        org.joda.time.PeriodType periodType17 = weeks16.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType19 = weeks16.getFieldType(0);
        org.joda.time.Weeks weeks20 = weeks0.minus(weeks16);
        org.joda.time.DurationFieldType durationFieldType21 = weeks16.getFieldType();
        org.joda.time.Weeks weeks23 = weeks16.multipliedBy(900);
        java.lang.String str24 = weeks23.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P2700W" + "'", str24, "P2700W");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType12 = weeks10.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks25 = weeks15.multipliedBy((int) (short) -1);
        boolean boolean26 = weeks14.isLessThan(weeks15);
        boolean boolean27 = weeks10.equals((java.lang.Object) boolean26);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.multipliedBy(0);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Period period6 = weeks4.toPeriod();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = weeks4.compareTo(baseSingleFieldPeriod7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 0);
        java.lang.String str2 = weeks1.toString();
        org.joda.time.Period period3 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P0W" + "'", str2, "P0W");
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = weeks48.getFieldType();
        int int50 = weeks45.get(durationFieldType49);
        org.joda.time.Weeks weeks52 = weeks45.minus((int) (byte) -1);
        org.joda.time.Weeks weeks54 = weeks52.minus((int) '#');
        org.joda.time.Weeks weeks55 = weeks5.minus(weeks52);
        int int56 = weeks5.getWeeks();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = weeks5.plus(weeks57);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.TWO;
        int int61 = weeks60.size();
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.weeksIn(readableInterval62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        boolean boolean66 = weeks64.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        boolean boolean72 = weeks64.isLessThan(weeks70);
        org.joda.time.Weeks weeks73 = weeks63.minus(weeks70);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.MutablePeriod mutablePeriod78 = weeks77.toMutablePeriod();
        org.joda.time.Weeks weeks80 = weeks77.multipliedBy(0);
        org.joda.time.Weeks weeks81 = weeks75.minus(weeks80);
        int int82 = weeks73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks81);
        boolean boolean83 = weeks60.isLessThan(weeks81);
        org.joda.time.Weeks weeks84 = weeks5.minus(weeks81);
        org.joda.time.Weeks weeks86 = weeks5.dividedBy(12);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((-3));
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod31 = weeks25.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType32 = weeks25.getFieldType();
        org.joda.time.PeriodType periodType33 = weeks25.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType34 = weeks25.getFieldType();
        org.joda.time.Weeks weeks35 = weeks25.negated();
        boolean boolean36 = weeks22.isLessThan(weeks35);
        org.joda.time.PeriodType periodType37 = weeks35.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType37);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.TWO;
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks46 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.plus(weeks48);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        int int64 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        boolean boolean65 = weeks47.isGreaterThan(weeks63);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks63.isGreaterThan(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.plus((int) (byte) 100);
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = weeks42.plus(weeks69);
        org.joda.time.Weeks weeks73 = weeks69.dividedBy(900);
        org.joda.time.Period period74 = weeks69.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int76 = weeks69.getValue((-14));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -14");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(period74);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType12 = weeks10.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy((int) (byte) -1);
        int int15 = weeks14.size();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        int int22 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Weeks weeks24 = weeks21.plus((int) (short) -1);
        org.joda.time.Weeks weeks26 = weeks21.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((-1));
        int int34 = weeks33.size();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks37.dividedBy((int) '4');
        int int40 = weeks37.size();
        org.joda.time.Period period41 = weeks37.toPeriod();
        org.joda.time.DurationFieldType durationFieldType42 = weeks37.getFieldType();
        org.joda.time.Weeks weeks43 = weeks33.minus(weeks37);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks50.negated();
        org.joda.time.Weeks weeks54 = weeks33.plus(weeks53);
        boolean boolean55 = weeks30.isLessThan(weeks54);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks60 = weeks58.dividedBy((int) '4');
        int int61 = weeks58.size();
        org.joda.time.Period period62 = weeks58.toPeriod();
        org.joda.time.DurationFieldType durationFieldType63 = weeks58.getFieldType();
        boolean boolean64 = weeks30.isSupported(durationFieldType63);
        int int65 = weeks26.get(durationFieldType63);
        boolean boolean66 = weeks14.equals((java.lang.Object) int65);
        org.joda.time.Period period67 = weeks14.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.DurationFieldType durationFieldType27 = weeks6.getFieldType();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        boolean boolean31 = weeks28.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks32 = weeks6.plus(weeks28);
        org.joda.time.Period period33 = weeks6.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(3);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks37 = weeks33.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks22.plus(weeks37);
        boolean boolean39 = weeks20.equals((java.lang.Object) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks51.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks40.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (short) 100);
        boolean boolean60 = weeks55.equals((java.lang.Object) 1L);
        org.joda.time.MutablePeriod mutablePeriod61 = weeks55.toMutablePeriod();
        org.joda.time.Weeks weeks63 = weeks55.minus((int) (short) 1);
        org.joda.time.Weeks weeks65 = weeks63.dividedBy((int) 'a');
        boolean boolean66 = weeks20.isLessThan(weeks65);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P30W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks3 = weeks1.plus((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = weeks5.toMutablePeriod();
        org.joda.time.Weeks weeks8 = weeks5.plus(0);
        boolean boolean9 = weeks3.equals((java.lang.Object) weeks5);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P1030W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Period period8 = weeks4.toPeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks4.getFieldType();
        org.joda.time.Weeks weeks10 = weeks4.negated();
        int int11 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks4);
        org.joda.time.Weeks weeks13 = weeks1.multipliedBy(1);
        org.joda.time.Period period14 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Duration duration23 = weeks19.toStandardDuration();
        org.joda.time.Weeks weeks25 = weeks19.multipliedBy((-100));
        org.joda.time.Weeks weeks27 = weeks19.plus(103);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks35.minus(weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.PeriodType periodType45 = weeks44.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            int int47 = weeks44.getValue(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(periodType45);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        int int16 = weeks15.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.PeriodType periodType4 = weeks3.getPeriodType();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(300);
        org.joda.time.MutablePeriod mutablePeriod7 = weeks3.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.plus((int) (short) 10);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.DurationFieldType durationFieldType42 = weeks41.getFieldType();
        org.joda.time.DurationFieldType durationFieldType44 = weeks41.getFieldType(0);
        int int45 = weeks35.get(durationFieldType44);
        int int46 = weeks18.get(durationFieldType44);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType48 = weeks18.getFieldType(91);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 91");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.Class<?> wildcardClass7 = weeks5.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        int int44 = weeks43.size();
        org.joda.time.Weeks weeks46 = weeks43.multipliedBy((-3));
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((int) (short) 1);
        org.joda.time.Weeks weeks49 = weeks43.plus(weeks48);
        org.joda.time.Period period50 = weeks43.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod51 = weeks43.toMutablePeriod();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks56 = weeks53.minus((int) '4');
        int int57 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks53);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks2.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = weeks2.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks2.getFieldType();
        org.joda.time.PeriodType periodType10 = weeks2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType11 = weeks2.getFieldType();
        org.joda.time.Weeks weeks12 = weeks2.negated();
        org.joda.time.Weeks weeks14 = weeks2.multipliedBy(300);
        boolean boolean15 = weeks0.equals((java.lang.Object) weeks2);
        org.joda.time.Weeks weeks17 = weeks0.plus((int) (short) 1);
        org.joda.time.Weeks weeks19 = weeks17.multipliedBy(1030);
        java.lang.Class<?> wildcardClass20 = weeks19.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks3 = weeks1.plus((int) (short) 0);
        int int4 = weeks3.size();
        org.joda.time.Weeks weeks6 = weeks3.minus(900);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.plus((int) (short) 0);
        org.joda.time.Duration duration10 = weeks9.toStandardDuration();
        int int11 = weeks9.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((-1));
        int int21 = weeks20.size();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks24.size();
        org.joda.time.Period period28 = weeks24.toPeriod();
        org.joda.time.DurationFieldType durationFieldType29 = weeks24.getFieldType();
        org.joda.time.Weeks weeks30 = weeks20.minus(weeks24);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = weeks20.plus(weeks40);
        boolean boolean42 = weeks17.isLessThan(weeks41);
        org.joda.time.MutablePeriod mutablePeriod43 = weeks17.toMutablePeriod();
        int int44 = weeks17.getWeeks();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType46 = weeks45.getPeriodType();
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks50 = weeks45.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod51 = weeks45.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks45.getFieldType();
        org.joda.time.PeriodType periodType53 = weeks45.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks45.getFieldType();
        int int55 = weeks17.get(durationFieldType54);
        boolean boolean56 = weeks11.equals((java.lang.Object) weeks17);
        org.joda.time.Weeks weeks58 = weeks17.multipliedBy(100);
        org.joda.time.Weeks weeks60 = weeks17.dividedBy((int) 'a');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks0.multipliedBy((int) (short) -1);
        java.lang.Class<?> wildcardClass7 = weeks6.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = weeks6.plus(weeks27);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.parseWeeks("P-4W");
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.MutablePeriod mutablePeriod44 = weeks43.toMutablePeriod();
        org.joda.time.Weeks weeks45 = weeks39.plus(weeks43);
        int int46 = weeks43.getWeeks();
        org.joda.time.DurationFieldType durationFieldType47 = weeks43.getFieldType();
        org.joda.time.Weeks weeks48 = weeks32.minus(weeks43);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType50 = weeks49.getPeriodType();
        org.joda.time.Weeks weeks52 = weeks49.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks54 = weeks49.dividedBy((int) 'a');
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        boolean boolean58 = weeks56.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        java.lang.String str63 = weeks62.toString();
        boolean boolean64 = weeks56.isLessThan(weeks62);
        org.joda.time.Weeks weeks65 = weeks55.plus(weeks56);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        java.lang.String str70 = weeks69.toString();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.ONE;
        int int72 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks71);
        boolean boolean73 = weeks55.isGreaterThan(weeks71);
        int int74 = weeks54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks55);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        boolean boolean77 = weeks75.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks79 = weeks78.negated();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        java.lang.String str82 = weeks81.toString();
        boolean boolean83 = weeks75.isLessThan(weeks81);
        org.joda.time.Weeks weeks84 = weeks81.negated();
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks86 = weeks85.negated();
        org.joda.time.MutablePeriod mutablePeriod87 = weeks86.toMutablePeriod();
        org.joda.time.Weeks weeks88 = weeks84.plus(weeks86);
        org.joda.time.Weeks weeks89 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks84);
        org.joda.time.Weeks weeks90 = weeks54.minus(weeks84);
        org.joda.time.Weeks weeks91 = weeks32.minus(weeks84);
        boolean boolean92 = weeks6.isLessThan(weeks91);
        int int93 = weeks6.getWeeks();
        org.joda.time.DurationFieldType durationFieldType94 = weeks6.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "P-3W" + "'", str63, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P-3W" + "'", str70, "P-3W");
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "P-3W" + "'", str82, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(mutablePeriod87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(durationFieldType94);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = weeks0.minus(1030);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        int int11 = weeks10.size();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks14.dividedBy((int) '4');
        int int17 = weeks14.size();
        org.joda.time.Period period18 = weeks14.toPeriod();
        org.joda.time.DurationFieldType durationFieldType19 = weeks14.getFieldType();
        org.joda.time.Weeks weeks20 = weeks10.minus(weeks14);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks27.negated();
        org.joda.time.Weeks weeks31 = weeks10.plus(weeks30);
        boolean boolean32 = weeks7.isLessThan(weeks31);
        org.joda.time.MutablePeriod mutablePeriod33 = weeks7.toMutablePeriod();
        int int35 = weeks7.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType36 = weeks7.getFieldType();
        int int37 = weeks3.get(durationFieldType36);
        java.lang.Class<?> wildcardClass38 = durationFieldType36.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1027) + "'", int37 == (-1027));
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.String str2 = weeks0.toString();
        org.joda.time.DurationFieldType durationFieldType3 = weeks0.getFieldType();
        org.joda.time.Weeks weeks4 = weeks0.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P3W" + "'", str2, "P3W");
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks51.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks40.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = weeks59.plus(weeks65);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks73.plus((int) (short) -1);
        int int77 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks59.plus((int) (short) 100);
        org.joda.time.Weeks weeks81 = weeks59.multipliedBy(3);
        org.joda.time.Weeks weeks82 = weeks58.minus(weeks59);
        boolean boolean83 = weeks38.isGreaterThan(weeks59);
        int int84 = weeks59.getWeeks();
        // The following exception was thrown during execution in test generation
        try {
            int int86 = weeks59.getValue((-1027));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1027");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 3 + "'", int84 == 3);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        java.lang.String str26 = weeks22.toString();
        org.joda.time.Period period27 = weeks22.toPeriod();
        boolean boolean28 = weeks15.isLessThan(weeks22);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        boolean boolean32 = weeks29.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks34 = weeks29.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = weeks36.minus(weeks37);
        org.joda.time.DurationFieldType durationFieldType40 = weeks37.getFieldType();
        int int41 = weeks34.get(durationFieldType40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks47.plus((int) (short) -1);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        org.joda.time.Weeks weeks54 = weeks51.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks56 = weeks51.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod57 = weeks51.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType58 = weeks51.getFieldType();
        org.joda.time.PeriodType periodType59 = weeks51.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType60 = weeks51.getFieldType();
        boolean boolean61 = weeks50.isSupported(durationFieldType60);
        int int62 = weeks34.get(durationFieldType60);
        org.joda.time.Weeks weeks64 = weeks34.multipliedBy(100);
        boolean boolean65 = weeks15.isLessThan(weeks34);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 300 + "'", int41 == 300);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 300 + "'", int62 == 300);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        boolean boolean30 = weeks27.isSupported(durationFieldType29);
        int int31 = weeks15.get(durationFieldType29);
        org.joda.time.Weeks weeks33 = weeks15.minus((int) ' ');
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        int int48 = weeks45.size();
        org.joda.time.DurationFieldType durationFieldType49 = null;
        boolean boolean50 = weeks45.isSupported(durationFieldType49);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        boolean boolean54 = weeks45.isGreaterThan(weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        int int56 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks55);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks0.get(durationFieldType3);
        org.joda.time.Weeks weeks5 = weeks0.negated();
        java.lang.String str6 = weeks5.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        int int13 = weeks8.get(durationFieldType12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks14.plus(weeks15);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        boolean boolean32 = weeks14.isGreaterThan(weeks30);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType35 = weeks34.getPeriodType();
        org.joda.time.Weeks weeks37 = weeks34.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        boolean boolean56 = weeks38.isGreaterThan(weeks54);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType58 = weeks57.getFieldType();
        int int59 = weeks54.get(durationFieldType58);
        boolean boolean60 = weeks34.isSupported(durationFieldType58);
        boolean boolean61 = weeks14.isSupported(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType62 = weeks14.getFieldType();
        boolean boolean63 = weeks8.isSupported(durationFieldType62);
        java.lang.Class<?> wildcardClass64 = durationFieldType62.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeksIn(readableInterval3);
        int int5 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.Class<?> wildcardClass7 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks0.get(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = weeks6.plus(weeks12);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks20.plus((int) (short) -1);
        int int24 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks6.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks26.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks34.plus(weeks38);
        boolean boolean41 = weeks26.isLessThan(weeks38);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks43.multipliedBy((int) ' ');
        boolean boolean47 = weeks26.isLessThan(weeks43);
        org.joda.time.Period period48 = weeks43.toPeriod();
        boolean boolean49 = weeks5.isGreaterThan(weeks43);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks16 = weeks14.multipliedBy((-2));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks7.plus(weeks8);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        boolean boolean25 = weeks7.isGreaterThan(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Period period27 = weeks7.toPeriod();
        boolean boolean28 = weeks6.equals((java.lang.Object) weeks7);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod29 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = weeks6.compareTo(baseSingleFieldPeriod29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        org.joda.time.Weeks weeks11 = weeks3.minus((int) 'a');
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType7 = weeks6.getPeriodType();
        org.joda.time.Weeks weeks9 = weeks6.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks11 = weeks6.dividedBy((int) 'a');
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        boolean boolean15 = weeks13.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        boolean boolean21 = weeks13.isLessThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks12.plus(weeks13);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        int int29 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        boolean boolean30 = weeks12.isGreaterThan(weeks28);
        int int31 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks12);
        org.joda.time.DurationFieldType durationFieldType32 = weeks11.getFieldType();
        int int33 = weeks5.get(durationFieldType32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = weeks37.minus(weeks38);
        boolean boolean41 = weeks34.isLessThan(weeks37);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType43 = weeks42.getPeriodType();
        org.joda.time.Weeks weeks45 = weeks42.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks47 = weeks42.dividedBy((int) 'a');
        boolean boolean48 = weeks34.isGreaterThan(weeks42);
        int int49 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        boolean boolean50 = weeks1.isLessThan(weeks5);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        org.joda.time.Weeks weeks7 = weeks0.minus((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds8 = weeks0.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 604800");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks24 = weeks20.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks9.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        int int29 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks30 = weeks4.plus(weeks8);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period32 = weeks31.toPeriod();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks37 = weeks35.dividedBy((int) '4');
        org.joda.time.Weeks weeks39 = weeks35.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks40 = weeks31.minus(weeks39);
        org.joda.time.Weeks weeks42 = weeks31.dividedBy((int) ' ');
        java.lang.String str43 = weeks42.toString();
        org.joda.time.DurationFieldType durationFieldType44 = weeks42.getFieldType();
        java.lang.String str45 = weeks42.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType47 = weeks46.getFieldType();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks54.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.MutablePeriod mutablePeriod60 = weeks59.toMutablePeriod();
        org.joda.time.Weeks weeks61 = weeks57.plus(weeks59);
        org.joda.time.Weeks weeks62 = weeks46.plus(weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        boolean boolean66 = weeks64.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        boolean boolean72 = weeks64.isLessThan(weeks70);
        org.joda.time.Weeks weeks73 = weeks63.plus(weeks64);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType75 = weeks74.getFieldType();
        boolean boolean76 = weeks73.isSupported(durationFieldType75);
        int int77 = weeks61.get(durationFieldType75);
        int int78 = weeks42.get(durationFieldType75);
        boolean boolean79 = weeks8.isSupported(durationFieldType75);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P0W" + "'", str43, "P0W");
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P0W" + "'", str45, "P0W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType21 = weeks1.getFieldType();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((-1));
        int int24 = weeks23.size();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks27.dividedBy((int) '4');
        int int30 = weeks27.size();
        org.joda.time.Period period31 = weeks27.toPeriod();
        org.joda.time.DurationFieldType durationFieldType32 = weeks27.getFieldType();
        org.joda.time.Weeks weeks33 = weeks23.minus(weeks27);
        org.joda.time.Weeks weeks35 = weeks23.minus((int) (byte) 100);
        org.joda.time.Duration duration36 = weeks23.toStandardDuration();
        org.joda.time.PeriodType periodType37 = weeks23.getPeriodType();
        boolean boolean38 = weeks1.equals((java.lang.Object) weeks23);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        boolean boolean24 = weeks16.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks25.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks14.plus(weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks31.plus(weeks32);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        boolean boolean44 = weeks41.isSupported(durationFieldType43);
        int int45 = weeks29.get(durationFieldType43);
        int int46 = weeks11.get(durationFieldType43);
        org.joda.time.PeriodType periodType47 = weeks11.getPeriodType();
        org.joda.time.PeriodType periodType48 = weeks11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType50 = weeks11.getFieldType((int) (short) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(durationFieldType50);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = weeks6.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) (short) 10);
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((-2147483648));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        int int14 = weeks13.size();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Period period21 = weeks17.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = weeks17.getFieldType();
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks17);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = weeks13.plus(weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = weeks10.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy((-2));
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType40 = weeks39.getPeriodType();
        org.joda.time.Weeks weeks42 = weeks39.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks44 = weeks39.dividedBy((int) 'a');
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        boolean boolean54 = weeks46.isLessThan(weeks52);
        org.joda.time.Weeks weeks55 = weeks45.plus(weeks46);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.ONE;
        int int62 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        boolean boolean63 = weeks45.isGreaterThan(weeks61);
        int int64 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        java.lang.String str65 = weeks45.toString();
        org.joda.time.Period period66 = weeks45.toPeriod();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks71 = weeks69.minus((int) 'a');
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks73.negated();
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        int int77 = weeks72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks74);
        org.joda.time.DurationFieldType durationFieldType78 = weeks72.getFieldType();
        boolean boolean79 = weeks69.isSupported(durationFieldType78);
        boolean boolean80 = weeks45.isSupported(durationFieldType78);
        boolean boolean81 = weeks35.equals((java.lang.Object) weeks45);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P1W" + "'", str65, "P1W");
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks1.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.DurationFieldType durationFieldType19 = weeks18.getFieldType();
        org.joda.time.DurationFieldType durationFieldType21 = weeks18.getFieldType(0);
        boolean boolean22 = weeks15.isSupported(durationFieldType21);
        boolean boolean23 = weeks1.equals((java.lang.Object) weeks15);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = weeks24.get(durationFieldType27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks31 = weeks24.plus((-927));
        org.joda.time.Weeks weeks33 = weeks31.minus((int) (byte) 10);
        org.joda.time.Weeks weeks34 = weeks1.plus(weeks33);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks1.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType14 = weeks1.getFieldType();
        java.lang.Class<?> wildcardClass15 = durationFieldType14.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeks((-1));
        int int10 = weeks9.size();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks15 = weeks13.dividedBy((int) '4');
        int int16 = weeks13.size();
        org.joda.time.Period period17 = weeks13.toPeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks13.getFieldType();
        org.joda.time.Weeks weeks19 = weeks9.minus(weeks13);
        org.joda.time.Weeks weeks21 = weeks9.minus((int) (byte) 100);
        org.joda.time.Duration duration22 = weeks9.toStandardDuration();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.minus((int) 'a');
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        int int33 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.DurationFieldType durationFieldType34 = weeks28.getFieldType();
        boolean boolean35 = weeks25.isSupported(durationFieldType34);
        boolean boolean36 = weeks9.isSupported(durationFieldType34);
        int int37 = weeks3.get(durationFieldType34);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType39 = weeks3.getFieldType(91);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 91");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.PeriodType periodType29 = weeks0.getPeriodType();
        org.joda.time.Period period30 = weeks0.toPeriod();
        org.joda.time.Duration duration31 = weeks0.toStandardDuration();
        org.joda.time.Weeks weeks32 = weeks0.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(weeks32);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Period period5 = weeks4.toPeriod();
        int int6 = weeks4.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType();
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = weeks1.multipliedBy((int) (short) 100);
        java.lang.String str11 = weeks1.toString();
        org.joda.time.Weeks weeks13 = weeks1.minus(3);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        int int19 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks20 = weeks13.minus(weeks16);
        java.lang.Class<?> wildcardClass21 = weeks13.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P32W" + "'", str11, "P32W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = weeks0.dividedBy((int) ' ');
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeksIn(readableInterval12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks20);
        org.joda.time.Weeks weeks25 = weeks23.plus((int) 'a');
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = weeks27.minus(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.joda.time.Weeks weeks34 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType36 = weeks35.getPeriodType();
        java.lang.String str37 = weeks35.toString();
        org.joda.time.DurationFieldType durationFieldType38 = weeks35.getFieldType();
        boolean boolean39 = weeks31.isLessThan(weeks35);
        boolean boolean40 = weeks0.isGreaterThan(weeks31);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P3W" + "'", str37, "P3W");
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks3 = weeks1.plus((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.minus(0);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = weeks19.minus(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Duration duration26 = weeks22.toStandardDuration();
        org.joda.time.Weeks weeks28 = weeks22.plus(100);
        int int29 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = weeks6.isSupported(durationFieldType30);
        org.joda.time.Weeks weeks33 = weeks6.multipliedBy((-2));
        java.lang.String str34 = weeks33.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-6W" + "'", str34, "P-6W");
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) '4');
        int int33 = weeks30.size();
        org.joda.time.Weeks weeks34 = weeks27.plus(weeks30);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        org.joda.time.DurationFieldType durationFieldType42 = weeks39.getFieldType(0);
        boolean boolean43 = weeks36.isSupported(durationFieldType42);
        boolean boolean44 = weeks30.isSupported(durationFieldType42);
        org.joda.time.PeriodType periodType45 = weeks30.getPeriodType();
        boolean boolean46 = weeks22.equals((java.lang.Object) weeks30);
        org.joda.time.Period period47 = weeks22.toPeriod();
        java.lang.Class<?> wildcardClass48 = period47.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int31 = weeks3.getValue((int) (short) 0);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks36 = weeks34.dividedBy((int) '4');
        int int37 = weeks34.size();
        org.joda.time.Weeks weeks38 = weeks34.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks41.dividedBy((int) '4');
        int int44 = weeks41.size();
        org.joda.time.Weeks weeks45 = weeks41.negated();
        boolean boolean46 = weeks38.isGreaterThan(weeks41);
        org.joda.time.MutablePeriod mutablePeriod47 = weeks41.toMutablePeriod();
        boolean boolean48 = weeks3.isGreaterThan(weeks41);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.MutablePeriod mutablePeriod61 = weeks60.toMutablePeriod();
        org.joda.time.Weeks weeks62 = weeks58.plus(weeks60);
        boolean boolean63 = weeks3.equals((java.lang.Object) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks69 = weeks67.minus((int) 'a');
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        int int75 = weeks70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks72);
        org.joda.time.DurationFieldType durationFieldType76 = weeks70.getFieldType();
        boolean boolean77 = weeks67.isSupported(durationFieldType76);
        boolean boolean78 = weeks3.isSupported(durationFieldType76);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((-1));
        int int44 = weeks43.size();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks47.dividedBy((int) '4');
        int int50 = weeks47.size();
        org.joda.time.Period period51 = weeks47.toPeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks47.getFieldType();
        org.joda.time.Weeks weeks53 = weeks43.minus(weeks47);
        org.joda.time.Weeks weeks55 = weeks43.minus((int) (byte) 100);
        org.joda.time.Duration duration56 = weeks43.toStandardDuration();
        org.joda.time.Weeks weeks57 = weeks5.minus(weeks43);
        org.joda.time.Weeks weeks59 = weeks43.plus((-1027));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks26 = weeks2.multipliedBy((int) (byte) -1);
        org.joda.time.Weeks weeks28 = weeks2.minus(400);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks7 = weeks2.multipliedBy((int) (short) -1);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = weeks8.plus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks22.plus((int) (short) -1);
        int int26 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks8.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks28.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        org.joda.time.Duration duration32 = weeks28.toStandardDuration();
        boolean boolean33 = weeks2.isGreaterThan(weeks28);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType35 = weeks34.getPeriodType();
        org.joda.time.Weeks weeks37 = weeks34.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks39 = weeks34.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod40 = weeks34.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType41 = weeks34.getFieldType();
        org.joda.time.PeriodType periodType42 = weeks34.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType43 = weeks34.getFieldType();
        org.joda.time.Weeks weeks44 = weeks34.negated();
        org.joda.time.Weeks weeks46 = weeks34.dividedBy((-1027));
        int int47 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy((int) '4');
        org.joda.time.Weeks weeks23 = weeks20.negated();
        int int24 = weeks20.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) (byte) 100);
        int int13 = weeks10.size();
        org.joda.time.DurationFieldType durationFieldType14 = weeks10.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(durationFieldType14);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = weeks16.plus(weeks22);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks30.plus((int) (short) -1);
        int int34 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        int int35 = weeks33.getWeeks();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = weeks38.get(durationFieldType39);
        int int41 = weeks38.size();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.DurationFieldType durationFieldType45 = weeks44.getFieldType();
        boolean boolean46 = weeks38.isSupported(durationFieldType45);
        int int47 = weeks33.get(durationFieldType45);
        int int48 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.TWO;
        int int50 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = weeks1.plus((-4));
        org.joda.time.PeriodType periodType4 = weeks3.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        boolean boolean30 = weeks27.isSupported(durationFieldType29);
        int int31 = weeks15.get(durationFieldType29);
        java.lang.Class<?> wildcardClass32 = durationFieldType29.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.PeriodType periodType15 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks16.plus(weeks17);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        boolean boolean34 = weeks16.isGreaterThan(weeks32);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = weeks35.getFieldType();
        int int37 = weeks32.get(durationFieldType36);
        org.joda.time.Weeks weeks39 = weeks32.minus((int) (byte) -1);
        org.joda.time.Weeks weeks41 = weeks39.minus((int) '#');
        org.joda.time.Weeks weeks42 = weeks11.plus(weeks41);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType44 = weeks42.getFieldType(900);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 900");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        java.lang.String str6 = weeks4.toString();
        org.joda.time.Duration duration7 = weeks4.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType8 = weeks4.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-4W" + "'", str6, "P-4W");
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(durationFieldType8);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((-927));
        org.joda.time.PeriodType periodType25 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks(2);
        int int30 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.minus((-1));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        org.joda.time.PeriodType periodType28 = weeks6.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType29 = weeks6.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks6.getFieldType(0);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks35 = weeks32.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks37 = weeks32.dividedBy((int) 'a');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        boolean boolean56 = weeks38.isGreaterThan(weeks54);
        int int57 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        boolean boolean60 = weeks58.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        java.lang.String str65 = weeks64.toString();
        boolean boolean66 = weeks58.isLessThan(weeks64);
        org.joda.time.Weeks weeks67 = weeks64.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.MutablePeriod mutablePeriod70 = weeks69.toMutablePeriod();
        org.joda.time.Weeks weeks71 = weeks67.plus(weeks69);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks73 = weeks37.minus(weeks67);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.weeks((-1));
        int int76 = weeks75.size();
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks78 = weeks77.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks81 = weeks79.dividedBy((int) '4');
        int int82 = weeks79.size();
        org.joda.time.Period period83 = weeks79.toPeriod();
        org.joda.time.DurationFieldType durationFieldType84 = weeks79.getFieldType();
        org.joda.time.Weeks weeks85 = weeks75.minus(weeks79);
        org.joda.time.Weeks weeks87 = weeks75.minus((int) (byte) 100);
        org.joda.time.Duration duration88 = weeks75.toStandardDuration();
        org.joda.time.Weeks weeks89 = weeks37.minus(weeks75);
        org.joda.time.DurationFieldType durationFieldType90 = weeks75.getFieldType();
        boolean boolean91 = weeks6.isSupported(durationFieldType90);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P-3W" + "'", str65, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        org.joda.time.Weeks weeks8 = weeks5.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks10 = weeks5.dividedBy((int) 'a');
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks11.plus(weeks12);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        int int28 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        boolean boolean29 = weeks11.isGreaterThan(weeks27);
        int int30 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.MutablePeriod mutablePeriod43 = weeks42.toMutablePeriod();
        org.joda.time.Weeks weeks44 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks46 = weeks10.minus(weeks40);
        boolean boolean47 = weeks2.isLessThan(weeks10);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        java.lang.String str52 = weeks51.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.weeks((-1));
        int int55 = weeks54.size();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks60 = weeks58.dividedBy((int) '4');
        int int61 = weeks58.size();
        org.joda.time.Period period62 = weeks58.toPeriod();
        org.joda.time.DurationFieldType durationFieldType63 = weeks58.getFieldType();
        org.joda.time.Weeks weeks64 = weeks54.minus(weeks58);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks65.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        boolean boolean73 = weeks65.isLessThan(weeks71);
        org.joda.time.Weeks weeks74 = weeks71.negated();
        org.joda.time.Weeks weeks75 = weeks54.plus(weeks74);
        boolean boolean76 = weeks51.isLessThan(weeks75);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.MutablePeriod mutablePeriod78 = weeks77.toMutablePeriod();
        org.joda.time.Weeks weeks80 = weeks77.multipliedBy((-1027));
        boolean boolean81 = weeks2.equals((java.lang.Object) weeks77);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-3W" + "'", str52, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks6.getPeriodType();
        org.joda.time.Period period11 = weeks6.toPeriod();
        int int12 = weeks6.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-3) + "'", int12 == (-3));
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        boolean boolean20 = weeks15.equals((java.lang.Object) 1L);
        org.joda.time.Weeks weeks22 = weeks15.multipliedBy((-1027));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int31 = weeks3.getValue((int) (short) 0);
        java.lang.String str32 = weeks3.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        int int39 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.Weeks weeks41 = weeks38.plus((int) (short) -1);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks38.minus(weeks45);
        org.joda.time.Weeks weeks50 = weeks38.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks51 = weeks3.minus(weeks50);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        boolean boolean55 = weeks51.isGreaterThan(weeks53);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks36 = weeks25.multipliedBy(3);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks36.plus(weeks43);
        org.joda.time.Weeks weeks48 = weeks36.plus((-3));
        org.joda.time.Weeks weeks50 = weeks36.multipliedBy(200);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType(0);
        org.joda.time.Weeks weeks9 = weeks2.plus(weeks5);
        org.joda.time.Weeks weeks11 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks13 = weeks2.plus((-2));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Duration duration14 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        boolean boolean24 = weeks16.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks15.plus(weeks16);
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = weeks28.minus(weeks29);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.PeriodType periodType34 = weeks32.getPeriodType();
        boolean boolean35 = weeks28.isGreaterThan(weeks32);
        org.joda.time.Weeks weeks37 = weeks32.minus((int) (byte) 0);
        org.joda.time.Weeks weeks38 = weeks25.plus(weeks37);
        boolean boolean39 = weeks11.isGreaterThan(weeks37);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeksIn(readableInterval40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks41.minus(weeks48);
        org.joda.time.Weeks weeks53 = weeks51.plus((int) 'a');
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        boolean boolean56 = weeks54.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        java.lang.String str61 = weeks60.toString();
        boolean boolean62 = weeks54.isLessThan(weeks60);
        org.joda.time.Weeks weeks63 = weeks60.negated();
        org.joda.time.PeriodType periodType64 = weeks63.getPeriodType();
        org.joda.time.Duration duration65 = weeks63.toStandardDuration();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        int int67 = weeks66.getWeeks();
        org.joda.time.DurationFieldType durationFieldType68 = weeks66.getFieldType();
        int int69 = weeks53.get(durationFieldType68);
        boolean boolean70 = weeks11.equals((java.lang.Object) durationFieldType68);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P-3W" + "'", str61, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks3 = weeks1.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.DurationFieldType durationFieldType6 = weeks2.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.PeriodType periodType9 = weeks8.getPeriodType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = weeks11.plus(weeks31);
        org.joda.time.Weeks weeks34 = weeks32.dividedBy((-3));
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType36 = weeks35.getPeriodType();
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks40 = weeks35.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod41 = weeks35.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType42 = weeks35.getFieldType();
        org.joda.time.PeriodType periodType43 = weeks35.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType44 = weeks35.getFieldType();
        org.joda.time.Weeks weeks45 = weeks35.negated();
        boolean boolean46 = weeks32.isLessThan(weeks45);
        org.joda.time.Weeks weeks47 = weeks8.minus(weeks32);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        org.joda.time.Weeks weeks54 = weeks50.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks55 = weeks32.plus(weeks50);
        boolean boolean56 = weeks2.isGreaterThan(weeks32);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks11.minus(1030);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Period period19 = weeks17.toPeriod();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks20.plus(weeks21);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        boolean boolean38 = weeks20.isGreaterThan(weeks36);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        int int41 = weeks36.get(durationFieldType40);
        org.joda.time.Weeks weeks43 = weeks36.minus((int) (byte) -1);
        org.joda.time.Weeks weeks45 = weeks43.minus((int) '#');
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.DurationFieldType durationFieldType49 = weeks48.getFieldType();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = weeks50.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.MutablePeriod mutablePeriod64 = weeks63.toMutablePeriod();
        org.joda.time.Weeks weeks65 = weeks61.plus(weeks63);
        org.joda.time.Weeks weeks66 = weeks50.plus(weeks65);
        org.joda.time.Weeks weeks68 = weeks65.dividedBy((int) (short) 100);
        boolean boolean69 = weeks48.isGreaterThan(weeks65);
        org.joda.time.DurationFieldType durationFieldType70 = weeks48.getFieldType();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        boolean boolean73 = weeks71.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        java.lang.String str78 = weeks77.toString();
        org.joda.time.Weeks weeks79 = weeks71.plus(weeks77);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks81 = weeks80.negated();
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks81);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks81);
        java.lang.String str84 = weeks83.toString();
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.ONE;
        int int86 = weeks83.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks85);
        org.joda.time.Weeks weeks88 = weeks85.plus((int) (short) -1);
        int int89 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks88);
        org.joda.time.Weeks weeks91 = weeks71.plus((int) (short) 100);
        org.joda.time.Weeks weeks93 = weeks91.multipliedBy((int) (short) 10);
        boolean boolean94 = weeks48.isGreaterThan(weeks91);
        org.joda.time.Weeks weeks96 = weeks91.minus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType97 = weeks91.getFieldType();
        boolean boolean98 = weeks45.isSupported(durationFieldType97);
        boolean boolean99 = weeks17.isLessThan(weeks45);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "P-3W" + "'", str78, "P-3W");
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "P-3W" + "'", str84, "P-3W");
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(weeks93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(weeks96);
        org.junit.Assert.assertNotNull(durationFieldType97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int24 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks26 = weeks22.minus((int) (short) 1);
        org.joda.time.Weeks weeks28 = weeks26.minus(2);
        int int29 = weeks26.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.String str2 = weeks0.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = weeks5.minus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.minus((int) 'a');
        org.joda.time.Weeks weeks11 = weeks0.minus(weeks6);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = weeks0.getValue(200);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 200");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P3W" + "'", str2, "P3W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.PeriodType periodType19 = weeks17.getPeriodType();
        boolean boolean20 = weeks13.isGreaterThan(weeks17);
        org.joda.time.Weeks weeks22 = weeks17.minus((int) (byte) 0);
        org.joda.time.Weeks weeks23 = weeks10.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks23.multipliedBy(0);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        boolean boolean29 = weeks27.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        boolean boolean35 = weeks27.isLessThan(weeks33);
        org.joda.time.Weeks weeks36 = weeks26.plus(weeks27);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        boolean boolean44 = weeks26.isGreaterThan(weeks42);
        org.joda.time.Weeks weeks46 = weeks26.plus((int) '#');
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType48 = weeks47.getPeriodType();
        org.joda.time.Weeks weeks50 = weeks47.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks52 = weeks47.dividedBy((int) 'a');
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        boolean boolean56 = weeks54.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        java.lang.String str61 = weeks60.toString();
        boolean boolean62 = weeks54.isLessThan(weeks60);
        org.joda.time.Weeks weeks63 = weeks53.plus(weeks54);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        java.lang.String str68 = weeks67.toString();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.ONE;
        int int70 = weeks67.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks69);
        boolean boolean71 = weeks53.isGreaterThan(weeks69);
        int int72 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks53);
        java.lang.String str73 = weeks53.toString();
        org.joda.time.MutablePeriod mutablePeriod74 = weeks53.toMutablePeriod();
        org.joda.time.PeriodType periodType75 = weeks53.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType76 = weeks53.getFieldType();
        boolean boolean77 = weeks26.isSupported(durationFieldType76);
        int int78 = weeks25.get(durationFieldType76);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P-3W" + "'", str61, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "P-3W" + "'", str68, "P-3W");
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "P1W" + "'", str73, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (short) 10);
        org.joda.time.Weeks weeks5 = weeks3.multipliedBy((int) (short) 100);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeksIn(readableInterval16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks24);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.MutablePeriod mutablePeriod32 = weeks31.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks31.multipliedBy(0);
        org.joda.time.Weeks weeks35 = weeks29.minus(weeks34);
        int int36 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.Weeks weeks37 = weeks27.negated();
        org.joda.time.Weeks weeks38 = weeks27.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks40 = weeks15.plus(weeks27);
        org.joda.time.DurationFieldType durationFieldType42 = weeks40.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType42);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        java.lang.String str21 = weeks0.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        boolean boolean25 = weeks22.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks27 = weeks22.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = weeks29.minus(weeks30);
        org.joda.time.DurationFieldType durationFieldType33 = weeks30.getFieldType();
        int int34 = weeks27.get(durationFieldType33);
        boolean boolean35 = weeks0.isSupported(durationFieldType33);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks40.dividedBy((int) '4');
        int int43 = weeks40.size();
        org.joda.time.Weeks weeks44 = weeks40.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks47.dividedBy((int) '4');
        int int50 = weeks47.size();
        org.joda.time.Weeks weeks51 = weeks47.negated();
        boolean boolean52 = weeks44.isGreaterThan(weeks47);
        org.joda.time.DurationFieldType durationFieldType53 = weeks44.getFieldType();
        int int54 = weeks37.get(durationFieldType53);
        org.joda.time.Duration duration55 = weeks37.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod56 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks58 = weeks37.multipliedBy(900);
        boolean boolean59 = weeks0.isLessThan(weeks58);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType61 = weeks60.getPeriodType();
        org.joda.time.Weeks weeks63 = weeks60.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks65.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        boolean boolean73 = weeks65.isLessThan(weeks71);
        org.joda.time.Weeks weeks74 = weeks64.plus(weeks65);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks76 = weeks75.negated();
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        java.lang.String str79 = weeks78.toString();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.ONE;
        int int81 = weeks78.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks80);
        boolean boolean82 = weeks64.isGreaterThan(weeks80);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType84 = weeks83.getFieldType();
        int int85 = weeks80.get(durationFieldType84);
        boolean boolean86 = weeks60.isSupported(durationFieldType84);
        int int87 = weeks0.get(durationFieldType84);
        org.joda.time.Weeks weeks88 = weeks0.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P3W" + "'", str21, "P3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 300 + "'", int34 == 300);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "P-3W" + "'", str79, "P-3W");
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 3 + "'", int87 == 3);
        org.junit.Assert.assertNotNull(weeks88);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType18 = weeks17.getPeriodType();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = weeks20.minus(weeks21);
        int int24 = weeks23.size();
        java.lang.String str25 = weeks23.toString();
        org.joda.time.Duration duration26 = weeks23.toStandardDuration();
        java.lang.String str27 = weeks23.toString();
        org.joda.time.Weeks weeks28 = weeks17.plus(weeks23);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType30 = weeks29.getFieldType();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.MutablePeriod mutablePeriod43 = weeks42.toMutablePeriod();
        org.joda.time.Weeks weeks44 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks45 = weeks29.plus(weeks44);
        org.joda.time.Weeks weeks47 = weeks44.dividedBy((int) (short) 100);
        boolean boolean49 = weeks44.equals((java.lang.Object) 1L);
        org.joda.time.MutablePeriod mutablePeriod50 = weeks44.toMutablePeriod();
        org.joda.time.Weeks weeks52 = weeks44.minus((int) (short) 1);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = weeks54.minus(weeks55);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.PeriodType periodType60 = weeks58.getPeriodType();
        boolean boolean61 = weeks54.isGreaterThan(weeks58);
        boolean boolean62 = weeks52.equals((java.lang.Object) boolean61);
        boolean boolean63 = weeks28.isLessThan(weeks52);
        int int65 = weeks52.getValue(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-4W" + "'", str25, "P-4W");
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-4W" + "'", str27, "P-4W");
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks35.minus(weeks42);
        org.joda.time.Weeks weeks45 = weeks43.minus(900);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks9.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks9.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        java.lang.String str11 = weeks0.toString();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = weeks12.plus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks26.plus((int) (short) -1);
        int int30 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks12.plus((int) (short) 100);
        org.joda.time.Weeks weeks34 = weeks12.multipliedBy(3);
        org.joda.time.Weeks weeks36 = weeks12.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks38 = weeks36.minus((int) '4');
        boolean boolean39 = weeks0.isGreaterThan(weeks38);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = weeks38.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P1W" + "'", str11, "P1W");
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        org.joda.time.PeriodType periodType44 = weeks0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType46 = weeks0.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(periodType44);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = weeks1.plus((-4));
        org.joda.time.Weeks weeks4 = weeks1.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        org.joda.time.Weeks weeks13 = weeks5.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        int int20 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (short) -1);
        int int23 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks5.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod26 = weeks25.toMutablePeriod();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        boolean boolean29 = weeks27.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        boolean boolean35 = weeks27.isLessThan(weeks33);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks33.plus(weeks37);
        boolean boolean40 = weeks25.isLessThan(weeks37);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) ' ');
        boolean boolean46 = weeks25.isLessThan(weeks42);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        int int52 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        org.joda.time.Weeks weeks54 = weeks49.minus((-55));
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.MutablePeriod mutablePeriod69 = weeks68.toMutablePeriod();
        org.joda.time.Weeks weeks70 = weeks66.plus(weeks68);
        org.joda.time.Weeks weeks71 = weeks55.plus(weeks70);
        org.joda.time.Weeks weeks73 = weeks70.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        java.lang.String str78 = weeks77.toString();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.ONE;
        int int80 = weeks77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks79);
        org.joda.time.Weeks weeks81 = weeks73.plus(weeks77);
        org.joda.time.MutablePeriod mutablePeriod82 = weeks77.toMutablePeriod();
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks84 = weeks54.minus(weeks83);
        int int85 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks83);
        boolean boolean86 = weeks4.isLessThan(weeks83);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "P-3W" + "'", str78, "P-3W");
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(mutablePeriod82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = weeks1.multipliedBy(1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        boolean boolean6 = weeks4.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        java.lang.String str11 = weeks10.toString();
        org.joda.time.Weeks weeks12 = weeks4.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = weeks3.minus(weeks10);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((-13));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P-3W" + "'", str11, "P-3W");
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Days days2 = weeks1.toStandardDays();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = null;
        org.joda.time.Weeks weeks26 = weeks2.plus(weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) ' ');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-4W");
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        boolean boolean6 = weeks4.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        java.lang.String str11 = weeks10.toString();
        boolean boolean12 = weeks4.isLessThan(weeks10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.MutablePeriod mutablePeriod15 = weeks14.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks10.plus(weeks14);
        int int17 = weeks14.getWeeks();
        org.joda.time.DurationFieldType durationFieldType18 = weeks14.getFieldType();
        org.joda.time.Weeks weeks19 = weeks3.minus(weeks14);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType21 = weeks20.getPeriodType();
        org.joda.time.Weeks weeks23 = weeks20.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks25 = weeks20.dividedBy((int) 'a');
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        boolean boolean29 = weeks27.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        boolean boolean35 = weeks27.isLessThan(weeks33);
        org.joda.time.Weeks weeks36 = weeks26.plus(weeks27);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        boolean boolean44 = weeks26.isGreaterThan(weeks42);
        int int45 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        boolean boolean54 = weeks46.isLessThan(weeks52);
        org.joda.time.Weeks weeks55 = weeks52.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.Weeks weeks59 = weeks55.plus(weeks57);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.Weeks weeks61 = weeks25.minus(weeks55);
        org.joda.time.Weeks weeks62 = weeks3.minus(weeks55);
        java.lang.Class<?> wildcardClass63 = weeks62.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P-3W" + "'", str11, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-3) + "'", int17 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.PeriodType periodType29 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks31 = weeks0.dividedBy((-100));
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.minus((int) (byte) 100);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            int int14 = weeks12.getValue((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks12 = weeks9.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = weeks9.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod15 = weeks9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks9.getFieldType();
        org.joda.time.PeriodType periodType17 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType18 = weeks9.getFieldType();
        boolean boolean19 = weeks8.isSupported(durationFieldType18);
        org.joda.time.Weeks weeks21 = weeks8.minus((-927));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks21);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.MutablePeriod mutablePeriod19 = weeks18.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks18.multipliedBy(0);
        org.joda.time.Weeks weeks22 = weeks16.minus(weeks21);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((int) ' ');
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        int int44 = weeks42.getWeeks();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType46 = weeks45.getFieldType();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        boolean boolean49 = weeks47.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        java.lang.String str54 = weeks53.toString();
        boolean boolean55 = weeks47.isLessThan(weeks53);
        org.joda.time.Weeks weeks56 = weeks53.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.MutablePeriod mutablePeriod59 = weeks58.toMutablePeriod();
        org.joda.time.Weeks weeks60 = weeks56.plus(weeks58);
        org.joda.time.Weeks weeks61 = weeks45.plus(weeks60);
        org.joda.time.Weeks weeks63 = weeks60.dividedBy((int) (short) 100);
        boolean boolean64 = weeks42.isGreaterThan(weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.ONE;
        int int71 = weeks68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks70.plus((int) (short) -1);
        org.joda.time.Weeks weeks75 = weeks70.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType77 = weeks75.getFieldType((int) (byte) 0);
        boolean boolean78 = weeks63.isSupported(durationFieldType77);
        boolean boolean79 = weeks24.isSupported(durationFieldType77);
        int int80 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-3W" + "'", str54, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks0.multipliedBy((int) (short) -1);
        int int7 = weeks6.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-3) + "'", int7 == (-3));
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Duration duration17 = weeks15.toStandardDuration();
        org.joda.time.Weeks weeks18 = weeks15.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(weeks18);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int24 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.MutablePeriod mutablePeriod25 = weeks22.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType27 = weeks22.getFieldType(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks1.minus((int) (byte) 100);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        int int19 = weeks18.size();
        org.joda.time.Weeks weeks20 = weeks18.negated();
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks20);
        org.joda.time.Weeks weeks24 = weeks20.plus((int) (byte) 1);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        int int8 = weeks3.size();
        org.joda.time.Weeks weeks9 = null;
        org.joda.time.Weeks weeks10 = weeks3.plus(weeks9);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.parseWeeks("P-4W");
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) (short) 1);
        boolean boolean15 = weeks10.isLessThan(weeks12);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks18 = weeks16.dividedBy((int) '4');
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = weeks16.negated();
        boolean boolean21 = weeks13.isGreaterThan(weeks16);
        org.joda.time.DurationFieldType durationFieldType22 = weeks13.getFieldType();
        int int23 = weeks6.get(durationFieldType22);
        org.joda.time.Weeks weeks25 = weeks6.plus((int) (byte) 100);
        boolean boolean26 = weeks4.isGreaterThan(weeks25);
        org.joda.time.Weeks weeks27 = weeks25.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks25.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean14 = weeks5.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType17 = weeks16.getPeriodType();
        org.joda.time.Weeks weeks19 = weeks16.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks21 = weeks16.dividedBy((int) 'a');
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        java.lang.String str30 = weeks29.toString();
        boolean boolean31 = weeks23.isLessThan(weeks29);
        org.joda.time.Weeks weeks32 = weeks22.plus(weeks23);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        int int39 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        boolean boolean40 = weeks22.isGreaterThan(weeks38);
        int int41 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.DurationFieldType durationFieldType42 = weeks21.getFieldType();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks44 = weeks21.plus(weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks47.dividedBy((int) '4');
        int int50 = weeks47.size();
        org.joda.time.Period period51 = weeks47.toPeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks47.getFieldType();
        org.joda.time.Weeks weeks53 = weeks43.plus(weeks47);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks56.minus((int) '4');
        org.joda.time.Weeks weeks60 = weeks54.plus(weeks59);
        boolean boolean61 = weeks5.equals((java.lang.Object) weeks60);
        org.joda.time.Weeks weeks63 = weeks60.minus((-14));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-3W" + "'", str30, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks63);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        boolean boolean27 = weeks17.equals((java.lang.Object) weeks24);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = weeks28.plus(weeks34);
        org.joda.time.Weeks weeks38 = weeks34.dividedBy(3);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period40 = weeks39.toPeriod();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks43.dividedBy((int) '4');
        org.joda.time.Weeks weeks47 = weeks43.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks48 = weeks39.minus(weeks47);
        boolean boolean49 = weeks34.equals((java.lang.Object) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks54 = weeks52.dividedBy((int) '4');
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks57.dividedBy((int) '4');
        int int60 = weeks57.size();
        org.joda.time.Weeks weeks61 = weeks54.plus(weeks57);
        boolean boolean62 = weeks48.isLessThan(weeks57);
        boolean boolean63 = weeks17.equals((java.lang.Object) boolean62);
        org.joda.time.Duration duration64 = weeks17.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration64);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.Weeks weeks27 = weeks6.negated();
        org.joda.time.Period period28 = weeks27.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks17.minus((int) (byte) 100);
        org.joda.time.Duration duration30 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks31 = weeks1.minus(weeks17);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks35 = weeks32.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks36.plus(weeks37);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.ONE;
        int int53 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks52);
        boolean boolean54 = weeks36.isGreaterThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        int int57 = weeks52.get(durationFieldType56);
        boolean boolean58 = weeks32.isSupported(durationFieldType56);
        org.joda.time.Weeks weeks60 = weeks32.dividedBy((-1));
        boolean boolean61 = weeks1.isGreaterThan(weeks32);
        org.joda.time.Weeks weeks62 = weeks1.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(weeks62);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.PeriodType periodType4 = weeks3.getPeriodType();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(300);
        org.joda.time.Weeks weeks7 = null;
        org.joda.time.Weeks weeks8 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks10 = weeks6.multipliedBy((int) '#');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        int int6 = weeks5.size();
        java.lang.String str7 = weeks5.toString();
        java.lang.String str8 = weeks5.toString();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks10.minus((int) '4');
        org.joda.time.Weeks weeks14 = weeks5.minus(weeks10);
        org.joda.time.Weeks weeks16 = weeks5.minus((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = weeks16.plus(weeks17);
        int int20 = weeks16.getWeeks();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks27.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks30.plus(weeks32);
        int int35 = weeks32.size();
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = weeks32.isSupported(durationFieldType36);
        org.joda.time.Weeks weeks39 = weeks32.multipliedBy((-1027));
        org.joda.time.Weeks weeks40 = weeks16.minus(weeks39);
        boolean boolean41 = weeks1.isGreaterThan(weeks40);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-103) + "'", int20 == (-103));
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy(200);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks14.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks19.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks17.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks6.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.Weeks weeks32 = weeks24.plus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType34 = weeks33.getPeriodType();
        org.joda.time.Weeks weeks36 = weeks33.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks38 = weeks33.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod39 = weeks33.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType40 = weeks33.getFieldType();
        org.joda.time.PeriodType periodType41 = weeks33.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType42 = weeks33.getFieldType();
        org.joda.time.Weeks weeks43 = weeks32.minus(weeks33);
        org.joda.time.Weeks weeks45 = weeks43.multipliedBy((-55));
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        boolean boolean54 = weeks46.isLessThan(weeks52);
        org.joda.time.Weeks weeks55 = weeks52.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.Weeks weeks59 = weeks55.plus(weeks57);
        org.joda.time.Weeks weeks60 = weeks57.negated();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Weeks weeks62 = weeks60.negated();
        int int63 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks60);
        boolean boolean64 = weeks0.isLessThan(weeks45);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.DurationFieldType durationFieldType23 = weeks13.getFieldType();
        org.joda.time.Weeks weeks25 = weeks13.minus(10);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.parseWeeks("P97W");
        boolean boolean28 = weeks13.isLessThan(weeks27);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Days days2 = weeks1.toStandardDays();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Weeks weeks23 = weeks19.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        boolean boolean31 = weeks23.isGreaterThan(weeks26);
        org.joda.time.DurationFieldType durationFieldType32 = weeks23.getFieldType();
        int int33 = weeks16.get(durationFieldType32);
        int int34 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks36 = weeks16.minus(9);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Duration duration38 = weeks36.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P91W" + "'", str37, "P91W");
        org.junit.Assert.assertNotNull(duration38);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        boolean boolean15 = weeks13.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        boolean boolean21 = weeks13.isLessThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = weeks23.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = weeks23.isSupported(durationFieldType28);
        org.joda.time.Weeks weeks30 = weeks22.minus(weeks23);
        boolean boolean31 = weeks6.isLessThan(weeks23);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(weeks32);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((-1));
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks8.dividedBy((int) '4');
        int int11 = weeks8.size();
        org.joda.time.Period period12 = weeks8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType13 = weeks8.getFieldType();
        org.joda.time.Weeks weeks14 = weeks4.minus(weeks8);
        org.joda.time.Weeks weeks16 = weeks14.minus((-3));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks23.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks16.plus(weeks23);
        org.joda.time.Weeks weeks31 = weeks1.plus(weeks16);
        org.joda.time.Weeks weeks33 = weeks16.minus(3);
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks31.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod37 = weeks31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks31.getFieldType();
        org.joda.time.PeriodType periodType39 = weeks31.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType40 = weeks31.getFieldType();
        int int41 = weeks3.get(durationFieldType40);
        org.joda.time.Period period42 = weeks3.toPeriod();
        java.lang.String str43 = weeks3.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.dividedBy(3);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = weeks13.getFieldType();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks26.toMutablePeriod();
        org.joda.time.Weeks weeks28 = weeks24.plus(weeks26);
        org.joda.time.Weeks weeks29 = weeks13.plus(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks32 = weeks31.negated();
        int int33 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.MutablePeriod mutablePeriod34 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks6.plus(weeks32);
        org.joda.time.PeriodType periodType36 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.DurationFieldType durationFieldType38 = weeks37.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType38);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-3));
        org.joda.time.Weeks weeks3 = weeks1.plus(0);
        org.joda.time.DurationFieldType durationFieldType4 = weeks3.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod5 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = weeks6.plus(weeks12);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType18 = weeks17.getPeriodType();
        org.joda.time.Weeks weeks20 = weeks17.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks17.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod23 = weeks17.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks17.getFieldType();
        int int25 = weeks16.get(durationFieldType24);
        int int26 = weeks12.get(durationFieldType24);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = weeks28.minus(weeks29);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        int int34 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Duration duration35 = weeks31.toStandardDuration();
        boolean boolean36 = weeks12.isLessThan(weeks31);
        org.joda.time.Weeks weeks37 = weeks12.negated();
        org.joda.time.Weeks weeks38 = weeks3.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.MutablePeriod mutablePeriod43 = weeks42.toMutablePeriod();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy(0);
        org.joda.time.Weeks weeks46 = weeks40.minus(weeks45);
        int int47 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-3) + "'", int26 == (-3));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.plus(0);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = weeks8.toMutablePeriod();
        org.joda.time.Weeks weeks11 = weeks8.multipliedBy(0);
        org.joda.time.Weeks weeks12 = weeks6.minus(weeks11);
        org.joda.time.Duration duration13 = weeks12.toStandardDuration();
        org.joda.time.Weeks weeks15 = weeks12.minus((int) (byte) 10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks16.plus(weeks17);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        boolean boolean34 = weeks16.isGreaterThan(weeks32);
        int int35 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks36 = weeks1.minus(weeks32);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
    }
}

